//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace tikSystem.Web.Library.MultiLanguage {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceEngineSoap", Namespace="http://tempuri.org/")]
    public partial class ServiceEngine : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLanguageAndConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAllConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMetaImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMetaImageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceEngine() {
            this.Url = global::tikSystem.Web.Library.Properties.Settings.Default.tikSystem_Web_Library_MultiLanguage_ServiceEngine;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveLanguageCompletedEventHandler SaveLanguageCompleted;
        
        /// <remarks/>
        public event UpdateLanguageCompletedEventHandler UpdateLanguageCompleted;
        
        /// <remarks/>
        public event DeleteLanguageCompletedEventHandler DeleteLanguageCompleted;
        
        /// <remarks/>
        public event SaveLanguageAndConfigCompletedEventHandler SaveLanguageAndConfigCompleted;
        
        /// <remarks/>
        public event SearchLanguageCompletedEventHandler SearchLanguageCompleted;
        
        /// <remarks/>
        public event ReadLanguageCompletedEventHandler ReadLanguageCompleted;
        
        /// <remarks/>
        public event AddConfigCompletedEventHandler AddConfigCompleted;
        
        /// <remarks/>
        public event ReadConfigCompletedEventHandler ReadConfigCompleted;
        
        /// <remarks/>
        public event ReadAllConfigCompletedEventHandler ReadAllConfigCompleted;
        
        /// <remarks/>
        public event UpdateConfigCompletedEventHandler UpdateConfigCompleted;
        
        /// <remarks/>
        public event ReadMetaImageCompletedEventHandler ReadMetaImageCompleted;
        
        /// <remarks/>
        public event SaveMetaImageCompletedEventHandler SaveMetaImageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveLanguage(string xmlData, string ApplicationName, string CultureName) {
            object[] results = this.Invoke("SaveLanguage", new object[] {
                        xmlData,
                        ApplicationName,
                        CultureName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLanguageAsync(string xmlData, string ApplicationName, string CultureName) {
            this.SaveLanguageAsync(xmlData, ApplicationName, CultureName, null);
        }
        
        /// <remarks/>
        public void SaveLanguageAsync(string xmlData, string ApplicationName, string CultureName, object userState) {
            if ((this.SaveLanguageOperationCompleted == null)) {
                this.SaveLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLanguageOperationCompleted);
            }
            this.InvokeAsync("SaveLanguage", new object[] {
                        xmlData,
                        ApplicationName,
                        CultureName}, this.SaveLanguageOperationCompleted, userState);
        }
        
        private void OnSaveLanguageOperationCompleted(object arg) {
            if ((this.SaveLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLanguageCompleted(this, new SaveLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLanguage(string ApplicationName, System.Data.DataTable dt, string CultureName) {
            object[] results = this.Invoke("UpdateLanguage", new object[] {
                        ApplicationName,
                        dt,
                        CultureName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLanguageAsync(string ApplicationName, System.Data.DataTable dt, string CultureName) {
            this.UpdateLanguageAsync(ApplicationName, dt, CultureName, null);
        }
        
        /// <remarks/>
        public void UpdateLanguageAsync(string ApplicationName, System.Data.DataTable dt, string CultureName, object userState) {
            if ((this.UpdateLanguageOperationCompleted == null)) {
                this.UpdateLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLanguageOperationCompleted);
            }
            this.InvokeAsync("UpdateLanguage", new object[] {
                        ApplicationName,
                        dt,
                        CultureName}, this.UpdateLanguageOperationCompleted, userState);
        }
        
        private void OnUpdateLanguageOperationCompleted(object arg) {
            if ((this.UpdateLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLanguageCompleted(this, new UpdateLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLanguage(string ApplicationName, string CultureName) {
            object[] results = this.Invoke("DeleteLanguage", new object[] {
                        ApplicationName,
                        CultureName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLanguageAsync(string ApplicationName, string CultureName) {
            this.DeleteLanguageAsync(ApplicationName, CultureName, null);
        }
        
        /// <remarks/>
        public void DeleteLanguageAsync(string ApplicationName, string CultureName, object userState) {
            if ((this.DeleteLanguageOperationCompleted == null)) {
                this.DeleteLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLanguageOperationCompleted);
            }
            this.InvokeAsync("DeleteLanguage", new object[] {
                        ApplicationName,
                        CultureName}, this.DeleteLanguageOperationCompleted, userState);
        }
        
        private void OnDeleteLanguageOperationCompleted(object arg) {
            if ((this.DeleteLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLanguageCompleted(this, new DeleteLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveLanguageAndConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveLanguageAndConfig(string xmlData, string ApplicationName, string CultureName, string imageUrl, string status, string showflag) {
            object[] results = this.Invoke("SaveLanguageAndConfig", new object[] {
                        xmlData,
                        ApplicationName,
                        CultureName,
                        imageUrl,
                        status,
                        showflag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLanguageAndConfigAsync(string xmlData, string ApplicationName, string CultureName, string imageUrl, string status, string showflag) {
            this.SaveLanguageAndConfigAsync(xmlData, ApplicationName, CultureName, imageUrl, status, showflag, null);
        }
        
        /// <remarks/>
        public void SaveLanguageAndConfigAsync(string xmlData, string ApplicationName, string CultureName, string imageUrl, string status, string showflag, object userState) {
            if ((this.SaveLanguageAndConfigOperationCompleted == null)) {
                this.SaveLanguageAndConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLanguageAndConfigOperationCompleted);
            }
            this.InvokeAsync("SaveLanguageAndConfig", new object[] {
                        xmlData,
                        ApplicationName,
                        CultureName,
                        imageUrl,
                        status,
                        showflag}, this.SaveLanguageAndConfigOperationCompleted, userState);
        }
        
        private void OnSaveLanguageAndConfigOperationCompleted(object arg) {
            if ((this.SaveLanguageAndConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLanguageAndConfigCompleted(this, new SaveLanguageAndConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchLanguage(string appName, string language, string searchType, string searchText) {
            object[] results = this.Invoke("SearchLanguage", new object[] {
                        appName,
                        language,
                        searchType,
                        searchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchLanguageAsync(string appName, string language, string searchType, string searchText) {
            this.SearchLanguageAsync(appName, language, searchType, searchText, null);
        }
        
        /// <remarks/>
        public void SearchLanguageAsync(string appName, string language, string searchType, string searchText, object userState) {
            if ((this.SearchLanguageOperationCompleted == null)) {
                this.SearchLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchLanguageOperationCompleted);
            }
            this.InvokeAsync("SearchLanguage", new object[] {
                        appName,
                        language,
                        searchType,
                        searchText}, this.SearchLanguageOperationCompleted, userState);
        }
        
        private void OnSearchLanguageOperationCompleted(object arg) {
            if ((this.SearchLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchLanguageCompleted(this, new SearchLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadLanguage(string ApplicationName, string CultureName) {
            object[] results = this.Invoke("ReadLanguage", new object[] {
                        ApplicationName,
                        CultureName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadLanguageAsync(string ApplicationName, string CultureName) {
            this.ReadLanguageAsync(ApplicationName, CultureName, null);
        }
        
        /// <remarks/>
        public void ReadLanguageAsync(string ApplicationName, string CultureName, object userState) {
            if ((this.ReadLanguageOperationCompleted == null)) {
                this.ReadLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadLanguageOperationCompleted);
            }
            this.InvokeAsync("ReadLanguage", new object[] {
                        ApplicationName,
                        CultureName}, this.ReadLanguageOperationCompleted, userState);
        }
        
        private void OnReadLanguageOperationCompleted(object arg) {
            if ((this.ReadLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadLanguageCompleted(this, new ReadLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddConfig(System.Data.DataSet hNewConfig) {
            object[] results = this.Invoke("AddConfig", new object[] {
                        hNewConfig});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddConfigAsync(System.Data.DataSet hNewConfig) {
            this.AddConfigAsync(hNewConfig, null);
        }
        
        /// <remarks/>
        public void AddConfigAsync(System.Data.DataSet hNewConfig, object userState) {
            if ((this.AddConfigOperationCompleted == null)) {
                this.AddConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConfigOperationCompleted);
            }
            this.InvokeAsync("AddConfig", new object[] {
                        hNewConfig}, this.AddConfigOperationCompleted, userState);
        }
        
        private void OnAddConfigOperationCompleted(object arg) {
            if ((this.AddConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConfigCompleted(this, new AddConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadConfig(string ApplicationName) {
            object[] results = this.Invoke("ReadConfig", new object[] {
                        ApplicationName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadConfigAsync(string ApplicationName) {
            this.ReadConfigAsync(ApplicationName, null);
        }
        
        /// <remarks/>
        public void ReadConfigAsync(string ApplicationName, object userState) {
            if ((this.ReadConfigOperationCompleted == null)) {
                this.ReadConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadConfigOperationCompleted);
            }
            this.InvokeAsync("ReadConfig", new object[] {
                        ApplicationName}, this.ReadConfigOperationCompleted, userState);
        }
        
        private void OnReadConfigOperationCompleted(object arg) {
            if ((this.ReadConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadConfigCompleted(this, new ReadConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadAllConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadAllConfig() {
            object[] results = this.Invoke("ReadAllConfig", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAllConfigAsync() {
            this.ReadAllConfigAsync(null);
        }
        
        /// <remarks/>
        public void ReadAllConfigAsync(object userState) {
            if ((this.ReadAllConfigOperationCompleted == null)) {
                this.ReadAllConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllConfigOperationCompleted);
            }
            this.InvokeAsync("ReadAllConfig", new object[0], this.ReadAllConfigOperationCompleted, userState);
        }
        
        private void OnReadAllConfigOperationCompleted(object arg) {
            if ((this.ReadAllConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAllConfigCompleted(this, new ReadAllConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateConfig(string ApplicationName, System.Data.DataSet updatevalue, string CultureName) {
            object[] results = this.Invoke("UpdateConfig", new object[] {
                        ApplicationName,
                        updatevalue,
                        CultureName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(string ApplicationName, System.Data.DataSet updatevalue, string CultureName) {
            this.UpdateConfigAsync(ApplicationName, updatevalue, CultureName, null);
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(string ApplicationName, System.Data.DataSet updatevalue, string CultureName, object userState) {
            if ((this.UpdateConfigOperationCompleted == null)) {
                this.UpdateConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConfigOperationCompleted);
            }
            this.InvokeAsync("UpdateConfig", new object[] {
                        ApplicationName,
                        updatevalue,
                        CultureName}, this.UpdateConfigOperationCompleted, userState);
        }
        
        private void OnUpdateConfigOperationCompleted(object arg) {
            if ((this.UpdateConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConfigCompleted(this, new UpdateConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadMetaImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadMetaImage(string ApplicationName, string CultureName) {
            object[] results = this.Invoke("ReadMetaImage", new object[] {
                        ApplicationName,
                        CultureName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadMetaImageAsync(string ApplicationName, string CultureName) {
            this.ReadMetaImageAsync(ApplicationName, CultureName, null);
        }
        
        /// <remarks/>
        public void ReadMetaImageAsync(string ApplicationName, string CultureName, object userState) {
            if ((this.ReadMetaImageOperationCompleted == null)) {
                this.ReadMetaImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMetaImageOperationCompleted);
            }
            this.InvokeAsync("ReadMetaImage", new object[] {
                        ApplicationName,
                        CultureName}, this.ReadMetaImageOperationCompleted, userState);
        }
        
        private void OnReadMetaImageOperationCompleted(object arg) {
            if ((this.ReadMetaImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMetaImageCompleted(this, new ReadMetaImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveMetaImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveMetaImage(string ApplicationName, string CultureName, System.Data.DataSet dsImage) {
            object[] results = this.Invoke("SaveMetaImage", new object[] {
                        ApplicationName,
                        CultureName,
                        dsImage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMetaImageAsync(string ApplicationName, string CultureName, System.Data.DataSet dsImage) {
            this.SaveMetaImageAsync(ApplicationName, CultureName, dsImage, null);
        }
        
        /// <remarks/>
        public void SaveMetaImageAsync(string ApplicationName, string CultureName, System.Data.DataSet dsImage, object userState) {
            if ((this.SaveMetaImageOperationCompleted == null)) {
                this.SaveMetaImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMetaImageOperationCompleted);
            }
            this.InvokeAsync("SaveMetaImage", new object[] {
                        ApplicationName,
                        CultureName,
                        dsImage}, this.SaveMetaImageOperationCompleted, userState);
        }
        
        private void OnSaveMetaImageOperationCompleted(object arg) {
            if ((this.SaveMetaImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMetaImageCompleted(this, new SaveMetaImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveLanguageCompletedEventHandler(object sender, SaveLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateLanguageCompletedEventHandler(object sender, UpdateLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteLanguageCompletedEventHandler(object sender, DeleteLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveLanguageAndConfigCompletedEventHandler(object sender, SaveLanguageAndConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLanguageAndConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLanguageAndConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SearchLanguageCompletedEventHandler(object sender, SearchLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadLanguageCompletedEventHandler(object sender, ReadLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddConfigCompletedEventHandler(object sender, AddConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadConfigCompletedEventHandler(object sender, ReadConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadAllConfigCompletedEventHandler(object sender, ReadAllConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAllConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAllConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateConfigCompletedEventHandler(object sender, UpdateConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReadMetaImageCompletedEventHandler(object sender, ReadMetaImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMetaImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMetaImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveMetaImageCompletedEventHandler(object sender, SaveMetaImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMetaImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMetaImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591