//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace tikSystem.Web.Library.tikAeroWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="tikAeroWebServiceSoap", Namespace="http://tikAeroWebMain.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResponseBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(People))]
    public partial class tikAeroWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCoporateSessionProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCorporateAgencyClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAirlinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOriginsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDestinationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityAgencyLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightSummaryAgencyLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseFlightInventorySessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadClientProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditClientProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFlightSubloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfantCapacityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientPassengerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassengerTitlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatMapLayOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormOfPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormOfPaymentSubTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadFormOfPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAirportTimezoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingSaveSubLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaymentSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateNewFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormOfPaymentSubtypeFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItineraryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ItineraryReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUniqueMailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBookingCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBookingPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBookingMultipleFormOfPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecialServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TravelAgentLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencySessionProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientSessionProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaggageFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlownBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialServiceFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SegmentFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoucherTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoucherPaymentCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgencyRegistrationInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarkAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarkDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarkCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarkReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarkSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassengerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueueCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleFlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassengersManifestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public tikAeroWebService() {
            this.Url = global::tikSystem.Web.Library.Properties.Settings.Default.tikSystem_Web_Library_tikAeroWebService_tikAeroService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCoporateSessionProfileCompletedEventHandler GetCoporateSessionProfileCompleted;
        
        /// <remarks/>
        public event GetCorporateAgencyClientsCompletedEventHandler GetCorporateAgencyClientsCompleted;
        
        /// <remarks/>
        public event GetAirlinesCompletedEventHandler GetAirlinesCompleted;
        
        /// <remarks/>
        public event GetOriginsCompletedEventHandler GetOriginsCompleted;
        
        /// <remarks/>
        public event GetDestinationCompletedEventHandler GetDestinationCompleted;
        
        /// <remarks/>
        public event GetAvailabilityCompletedEventHandler GetAvailabilityCompleted;
        
        /// <remarks/>
        public event GetAvailabilityAgencyLoginCompletedEventHandler GetAvailabilityAgencyLoginCompleted;
        
        /// <remarks/>
        public event GetFlightSummaryAgencyLoginCompletedEventHandler GetFlightSummaryAgencyLoginCompleted;
        
        /// <remarks/>
        public event ReleaseFlightInventorySessionCompletedEventHandler ReleaseFlightInventorySessionCompleted;
        
        /// <remarks/>
        public event GetAgencyCodeCompletedEventHandler GetAgencyCodeCompleted;
        
        /// <remarks/>
        public event AddClientProfileCompletedEventHandler AddClientProfileCompleted;
        
        /// <remarks/>
        public event ReadClientProfileCompletedEventHandler ReadClientProfileCompleted;
        
        /// <remarks/>
        public event EditClientProfileCompletedEventHandler EditClientProfileCompleted;
        
        /// <remarks/>
        public event AddFlightCompletedEventHandler AddFlightCompleted;
        
        /// <remarks/>
        public event AddFlightSubloadCompletedEventHandler AddFlightSubloadCompleted;
        
        /// <remarks/>
        public event GetInfantCapacityCompletedEventHandler GetInfantCapacityCompleted;
        
        /// <remarks/>
        public event GetClientCompletedEventHandler GetClientCompleted;
        
        /// <remarks/>
        public event GetClientPassengerCompletedEventHandler GetClientPassengerCompleted;
        
        /// <remarks/>
        public event GetTransactionCompletedEventHandler GetTransactionCompleted;
        
        /// <remarks/>
        public event GetPassengerTitlesCompletedEventHandler GetPassengerTitlesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeCompletedEventHandler GetDocumentTypeCompleted;
        
        /// <remarks/>
        public event GetCountryCompletedEventHandler GetCountryCompleted;
        
        /// <remarks/>
        public event GetLanguagesCompletedEventHandler GetLanguagesCompleted;
        
        /// <remarks/>
        public event GetSeatMapCompletedEventHandler GetSeatMapCompleted;
        
        /// <remarks/>
        public event GetSeatMapLayOutCompletedEventHandler GetSeatMapLayOutCompleted;
        
        /// <remarks/>
        public event GetFormOfPaymentsCompletedEventHandler GetFormOfPaymentsCompleted;
        
        /// <remarks/>
        public event GetFormOfPaymentSubTypesCompletedEventHandler GetFormOfPaymentSubTypesCompleted;
        
        /// <remarks/>
        public event ReadFormOfPaymentCompletedEventHandler ReadFormOfPaymentCompleted;
        
        /// <remarks/>
        public event GetAirportTimezoneCompletedEventHandler GetAirportTimezoneCompleted;
        
        /// <remarks/>
        public event SaveBookingCompletedEventHandler SaveBookingCompleted;
        
        /// <remarks/>
        public event BookingSaveSubLoadCompletedEventHandler BookingSaveSubLoadCompleted;
        
        /// <remarks/>
        public event PaymentSaveCompletedEventHandler PaymentSaveCompleted;
        
        /// <remarks/>
        public event CalculateNewFeesCompletedEventHandler CalculateNewFeesCompleted;
        
        /// <remarks/>
        public event GetVouchersCompletedEventHandler GetVouchersCompleted;
        
        /// <remarks/>
        public event GetFormOfPaymentSubtypeFeesCompletedEventHandler GetFormOfPaymentSubtypeFeesCompleted;
        
        /// <remarks/>
        public event GetItineraryCompletedEventHandler GetItineraryCompleted;
        
        /// <remarks/>
        public event ItineraryReadCompletedEventHandler ItineraryReadCompleted;
        
        /// <remarks/>
        public event QueueMailCompletedEventHandler QueueMailCompleted;
        
        /// <remarks/>
        public event CheckUniqueMailAddressCompletedEventHandler CheckUniqueMailAddressCompleted;
        
        /// <remarks/>
        public event ServiceAuthenticationCompletedEventHandler ServiceAuthenticationCompleted;
        
        /// <remarks/>
        public event SaveBookingCreditCardCompletedEventHandler SaveBookingCreditCardCompleted;
        
        /// <remarks/>
        public event SaveBookingPaymentCompletedEventHandler SaveBookingPaymentCompleted;
        
        /// <remarks/>
        public event SaveBookingMultipleFormOfPaymentCompletedEventHandler SaveBookingMultipleFormOfPaymentCompleted;
        
        /// <remarks/>
        public event BookingLogonCompletedEventHandler BookingLogonCompleted;
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetSpecialServicesCompletedEventHandler GetSpecialServicesCompleted;
        
        /// <remarks/>
        public event TravelAgentLogonCompletedEventHandler TravelAgentLogonCompleted;
        
        /// <remarks/>
        public event UserSaveCompletedEventHandler UserSaveCompleted;
        
        /// <remarks/>
        public event GetAgencySessionProfileCompletedEventHandler GetAgencySessionProfileCompleted;
        
        /// <remarks/>
        public event GetClientSessionProfileCompletedEventHandler GetClientSessionProfileCompleted;
        
        /// <remarks/>
        public event GetFlightSummaryCompletedEventHandler GetFlightSummaryCompleted;
        
        /// <remarks/>
        public event GetBookingsCompletedEventHandler GetBookingsCompleted;
        
        /// <remarks/>
        public event GetActivitiesCompletedEventHandler GetActivitiesCompleted;
        
        /// <remarks/>
        public event GetBaggageFeeCompletedEventHandler GetBaggageFeeCompleted;
        
        /// <remarks/>
        public event GetActiveBookingsCompletedEventHandler GetActiveBookingsCompleted;
        
        /// <remarks/>
        public event GetFlownBookingsCompletedEventHandler GetFlownBookingsCompleted;
        
        /// <remarks/>
        public event GetFeeCompletedEventHandler GetFeeCompleted;
        
        /// <remarks/>
        public event SpecialServiceFeeCompletedEventHandler SpecialServiceFeeCompleted;
        
        /// <remarks/>
        public event SegmentFeeCompletedEventHandler SegmentFeeCompleted;
        
        /// <remarks/>
        public event ClientLogonCompletedEventHandler ClientLogonCompleted;
        
        /// <remarks/>
        public event VoucherTemplateListCompletedEventHandler VoucherTemplateListCompleted;
        
        /// <remarks/>
        public event SaveVoucherCompletedEventHandler SaveVoucherCompleted;
        
        /// <remarks/>
        public event VoucherPaymentCreditCardCompletedEventHandler VoucherPaymentCreditCardCompleted;
        
        /// <remarks/>
        public event ReadVoucherCompletedEventHandler ReadVoucherCompleted;
        
        /// <remarks/>
        public event VoidVoucherCompletedEventHandler VoidVoucherCompleted;
        
        /// <remarks/>
        public event AgencyRegistrationInsertCompletedEventHandler AgencyRegistrationInsertCompleted;
        
        /// <remarks/>
        public event RemarkAddCompletedEventHandler RemarkAddCompleted;
        
        /// <remarks/>
        public event RemarkDeleteCompletedEventHandler RemarkDeleteCompleted;
        
        /// <remarks/>
        public event RemarkCompleteCompletedEventHandler RemarkCompleteCompleted;
        
        /// <remarks/>
        public event RemarkReadCompletedEventHandler RemarkReadCompleted;
        
        /// <remarks/>
        public event RemarkSaveCompletedEventHandler RemarkSaveCompleted;
        
        /// <remarks/>
        public event GetPassengerCompletedEventHandler GetPassengerCompleted;
        
        /// <remarks/>
        public event GetQueueCountCompletedEventHandler GetQueueCountCompleted;
        
        /// <remarks/>
        public event GetSingleFlightCompletedEventHandler GetSingleFlightCompleted;
        
        /// <remarks/>
        public event GetPassengersManifestCompletedEventHandler GetPassengersManifestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetCoporateSessionProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCoporateSessionProfile(string clientId, string lastname, string token) {
            object[] results = this.Invoke("GetCoporateSessionProfile", new object[] {
                        clientId,
                        lastname,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoporateSessionProfileAsync(string clientId, string lastname, string token) {
            this.GetCoporateSessionProfileAsync(clientId, lastname, token, null);
        }
        
        /// <remarks/>
        public void GetCoporateSessionProfileAsync(string clientId, string lastname, string token, object userState) {
            if ((this.GetCoporateSessionProfileOperationCompleted == null)) {
                this.GetCoporateSessionProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoporateSessionProfileOperationCompleted);
            }
            this.InvokeAsync("GetCoporateSessionProfile", new object[] {
                        clientId,
                        lastname,
                        token}, this.GetCoporateSessionProfileOperationCompleted, userState);
        }
        
        private void OnGetCoporateSessionProfileOperationCompleted(object arg) {
            if ((this.GetCoporateSessionProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoporateSessionProfileCompleted(this, new GetCoporateSessionProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetCorporateAgencyClients", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCorporateAgencyClients(string agency, string token) {
            object[] results = this.Invoke("GetCorporateAgencyClients", new object[] {
                        agency,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCorporateAgencyClientsAsync(string agency, string token) {
            this.GetCorporateAgencyClientsAsync(agency, token, null);
        }
        
        /// <remarks/>
        public void GetCorporateAgencyClientsAsync(string agency, string token, object userState) {
            if ((this.GetCorporateAgencyClientsOperationCompleted == null)) {
                this.GetCorporateAgencyClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCorporateAgencyClientsOperationCompleted);
            }
            this.InvokeAsync("GetCorporateAgencyClients", new object[] {
                        agency,
                        token}, this.GetCorporateAgencyClientsOperationCompleted, userState);
        }
        
        private void OnGetCorporateAgencyClientsOperationCompleted(object arg) {
            if ((this.GetCorporateAgencyClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCorporateAgencyClientsCompleted(this, new GetCorporateAgencyClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAirlines", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAirlines(string language, string token) {
            object[] results = this.Invoke("GetAirlines", new object[] {
                        language,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAirlinesAsync(string language, string token) {
            this.GetAirlinesAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetAirlinesAsync(string language, string token, object userState) {
            if ((this.GetAirlinesOperationCompleted == null)) {
                this.GetAirlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirlinesOperationCompleted);
            }
            this.InvokeAsync("GetAirlines", new object[] {
                        language,
                        token}, this.GetAirlinesOperationCompleted, userState);
        }
        
        private void OnGetAirlinesOperationCompleted(object arg) {
            if ((this.GetAirlinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAirlinesCompleted(this, new GetAirlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetOrigins", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Route[] GetOrigins(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token) {
            object[] results = this.Invoke("GetOrigins", new object[] {
                        strLanguage,
                        b2cFlag,
                        b2bFlag,
                        b2EFlag,
                        b2SFlag,
                        APIFlag,
                        token});
            return ((Route[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOriginsAsync(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token) {
            this.GetOriginsAsync(strLanguage, b2cFlag, b2bFlag, b2EFlag, b2SFlag, APIFlag, token, null);
        }
        
        /// <remarks/>
        public void GetOriginsAsync(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token, object userState) {
            if ((this.GetOriginsOperationCompleted == null)) {
                this.GetOriginsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOriginsOperationCompleted);
            }
            this.InvokeAsync("GetOrigins", new object[] {
                        strLanguage,
                        b2cFlag,
                        b2bFlag,
                        b2EFlag,
                        b2SFlag,
                        APIFlag,
                        token}, this.GetOriginsOperationCompleted, userState);
        }
        
        private void OnGetOriginsOperationCompleted(object arg) {
            if ((this.GetOriginsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOriginsCompleted(this, new GetOriginsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetDestination", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Route[] GetDestination(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token) {
            object[] results = this.Invoke("GetDestination", new object[] {
                        strLanguage,
                        b2cFlag,
                        b2bFlag,
                        b2EFlag,
                        b2SFlag,
                        APIFlag,
                        token});
            return ((Route[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDestinationAsync(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token) {
            this.GetDestinationAsync(strLanguage, b2cFlag, b2bFlag, b2EFlag, b2SFlag, APIFlag, token, null);
        }
        
        /// <remarks/>
        public void GetDestinationAsync(string strLanguage, bool b2cFlag, bool b2bFlag, bool b2EFlag, bool b2SFlag, bool APIFlag, string token, object userState) {
            if ((this.GetDestinationOperationCompleted == null)) {
                this.GetDestinationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDestinationOperationCompleted);
            }
            this.InvokeAsync("GetDestination", new object[] {
                        strLanguage,
                        b2cFlag,
                        b2bFlag,
                        b2EFlag,
                        b2SFlag,
                        APIFlag,
                        token}, this.GetDestinationOperationCompleted, userState);
        }
        
        private void OnGetDestinationOperationCompleted(object arg) {
            if ((this.GetDestinationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDestinationCompleted(this, new GetDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAvailability", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAvailability(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string CurrencyCode, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dtSelectedDateFrom, 
                    System.DateTime dtSelectedDateTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelete, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    bool bNoVat) {
            object[] results = this.Invoke("GetAvailability", new object[] {
                        Origin,
                        Destination,
                        DepartDateFrom,
                        DepartDateTo,
                        ReturnDateFrom,
                        ReturnDateTo,
                        DateBooking,
                        Adult,
                        Child,
                        Infant,
                        Other,
                        OtherPassengerType,
                        BoardingClass,
                        BookingClass,
                        DayTimeIndicator,
                        AgencyCode,
                        CurrencyCode,
                        FlightId,
                        FareId,
                        MaxAmount,
                        NonStopOnly,
                        IncludeDeparted,
                        IncludeCancelled,
                        IncludeWaitlisted,
                        IncludeSoldOut,
                        Refundable,
                        GroupFares,
                        ItFaresOnly,
                        bStaffFares,
                        bApplyFareLogic,
                        bUnknownTransit,
                        strTransitPoint,
                        dtSelectedDateFrom,
                        dtSelectedDateTo,
                        strReturn,
                        bMapWithFares,
                        bReturnRefundable,
                        strReturnDayTimeIndicator,
                        PromotionCode,
                        strFareType,
                        bLowest,
                        bLowestClass,
                        bLowestGroup,
                        bShowClosed,
                        bSort,
                        bDelete,
                        strLanguage,
                        strIpAddress,
                        bLowFareFinder,
                        token,
                        bNoVat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityAsync(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string CurrencyCode, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dtSelectedDateFrom, 
                    System.DateTime dtSelectedDateTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelete, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    bool bNoVat) {
            this.GetAvailabilityAsync(Origin, Destination, DepartDateFrom, DepartDateTo, ReturnDateFrom, ReturnDateTo, DateBooking, Adult, Child, Infant, Other, OtherPassengerType, BoardingClass, BookingClass, DayTimeIndicator, AgencyCode, CurrencyCode, FlightId, FareId, MaxAmount, NonStopOnly, IncludeDeparted, IncludeCancelled, IncludeWaitlisted, IncludeSoldOut, Refundable, GroupFares, ItFaresOnly, bStaffFares, bApplyFareLogic, bUnknownTransit, strTransitPoint, dtSelectedDateFrom, dtSelectedDateTo, strReturn, bMapWithFares, bReturnRefundable, strReturnDayTimeIndicator, PromotionCode, strFareType, bLowest, bLowestClass, bLowestGroup, bShowClosed, bSort, bDelete, strLanguage, strIpAddress, bLowFareFinder, token, bNoVat, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityAsync(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string CurrencyCode, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dtSelectedDateFrom, 
                    System.DateTime dtSelectedDateTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelete, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    bool bNoVat, 
                    object userState) {
            if ((this.GetAvailabilityOperationCompleted == null)) {
                this.GetAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetAvailability", new object[] {
                        Origin,
                        Destination,
                        DepartDateFrom,
                        DepartDateTo,
                        ReturnDateFrom,
                        ReturnDateTo,
                        DateBooking,
                        Adult,
                        Child,
                        Infant,
                        Other,
                        OtherPassengerType,
                        BoardingClass,
                        BookingClass,
                        DayTimeIndicator,
                        AgencyCode,
                        CurrencyCode,
                        FlightId,
                        FareId,
                        MaxAmount,
                        NonStopOnly,
                        IncludeDeparted,
                        IncludeCancelled,
                        IncludeWaitlisted,
                        IncludeSoldOut,
                        Refundable,
                        GroupFares,
                        ItFaresOnly,
                        bStaffFares,
                        bApplyFareLogic,
                        bUnknownTransit,
                        strTransitPoint,
                        dtSelectedDateFrom,
                        dtSelectedDateTo,
                        strReturn,
                        bMapWithFares,
                        bReturnRefundable,
                        strReturnDayTimeIndicator,
                        PromotionCode,
                        strFareType,
                        bLowest,
                        bLowestClass,
                        bLowestGroup,
                        bShowClosed,
                        bSort,
                        bDelete,
                        strLanguage,
                        strIpAddress,
                        bLowFareFinder,
                        token,
                        bNoVat}, this.GetAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetAvailabilityOperationCompleted(object arg) {
            if ((this.GetAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityCompleted(this, new GetAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAvailabilityAgencyLogin", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAvailabilityAgencyLogin(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string Password, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dteReturnFrom, 
                    System.DateTime dteReturnTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelet, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    ref string CurrencyCode, 
                    bool bNoVat) {
            object[] results = this.Invoke("GetAvailabilityAgencyLogin", new object[] {
                        Origin,
                        Destination,
                        DepartDateFrom,
                        DepartDateTo,
                        ReturnDateFrom,
                        ReturnDateTo,
                        DateBooking,
                        Adult,
                        Child,
                        Infant,
                        Other,
                        OtherPassengerType,
                        BoardingClass,
                        BookingClass,
                        DayTimeIndicator,
                        AgencyCode,
                        Password,
                        FlightId,
                        FareId,
                        MaxAmount,
                        NonStopOnly,
                        IncludeDeparted,
                        IncludeCancelled,
                        IncludeWaitlisted,
                        IncludeSoldOut,
                        Refundable,
                        GroupFares,
                        ItFaresOnly,
                        bStaffFares,
                        bApplyFareLogic,
                        bUnknownTransit,
                        strTransitPoint,
                        dteReturnFrom,
                        dteReturnTo,
                        strReturn,
                        bMapWithFares,
                        bReturnRefundable,
                        strReturnDayTimeIndicator,
                        PromotionCode,
                        strFareType,
                        bLowest,
                        bLowestClass,
                        bLowestGroup,
                        bShowClosed,
                        bSort,
                        bDelet,
                        strLanguage,
                        strIpAddress,
                        bLowFareFinder,
                        token,
                        CurrencyCode,
                        bNoVat});
            CurrencyCode = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityAgencyLoginAsync(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string Password, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dteReturnFrom, 
                    System.DateTime dteReturnTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelet, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    string CurrencyCode, 
                    bool bNoVat) {
            this.GetAvailabilityAgencyLoginAsync(Origin, Destination, DepartDateFrom, DepartDateTo, ReturnDateFrom, ReturnDateTo, DateBooking, Adult, Child, Infant, Other, OtherPassengerType, BoardingClass, BookingClass, DayTimeIndicator, AgencyCode, Password, FlightId, FareId, MaxAmount, NonStopOnly, IncludeDeparted, IncludeCancelled, IncludeWaitlisted, IncludeSoldOut, Refundable, GroupFares, ItFaresOnly, bStaffFares, bApplyFareLogic, bUnknownTransit, strTransitPoint, dteReturnFrom, dteReturnTo, strReturn, bMapWithFares, bReturnRefundable, strReturnDayTimeIndicator, PromotionCode, strFareType, bLowest, bLowestClass, bLowestGroup, bShowClosed, bSort, bDelet, strLanguage, strIpAddress, bLowFareFinder, token, CurrencyCode, bNoVat, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityAgencyLoginAsync(
                    string Origin, 
                    string Destination, 
                    System.DateTime DepartDateFrom, 
                    System.DateTime DepartDateTo, 
                    System.DateTime ReturnDateFrom, 
                    System.DateTime ReturnDateTo, 
                    System.DateTime DateBooking, 
                    short Adult, 
                    short Child, 
                    short Infant, 
                    short Other, 
                    string OtherPassengerType, 
                    string BoardingClass, 
                    string BookingClass, 
                    string DayTimeIndicator, 
                    string AgencyCode, 
                    string Password, 
                    string FlightId, 
                    string FareId, 
                    double MaxAmount, 
                    bool NonStopOnly, 
                    bool IncludeDeparted, 
                    bool IncludeCancelled, 
                    bool IncludeWaitlisted, 
                    bool IncludeSoldOut, 
                    bool Refundable, 
                    bool GroupFares, 
                    bool ItFaresOnly, 
                    bool bStaffFares, 
                    bool bApplyFareLogic, 
                    bool bUnknownTransit, 
                    string strTransitPoint, 
                    System.DateTime dteReturnFrom, 
                    System.DateTime dteReturnTo, 
                    string strReturn, 
                    bool bMapWithFares, 
                    bool bReturnRefundable, 
                    string strReturnDayTimeIndicator, 
                    string PromotionCode, 
                    string strFareType, 
                    bool bLowest, 
                    bool bLowestClass, 
                    bool bLowestGroup, 
                    bool bShowClosed, 
                    bool bSort, 
                    bool bDelet, 
                    string strLanguage, 
                    string strIpAddress, 
                    bool bLowFareFinder, 
                    string token, 
                    string CurrencyCode, 
                    bool bNoVat, 
                    object userState) {
            if ((this.GetAvailabilityAgencyLoginOperationCompleted == null)) {
                this.GetAvailabilityAgencyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityAgencyLoginOperationCompleted);
            }
            this.InvokeAsync("GetAvailabilityAgencyLogin", new object[] {
                        Origin,
                        Destination,
                        DepartDateFrom,
                        DepartDateTo,
                        ReturnDateFrom,
                        ReturnDateTo,
                        DateBooking,
                        Adult,
                        Child,
                        Infant,
                        Other,
                        OtherPassengerType,
                        BoardingClass,
                        BookingClass,
                        DayTimeIndicator,
                        AgencyCode,
                        Password,
                        FlightId,
                        FareId,
                        MaxAmount,
                        NonStopOnly,
                        IncludeDeparted,
                        IncludeCancelled,
                        IncludeWaitlisted,
                        IncludeSoldOut,
                        Refundable,
                        GroupFares,
                        ItFaresOnly,
                        bStaffFares,
                        bApplyFareLogic,
                        bUnknownTransit,
                        strTransitPoint,
                        dteReturnFrom,
                        dteReturnTo,
                        strReturn,
                        bMapWithFares,
                        bReturnRefundable,
                        strReturnDayTimeIndicator,
                        PromotionCode,
                        strFareType,
                        bLowest,
                        bLowestClass,
                        bLowestGroup,
                        bShowClosed,
                        bSort,
                        bDelet,
                        strLanguage,
                        strIpAddress,
                        bLowFareFinder,
                        token,
                        CurrencyCode,
                        bNoVat}, this.GetAvailabilityAgencyLoginOperationCompleted, userState);
        }
        
        private void OnGetAvailabilityAgencyLoginOperationCompleted(object arg) {
            if ((this.GetAvailabilityAgencyLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityAgencyLoginCompleted(this, new GetAvailabilityAgencyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFlightSummaryAgencyLogin", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlightSummaryAgencyLogin(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token, 
                    string password) {
            object[] results = this.Invoke("GetFlightSummaryAgencyLogin", new object[] {
                        objFlights,
                        passengers,
                        strAgencyCode,
                        flightId,
                        boardPoint,
                        offPoint,
                        airline,
                        flight,
                        boardingClass,
                        bookingClass,
                        flightDate,
                        fareId,
                        currencyCode,
                        isRefundable,
                        isGroupBooking,
                        isNonRevenue,
                        segmentId,
                        idReduction,
                        fareType,
                        language,
                        token,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightSummaryAgencyLoginAsync(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token, 
                    string password) {
            this.GetFlightSummaryAgencyLoginAsync(objFlights, passengers, strAgencyCode, flightId, boardPoint, offPoint, airline, flight, boardingClass, bookingClass, flightDate, fareId, currencyCode, isRefundable, isGroupBooking, isNonRevenue, segmentId, idReduction, fareType, language, token, password, null);
        }
        
        /// <remarks/>
        public void GetFlightSummaryAgencyLoginAsync(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token, 
                    string password, 
                    object userState) {
            if ((this.GetFlightSummaryAgencyLoginOperationCompleted == null)) {
                this.GetFlightSummaryAgencyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightSummaryAgencyLoginOperationCompleted);
            }
            this.InvokeAsync("GetFlightSummaryAgencyLogin", new object[] {
                        objFlights,
                        passengers,
                        strAgencyCode,
                        flightId,
                        boardPoint,
                        offPoint,
                        airline,
                        flight,
                        boardingClass,
                        bookingClass,
                        flightDate,
                        fareId,
                        currencyCode,
                        isRefundable,
                        isGroupBooking,
                        isNonRevenue,
                        segmentId,
                        idReduction,
                        fareType,
                        language,
                        token,
                        password}, this.GetFlightSummaryAgencyLoginOperationCompleted, userState);
        }
        
        private void OnGetFlightSummaryAgencyLoginOperationCompleted(object arg) {
            if ((this.GetFlightSummaryAgencyLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightSummaryAgencyLoginCompleted(this, new GetFlightSummaryAgencyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ReleaseFlightInventorySession", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReleaseFlightInventorySession(string sessionId, string flightId, string bookingClasss, string bookingId, bool releaseTimeOut, bool ReleaseInventory, bool ReleaseBookingLock, string token) {
            object[] results = this.Invoke("ReleaseFlightInventorySession", new object[] {
                        sessionId,
                        flightId,
                        bookingClasss,
                        bookingId,
                        releaseTimeOut,
                        ReleaseInventory,
                        ReleaseBookingLock,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseFlightInventorySessionAsync(string sessionId, string flightId, string bookingClasss, string bookingId, bool releaseTimeOut, bool ReleaseInventory, bool ReleaseBookingLock, string token) {
            this.ReleaseFlightInventorySessionAsync(sessionId, flightId, bookingClasss, bookingId, releaseTimeOut, ReleaseInventory, ReleaseBookingLock, token, null);
        }
        
        /// <remarks/>
        public void ReleaseFlightInventorySessionAsync(string sessionId, string flightId, string bookingClasss, string bookingId, bool releaseTimeOut, bool ReleaseInventory, bool ReleaseBookingLock, string token, object userState) {
            if ((this.ReleaseFlightInventorySessionOperationCompleted == null)) {
                this.ReleaseFlightInventorySessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseFlightInventorySessionOperationCompleted);
            }
            this.InvokeAsync("ReleaseFlightInventorySession", new object[] {
                        sessionId,
                        flightId,
                        bookingClasss,
                        bookingId,
                        releaseTimeOut,
                        ReleaseInventory,
                        ReleaseBookingLock,
                        token}, this.ReleaseFlightInventorySessionOperationCompleted, userState);
        }
        
        private void OnReleaseFlightInventorySessionOperationCompleted(object arg) {
            if ((this.ReleaseFlightInventorySessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseFlightInventorySessionCompleted(this, new ReleaseFlightInventorySessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAgencyCode", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgencyCode(string agencyCode, string token) {
            object[] results = this.Invoke("GetAgencyCode", new object[] {
                        agencyCode,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyCodeAsync(string agencyCode, string token) {
            this.GetAgencyCodeAsync(agencyCode, token, null);
        }
        
        /// <remarks/>
        public void GetAgencyCodeAsync(string agencyCode, string token, object userState) {
            if ((this.GetAgencyCodeOperationCompleted == null)) {
                this.GetAgencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyCodeOperationCompleted);
            }
            this.InvokeAsync("GetAgencyCode", new object[] {
                        agencyCode,
                        token}, this.GetAgencyCodeOperationCompleted, userState);
        }
        
        private void OnGetAgencyCodeOperationCompleted(object arg) {
            if ((this.GetAgencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyCodeCompleted(this, new GetAgencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/AddClientProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddClientProfile(string CreateClientXml, string token) {
            object[] results = this.Invoke("AddClientProfile", new object[] {
                        CreateClientXml,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientProfileAsync(string CreateClientXml, string token) {
            this.AddClientProfileAsync(CreateClientXml, token, null);
        }
        
        /// <remarks/>
        public void AddClientProfileAsync(string CreateClientXml, string token, object userState) {
            if ((this.AddClientProfileOperationCompleted == null)) {
                this.AddClientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientProfileOperationCompleted);
            }
            this.InvokeAsync("AddClientProfile", new object[] {
                        CreateClientXml,
                        token}, this.AddClientProfileOperationCompleted, userState);
        }
        
        private void OnAddClientProfileOperationCompleted(object arg) {
            if ((this.AddClientProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientProfileCompleted(this, new AddClientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ReadClientProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadClientProfile(string clientId, string token) {
            object[] results = this.Invoke("ReadClientProfile", new object[] {
                        clientId,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadClientProfileAsync(string clientId, string token) {
            this.ReadClientProfileAsync(clientId, token, null);
        }
        
        /// <remarks/>
        public void ReadClientProfileAsync(string clientId, string token, object userState) {
            if ((this.ReadClientProfileOperationCompleted == null)) {
                this.ReadClientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadClientProfileOperationCompleted);
            }
            this.InvokeAsync("ReadClientProfile", new object[] {
                        clientId,
                        token}, this.ReadClientProfileOperationCompleted, userState);
        }
        
        private void OnReadClientProfileOperationCompleted(object arg) {
            if ((this.ReadClientProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadClientProfileCompleted(this, new ReadClientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/EditClientProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditClientProfile(string CreateClientXml, string token) {
            object[] results = this.Invoke("EditClientProfile", new object[] {
                        CreateClientXml,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditClientProfileAsync(string CreateClientXml, string token) {
            this.EditClientProfileAsync(CreateClientXml, token, null);
        }
        
        /// <remarks/>
        public void EditClientProfileAsync(string CreateClientXml, string token, object userState) {
            if ((this.EditClientProfileOperationCompleted == null)) {
                this.EditClientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditClientProfileOperationCompleted);
            }
            this.InvokeAsync("EditClientProfile", new object[] {
                        CreateClientXml,
                        token}, this.EditClientProfileOperationCompleted, userState);
        }
        
        private void OnEditClientProfileOperationCompleted(object arg) {
            if ((this.EditClientProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditClientProfileCompleted(this, new EditClientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/AddFlight", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFlight(string agencyCode, string currency, string flightXml, string bookingID, short adults, short children, short infants, short others, string strOthers, string userId, string token, string strIpAddress, string strLanguageCode, bool bNoVat) {
            object[] results = this.Invoke("AddFlight", new object[] {
                        agencyCode,
                        currency,
                        flightXml,
                        bookingID,
                        adults,
                        children,
                        infants,
                        others,
                        strOthers,
                        userId,
                        token,
                        strIpAddress,
                        strLanguageCode,
                        bNoVat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFlightAsync(string agencyCode, string currency, string flightXml, string bookingID, short adults, short children, short infants, short others, string strOthers, string userId, string token, string strIpAddress, string strLanguageCode, bool bNoVat) {
            this.AddFlightAsync(agencyCode, currency, flightXml, bookingID, adults, children, infants, others, strOthers, userId, token, strIpAddress, strLanguageCode, bNoVat, null);
        }
        
        /// <remarks/>
        public void AddFlightAsync(string agencyCode, string currency, string flightXml, string bookingID, short adults, short children, short infants, short others, string strOthers, string userId, string token, string strIpAddress, string strLanguageCode, bool bNoVat, object userState) {
            if ((this.AddFlightOperationCompleted == null)) {
                this.AddFlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFlightOperationCompleted);
            }
            this.InvokeAsync("AddFlight", new object[] {
                        agencyCode,
                        currency,
                        flightXml,
                        bookingID,
                        adults,
                        children,
                        infants,
                        others,
                        strOthers,
                        userId,
                        token,
                        strIpAddress,
                        strLanguageCode,
                        bNoVat}, this.AddFlightOperationCompleted, userState);
        }
        
        private void OnAddFlightOperationCompleted(object arg) {
            if ((this.AddFlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFlightCompleted(this, new AddFlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/AddFlightSubload", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddFlightSubload(string agencyCode, string currency, string flightXml, string bookingID, short adults, short children, short infants, short others, string strOthers, string userId, string token, string strIpAddress, string strLanguageCode, bool bNoVat, string p) {
            object[] results = this.Invoke("AddFlightSubload", new object[] {
                        agencyCode,
                        currency,
                        flightXml,
                        bookingID,
                        adults,
                        children,
                        infants,
                        others,
                        strOthers,
                        userId,
                        token,
                        strIpAddress,
                        strLanguageCode,
                        bNoVat,
                        p});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFlightSubloadAsync(string agencyCode, string currency, string flightXml, string bookingID, short adults, short children, short infants, short others, string strOthers, string userId, string token, string strIpAddress, string strLanguageCode, bool bNoVat, string p) {
            this.AddFlightSubloadAsync(agencyCode, currency, flightXml, bookingID, adults, children, infants, others, strOthers, userId, token, strIpAddress, strLanguageCode, bNoVat, p, null);
        }
        
        /// <remarks/>
        public void AddFlightSubloadAsync(
                    string agencyCode, 
                    string currency, 
                    string flightXml, 
                    string bookingID, 
                    short adults, 
                    short children, 
                    short infants, 
                    short others, 
                    string strOthers, 
                    string userId, 
                    string token, 
                    string strIpAddress, 
                    string strLanguageCode, 
                    bool bNoVat, 
                    string p, 
                    object userState) {
            if ((this.AddFlightSubloadOperationCompleted == null)) {
                this.AddFlightSubloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFlightSubloadOperationCompleted);
            }
            this.InvokeAsync("AddFlightSubload", new object[] {
                        agencyCode,
                        currency,
                        flightXml,
                        bookingID,
                        adults,
                        children,
                        infants,
                        others,
                        strOthers,
                        userId,
                        token,
                        strIpAddress,
                        strLanguageCode,
                        bNoVat,
                        p}, this.AddFlightSubloadOperationCompleted, userState);
        }
        
        private void OnAddFlightSubloadOperationCompleted(object arg) {
            if ((this.AddFlightSubloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFlightSubloadCompleted(this, new AddFlightSubloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetInfantCapacity", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInfantCapacity(string flightId, string originRcd, string destinationRcd, string boardingClass, string token) {
            object[] results = this.Invoke("GetInfantCapacity", new object[] {
                        flightId,
                        originRcd,
                        destinationRcd,
                        boardingClass,
                        token});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfantCapacityAsync(string flightId, string originRcd, string destinationRcd, string boardingClass, string token) {
            this.GetInfantCapacityAsync(flightId, originRcd, destinationRcd, boardingClass, token, null);
        }
        
        /// <remarks/>
        public void GetInfantCapacityAsync(string flightId, string originRcd, string destinationRcd, string boardingClass, string token, object userState) {
            if ((this.GetInfantCapacityOperationCompleted == null)) {
                this.GetInfantCapacityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfantCapacityOperationCompleted);
            }
            this.InvokeAsync("GetInfantCapacity", new object[] {
                        flightId,
                        originRcd,
                        destinationRcd,
                        boardingClass,
                        token}, this.GetInfantCapacityOperationCompleted, userState);
        }
        
        private void OnGetInfantCapacityOperationCompleted(object arg) {
            if ((this.GetInfantCapacityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfantCapacityCompleted(this, new GetInfantCapacityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetClient", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClient(string clientId, string clientNumber, string passengerId, bool bShowRemark, string token) {
            object[] results = this.Invoke("GetClient", new object[] {
                        clientId,
                        clientNumber,
                        passengerId,
                        bShowRemark,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAsync(string clientId, string clientNumber, string passengerId, bool bShowRemark, string token) {
            this.GetClientAsync(clientId, clientNumber, passengerId, bShowRemark, token, null);
        }
        
        /// <remarks/>
        public void GetClientAsync(string clientId, string clientNumber, string passengerId, bool bShowRemark, string token, object userState) {
            if ((this.GetClientOperationCompleted == null)) {
                this.GetClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientOperationCompleted);
            }
            this.InvokeAsync("GetClient", new object[] {
                        clientId,
                        clientNumber,
                        passengerId,
                        bShowRemark,
                        token}, this.GetClientOperationCompleted, userState);
        }
        
        private void OnGetClientOperationCompleted(object arg) {
            if ((this.GetClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientCompleted(this, new GetClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetClientPassenger", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientPassenger(string bookingId, string clientProfileId, string clientNumber, string token) {
            object[] results = this.Invoke("GetClientPassenger", new object[] {
                        bookingId,
                        clientProfileId,
                        clientNumber,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientPassengerAsync(string bookingId, string clientProfileId, string clientNumber, string token) {
            this.GetClientPassengerAsync(bookingId, clientProfileId, clientNumber, token, null);
        }
        
        /// <remarks/>
        public void GetClientPassengerAsync(string bookingId, string clientProfileId, string clientNumber, string token, object userState) {
            if ((this.GetClientPassengerOperationCompleted == null)) {
                this.GetClientPassengerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientPassengerOperationCompleted);
            }
            this.InvokeAsync("GetClientPassenger", new object[] {
                        bookingId,
                        clientProfileId,
                        clientNumber,
                        token}, this.GetClientPassengerOperationCompleted, userState);
        }
        
        private void OnGetClientPassengerOperationCompleted(object arg) {
            if ((this.GetClientPassengerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientPassengerCompleted(this, new GetClientPassengerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetTransaction", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransaction(
                    string strOrigin, 
                    string strDestination, 
                    string strAirline, 
                    string strFlight, 
                    string strSegmentType, 
                    string strClientProfileId, 
                    string strPassengerProfileId, 
                    string strVendor, 
                    string strCreditDebit, 
                    System.DateTime dtFlightFrom, 
                    System.DateTime dtFlightTo, 
                    System.DateTime dtTransactionFrom, 
                    System.DateTime dtTransactionTo, 
                    System.DateTime dtExpiryFrom, 
                    System.DateTime dtExpiryTo, 
                    System.DateTime dtVoidFrom, 
                    System.DateTime dtVoidTo, 
                    int iBatch, 
                    bool bAllVoid, 
                    bool bAllExpired, 
                    bool bAuto, 
                    bool bManual, 
                    bool bAllPoint, 
                    string token) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        strOrigin,
                        strDestination,
                        strAirline,
                        strFlight,
                        strSegmentType,
                        strClientProfileId,
                        strPassengerProfileId,
                        strVendor,
                        strCreditDebit,
                        dtFlightFrom,
                        dtFlightTo,
                        dtTransactionFrom,
                        dtTransactionTo,
                        dtExpiryFrom,
                        dtExpiryTo,
                        dtVoidFrom,
                        dtVoidTo,
                        iBatch,
                        bAllVoid,
                        bAllExpired,
                        bAuto,
                        bManual,
                        bAllPoint,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionAsync(
                    string strOrigin, 
                    string strDestination, 
                    string strAirline, 
                    string strFlight, 
                    string strSegmentType, 
                    string strClientProfileId, 
                    string strPassengerProfileId, 
                    string strVendor, 
                    string strCreditDebit, 
                    System.DateTime dtFlightFrom, 
                    System.DateTime dtFlightTo, 
                    System.DateTime dtTransactionFrom, 
                    System.DateTime dtTransactionTo, 
                    System.DateTime dtExpiryFrom, 
                    System.DateTime dtExpiryTo, 
                    System.DateTime dtVoidFrom, 
                    System.DateTime dtVoidTo, 
                    int iBatch, 
                    bool bAllVoid, 
                    bool bAllExpired, 
                    bool bAuto, 
                    bool bManual, 
                    bool bAllPoint, 
                    string token) {
            this.GetTransactionAsync(strOrigin, strDestination, strAirline, strFlight, strSegmentType, strClientProfileId, strPassengerProfileId, strVendor, strCreditDebit, dtFlightFrom, dtFlightTo, dtTransactionFrom, dtTransactionTo, dtExpiryFrom, dtExpiryTo, dtVoidFrom, dtVoidTo, iBatch, bAllVoid, bAllExpired, bAuto, bManual, bAllPoint, token, null);
        }
        
        /// <remarks/>
        public void GetTransactionAsync(
                    string strOrigin, 
                    string strDestination, 
                    string strAirline, 
                    string strFlight, 
                    string strSegmentType, 
                    string strClientProfileId, 
                    string strPassengerProfileId, 
                    string strVendor, 
                    string strCreditDebit, 
                    System.DateTime dtFlightFrom, 
                    System.DateTime dtFlightTo, 
                    System.DateTime dtTransactionFrom, 
                    System.DateTime dtTransactionTo, 
                    System.DateTime dtExpiryFrom, 
                    System.DateTime dtExpiryTo, 
                    System.DateTime dtVoidFrom, 
                    System.DateTime dtVoidTo, 
                    int iBatch, 
                    bool bAllVoid, 
                    bool bAllExpired, 
                    bool bAuto, 
                    bool bManual, 
                    bool bAllPoint, 
                    string token, 
                    object userState) {
            if ((this.GetTransactionOperationCompleted == null)) {
                this.GetTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionOperationCompleted);
            }
            this.InvokeAsync("GetTransaction", new object[] {
                        strOrigin,
                        strDestination,
                        strAirline,
                        strFlight,
                        strSegmentType,
                        strClientProfileId,
                        strPassengerProfileId,
                        strVendor,
                        strCreditDebit,
                        dtFlightFrom,
                        dtFlightTo,
                        dtTransactionFrom,
                        dtTransactionTo,
                        dtExpiryFrom,
                        dtExpiryTo,
                        dtVoidFrom,
                        dtVoidTo,
                        iBatch,
                        bAllVoid,
                        bAllExpired,
                        bAuto,
                        bManual,
                        bAllPoint,
                        token}, this.GetTransactionOperationCompleted, userState);
        }
        
        private void OnGetTransactionOperationCompleted(object arg) {
            if ((this.GetTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionCompleted(this, new GetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetPassengerTitles", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Title[] GetPassengerTitles(string language, string token) {
            object[] results = this.Invoke("GetPassengerTitles", new object[] {
                        language,
                        token});
            return ((Title[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPassengerTitlesAsync(string language, string token) {
            this.GetPassengerTitlesAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetPassengerTitlesAsync(string language, string token, object userState) {
            if ((this.GetPassengerTitlesOperationCompleted == null)) {
                this.GetPassengerTitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassengerTitlesOperationCompleted);
            }
            this.InvokeAsync("GetPassengerTitles", new object[] {
                        language,
                        token}, this.GetPassengerTitlesOperationCompleted, userState);
        }
        
        private void OnGetPassengerTitlesOperationCompleted(object arg) {
            if ((this.GetPassengerTitlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassengerTitlesCompleted(this, new GetPassengerTitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetDocumentType", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document[] GetDocumentType(string language, string token) {
            object[] results = this.Invoke("GetDocumentType", new object[] {
                        language,
                        token});
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeAsync(string language, string token) {
            this.GetDocumentTypeAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeAsync(string language, string token, object userState) {
            if ((this.GetDocumentTypeOperationCompleted == null)) {
                this.GetDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("GetDocumentType", new object[] {
                        language,
                        token}, this.GetDocumentTypeOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeOperationCompleted(object arg) {
            if ((this.GetDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeCompleted(this, new GetDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetCountry", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Country[] GetCountry(string language, string token) {
            object[] results = this.Invoke("GetCountry", new object[] {
                        language,
                        token});
            return ((Country[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryAsync(string language, string token) {
            this.GetCountryAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetCountryAsync(string language, string token, object userState) {
            if ((this.GetCountryOperationCompleted == null)) {
                this.GetCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryOperationCompleted);
            }
            this.InvokeAsync("GetCountry", new object[] {
                        language,
                        token}, this.GetCountryOperationCompleted, userState);
        }
        
        private void OnGetCountryOperationCompleted(object arg) {
            if ((this.GetCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryCompleted(this, new GetCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetLanguages", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Language[] GetLanguages(string language, string token) {
            object[] results = this.Invoke("GetLanguages", new object[] {
                        language,
                        token});
            return ((Language[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLanguagesAsync(string language, string token) {
            this.GetLanguagesAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetLanguagesAsync(string language, string token, object userState) {
            if ((this.GetLanguagesOperationCompleted == null)) {
                this.GetLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetLanguages", new object[] {
                        language,
                        token}, this.GetLanguagesOperationCompleted, userState);
        }
        
        private void OnGetLanguagesOperationCompleted(object arg) {
            if ((this.GetLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLanguagesCompleted(this, new GetLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetSeatMap", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatMap(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token) {
            object[] results = this.Invoke("GetSeatMap", new object[] {
                        origin,
                        destination,
                        flightId,
                        boardingClass,
                        bookingClass,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatMapAsync(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token) {
            this.GetSeatMapAsync(origin, destination, flightId, boardingClass, bookingClass, token, null);
        }
        
        /// <remarks/>
        public void GetSeatMapAsync(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token, object userState) {
            if ((this.GetSeatMapOperationCompleted == null)) {
                this.GetSeatMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatMapOperationCompleted);
            }
            this.InvokeAsync("GetSeatMap", new object[] {
                        origin,
                        destination,
                        flightId,
                        boardingClass,
                        bookingClass,
                        token}, this.GetSeatMapOperationCompleted, userState);
        }
        
        private void OnGetSeatMapOperationCompleted(object arg) {
            if ((this.GetSeatMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatMapCompleted(this, new GetSeatMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetSeatMapLayOut", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatMapLayOut(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token) {
            object[] results = this.Invoke("GetSeatMapLayOut", new object[] {
                        origin,
                        destination,
                        flightId,
                        boardingClass,
                        bookingClass,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatMapLayOutAsync(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token) {
            this.GetSeatMapLayOutAsync(origin, destination, flightId, boardingClass, bookingClass, token, null);
        }
        
        /// <remarks/>
        public void GetSeatMapLayOutAsync(string origin, string destination, string flightId, string boardingClass, string bookingClass, string token, object userState) {
            if ((this.GetSeatMapLayOutOperationCompleted == null)) {
                this.GetSeatMapLayOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatMapLayOutOperationCompleted);
            }
            this.InvokeAsync("GetSeatMapLayOut", new object[] {
                        origin,
                        destination,
                        flightId,
                        boardingClass,
                        bookingClass,
                        token}, this.GetSeatMapLayOutOperationCompleted, userState);
        }
        
        private void OnGetSeatMapLayOutOperationCompleted(object arg) {
            if ((this.GetSeatMapLayOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatMapLayOutCompleted(this, new GetSeatMapLayOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFormOfPayments", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormOfPayments(string language, string token) {
            object[] results = this.Invoke("GetFormOfPayments", new object[] {
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormOfPaymentsAsync(string language, string token) {
            this.GetFormOfPaymentsAsync(language, token, null);
        }
        
        /// <remarks/>
        public void GetFormOfPaymentsAsync(string language, string token, object userState) {
            if ((this.GetFormOfPaymentsOperationCompleted == null)) {
                this.GetFormOfPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormOfPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetFormOfPayments", new object[] {
                        language,
                        token}, this.GetFormOfPaymentsOperationCompleted, userState);
        }
        
        private void OnGetFormOfPaymentsOperationCompleted(object arg) {
            if ((this.GetFormOfPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormOfPaymentsCompleted(this, new GetFormOfPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFormOfPaymentSubTypes", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormOfPaymentSubTypes(string type, string language, string token) {
            object[] results = this.Invoke("GetFormOfPaymentSubTypes", new object[] {
                        type,
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormOfPaymentSubTypesAsync(string type, string language, string token) {
            this.GetFormOfPaymentSubTypesAsync(type, language, token, null);
        }
        
        /// <remarks/>
        public void GetFormOfPaymentSubTypesAsync(string type, string language, string token, object userState) {
            if ((this.GetFormOfPaymentSubTypesOperationCompleted == null)) {
                this.GetFormOfPaymentSubTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormOfPaymentSubTypesOperationCompleted);
            }
            this.InvokeAsync("GetFormOfPaymentSubTypes", new object[] {
                        type,
                        language,
                        token}, this.GetFormOfPaymentSubTypesOperationCompleted, userState);
        }
        
        private void OnGetFormOfPaymentSubTypesOperationCompleted(object arg) {
            if ((this.GetFormOfPaymentSubTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormOfPaymentSubTypesCompleted(this, new GetFormOfPaymentSubTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ReadFormOfPayment", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadFormOfPayment(string type, string language, string token) {
            object[] results = this.Invoke("ReadFormOfPayment", new object[] {
                        type,
                        language,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadFormOfPaymentAsync(string type, string language, string token) {
            this.ReadFormOfPaymentAsync(type, language, token, null);
        }
        
        /// <remarks/>
        public void ReadFormOfPaymentAsync(string type, string language, string token, object userState) {
            if ((this.ReadFormOfPaymentOperationCompleted == null)) {
                this.ReadFormOfPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadFormOfPaymentOperationCompleted);
            }
            this.InvokeAsync("ReadFormOfPayment", new object[] {
                        type,
                        language,
                        token}, this.ReadFormOfPaymentOperationCompleted, userState);
        }
        
        private void OnReadFormOfPaymentOperationCompleted(object arg) {
            if ((this.ReadFormOfPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadFormOfPaymentCompleted(this, new ReadFormOfPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAirportTimezone", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAirportTimezone(string odOrigin, string language, string token) {
            object[] results = this.Invoke("GetAirportTimezone", new object[] {
                        odOrigin,
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAirportTimezoneAsync(string odOrigin, string language, string token) {
            this.GetAirportTimezoneAsync(odOrigin, language, token, null);
        }
        
        /// <remarks/>
        public void GetAirportTimezoneAsync(string odOrigin, string language, string token, object userState) {
            if ((this.GetAirportTimezoneOperationCompleted == null)) {
                this.GetAirportTimezoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirportTimezoneOperationCompleted);
            }
            this.InvokeAsync("GetAirportTimezone", new object[] {
                        odOrigin,
                        language,
                        token}, this.GetAirportTimezoneOperationCompleted, userState);
        }
        
        private void OnGetAirportTimezoneOperationCompleted(object arg) {
            if ((this.GetAirportTimezoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAirportTimezoneCompleted(this, new GetAirportTimezoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SaveBooking", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBooking(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            object[] results = this.Invoke("SaveBooking", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBookingAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            this.SaveBookingAsync(strBooking, createTickets, readBooking, readOnly, token, null);
        }
        
        /// <remarks/>
        public void SaveBookingAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token, object userState) {
            if ((this.SaveBookingOperationCompleted == null)) {
                this.SaveBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBookingOperationCompleted);
            }
            this.InvokeAsync("SaveBooking", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token}, this.SaveBookingOperationCompleted, userState);
        }
        
        private void OnSaveBookingOperationCompleted(object arg) {
            if ((this.SaveBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBookingCompleted(this, new SaveBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/BookingSaveSubLoad", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BookingSaveSubLoad(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            object[] results = this.Invoke("BookingSaveSubLoad", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingSaveSubLoadAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            this.BookingSaveSubLoadAsync(strBooking, createTickets, readBooking, readOnly, token, null);
        }
        
        /// <remarks/>
        public void BookingSaveSubLoadAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token, object userState) {
            if ((this.BookingSaveSubLoadOperationCompleted == null)) {
                this.BookingSaveSubLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingSaveSubLoadOperationCompleted);
            }
            this.InvokeAsync("BookingSaveSubLoad", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token}, this.BookingSaveSubLoadOperationCompleted, userState);
        }
        
        private void OnBookingSaveSubLoadOperationCompleted(object arg) {
            if ((this.BookingSaveSubLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingSaveSubLoadCompleted(this, new BookingSaveSubLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/PaymentSave", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PaymentSave(string strBooking, string token) {
            object[] results = this.Invoke("PaymentSave", new object[] {
                        strBooking,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PaymentSaveAsync(string strBooking, string token) {
            this.PaymentSaveAsync(strBooking, token, null);
        }
        
        /// <remarks/>
        public void PaymentSaveAsync(string strBooking, string token, object userState) {
            if ((this.PaymentSaveOperationCompleted == null)) {
                this.PaymentSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentSaveOperationCompleted);
            }
            this.InvokeAsync("PaymentSave", new object[] {
                        strBooking,
                        token}, this.PaymentSaveOperationCompleted, userState);
        }
        
        private void OnPaymentSaveOperationCompleted(object arg) {
            if ((this.PaymentSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentSaveCompleted(this, new PaymentSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/CalculateNewFees", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateNewFees(string AgencyCode, string currency, System.Data.DataSet dsBooking, bool checkBooking, bool checkSegment, bool checkName, bool checkSeat, bool checkSpecialService, string language, string token, bool bNovat) {
            object[] results = this.Invoke("CalculateNewFees", new object[] {
                        AgencyCode,
                        currency,
                        dsBooking,
                        checkBooking,
                        checkSegment,
                        checkName,
                        checkSeat,
                        checkSpecialService,
                        language,
                        token,
                        bNovat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateNewFeesAsync(string AgencyCode, string currency, System.Data.DataSet dsBooking, bool checkBooking, bool checkSegment, bool checkName, bool checkSeat, bool checkSpecialService, string language, string token, bool bNovat) {
            this.CalculateNewFeesAsync(AgencyCode, currency, dsBooking, checkBooking, checkSegment, checkName, checkSeat, checkSpecialService, language, token, bNovat, null);
        }
        
        /// <remarks/>
        public void CalculateNewFeesAsync(string AgencyCode, string currency, System.Data.DataSet dsBooking, bool checkBooking, bool checkSegment, bool checkName, bool checkSeat, bool checkSpecialService, string language, string token, bool bNovat, object userState) {
            if ((this.CalculateNewFeesOperationCompleted == null)) {
                this.CalculateNewFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateNewFeesOperationCompleted);
            }
            this.InvokeAsync("CalculateNewFees", new object[] {
                        AgencyCode,
                        currency,
                        dsBooking,
                        checkBooking,
                        checkSegment,
                        checkName,
                        checkSeat,
                        checkSpecialService,
                        language,
                        token,
                        bNovat}, this.CalculateNewFeesOperationCompleted, userState);
        }
        
        private void OnCalculateNewFeesOperationCompleted(object arg) {
            if ((this.CalculateNewFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateNewFeesCompleted(this, new CalculateNewFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetVouchers", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVouchers(
                    string recordLocator, 
                    string voucherNumber, 
                    string voucherID, 
                    string status, 
                    string recipient, 
                    string fOPSubType, 
                    string clientProfileId, 
                    string currency, 
                    string password, 
                    bool includeOpenVoucher, 
                    bool includeExpiredVoucher, 
                    bool includeUsedVoucher, 
                    bool includeVoidedVoucher, 
                    bool includeRefundable, 
                    bool includeFareOnly, 
                    bool write, 
                    string strAgencyCode, 
                    string token) {
            object[] results = this.Invoke("GetVouchers", new object[] {
                        recordLocator,
                        voucherNumber,
                        voucherID,
                        status,
                        recipient,
                        fOPSubType,
                        clientProfileId,
                        currency,
                        password,
                        includeOpenVoucher,
                        includeExpiredVoucher,
                        includeUsedVoucher,
                        includeVoidedVoucher,
                        includeRefundable,
                        includeFareOnly,
                        write,
                        strAgencyCode,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVouchersAsync(
                    string recordLocator, 
                    string voucherNumber, 
                    string voucherID, 
                    string status, 
                    string recipient, 
                    string fOPSubType, 
                    string clientProfileId, 
                    string currency, 
                    string password, 
                    bool includeOpenVoucher, 
                    bool includeExpiredVoucher, 
                    bool includeUsedVoucher, 
                    bool includeVoidedVoucher, 
                    bool includeRefundable, 
                    bool includeFareOnly, 
                    bool write, 
                    string strAgencyCode, 
                    string token) {
            this.GetVouchersAsync(recordLocator, voucherNumber, voucherID, status, recipient, fOPSubType, clientProfileId, currency, password, includeOpenVoucher, includeExpiredVoucher, includeUsedVoucher, includeVoidedVoucher, includeRefundable, includeFareOnly, write, strAgencyCode, token, null);
        }
        
        /// <remarks/>
        public void GetVouchersAsync(
                    string recordLocator, 
                    string voucherNumber, 
                    string voucherID, 
                    string status, 
                    string recipient, 
                    string fOPSubType, 
                    string clientProfileId, 
                    string currency, 
                    string password, 
                    bool includeOpenVoucher, 
                    bool includeExpiredVoucher, 
                    bool includeUsedVoucher, 
                    bool includeVoidedVoucher, 
                    bool includeRefundable, 
                    bool includeFareOnly, 
                    bool write, 
                    string strAgencyCode, 
                    string token, 
                    object userState) {
            if ((this.GetVouchersOperationCompleted == null)) {
                this.GetVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVouchersOperationCompleted);
            }
            this.InvokeAsync("GetVouchers", new object[] {
                        recordLocator,
                        voucherNumber,
                        voucherID,
                        status,
                        recipient,
                        fOPSubType,
                        clientProfileId,
                        currency,
                        password,
                        includeOpenVoucher,
                        includeExpiredVoucher,
                        includeUsedVoucher,
                        includeVoidedVoucher,
                        includeRefundable,
                        includeFareOnly,
                        write,
                        strAgencyCode,
                        token}, this.GetVouchersOperationCompleted, userState);
        }
        
        private void OnGetVouchersOperationCompleted(object arg) {
            if ((this.GetVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVouchersCompleted(this, new GetVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFormOfPaymentSubtypeFees", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFormOfPaymentSubtypeFees(string formOfPayment, string formOfPaymentSubtype, string currencyRcd, string agency, System.DateTime feeDate, string token) {
            object[] results = this.Invoke("GetFormOfPaymentSubtypeFees", new object[] {
                        formOfPayment,
                        formOfPaymentSubtype,
                        currencyRcd,
                        agency,
                        feeDate,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormOfPaymentSubtypeFeesAsync(string formOfPayment, string formOfPaymentSubtype, string currencyRcd, string agency, System.DateTime feeDate, string token) {
            this.GetFormOfPaymentSubtypeFeesAsync(formOfPayment, formOfPaymentSubtype, currencyRcd, agency, feeDate, token, null);
        }
        
        /// <remarks/>
        public void GetFormOfPaymentSubtypeFeesAsync(string formOfPayment, string formOfPaymentSubtype, string currencyRcd, string agency, System.DateTime feeDate, string token, object userState) {
            if ((this.GetFormOfPaymentSubtypeFeesOperationCompleted == null)) {
                this.GetFormOfPaymentSubtypeFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormOfPaymentSubtypeFeesOperationCompleted);
            }
            this.InvokeAsync("GetFormOfPaymentSubtypeFees", new object[] {
                        formOfPayment,
                        formOfPaymentSubtype,
                        currencyRcd,
                        agency,
                        feeDate,
                        token}, this.GetFormOfPaymentSubtypeFeesOperationCompleted, userState);
        }
        
        private void OnGetFormOfPaymentSubtypeFeesOperationCompleted(object arg) {
            if ((this.GetFormOfPaymentSubtypeFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormOfPaymentSubtypeFeesCompleted(this, new GetFormOfPaymentSubtypeFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetItinerary", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItinerary(string bookingId, string language, string passengerId, string agencyCode, string token) {
            object[] results = this.Invoke("GetItinerary", new object[] {
                        bookingId,
                        language,
                        passengerId,
                        agencyCode,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItineraryAsync(string bookingId, string language, string passengerId, string agencyCode, string token) {
            this.GetItineraryAsync(bookingId, language, passengerId, agencyCode, token, null);
        }
        
        /// <remarks/>
        public void GetItineraryAsync(string bookingId, string language, string passengerId, string agencyCode, string token, object userState) {
            if ((this.GetItineraryOperationCompleted == null)) {
                this.GetItineraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItineraryOperationCompleted);
            }
            this.InvokeAsync("GetItinerary", new object[] {
                        bookingId,
                        language,
                        passengerId,
                        agencyCode,
                        token}, this.GetItineraryOperationCompleted, userState);
        }
        
        private void OnGetItineraryOperationCompleted(object arg) {
            if ((this.GetItineraryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItineraryCompleted(this, new GetItineraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ItineraryRead", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ItineraryRead(string recordLocator, string language, string passengerId, string agencyCode, string token) {
            object[] results = this.Invoke("ItineraryRead", new object[] {
                        recordLocator,
                        language,
                        passengerId,
                        agencyCode,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ItineraryReadAsync(string recordLocator, string language, string passengerId, string agencyCode, string token) {
            this.ItineraryReadAsync(recordLocator, language, passengerId, agencyCode, token, null);
        }
        
        /// <remarks/>
        public void ItineraryReadAsync(string recordLocator, string language, string passengerId, string agencyCode, string token, object userState) {
            if ((this.ItineraryReadOperationCompleted == null)) {
                this.ItineraryReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnItineraryReadOperationCompleted);
            }
            this.InvokeAsync("ItineraryRead", new object[] {
                        recordLocator,
                        language,
                        passengerId,
                        agencyCode,
                        token}, this.ItineraryReadOperationCompleted, userState);
        }
        
        private void OnItineraryReadOperationCompleted(object arg) {
            if ((this.ItineraryReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ItineraryReadCompleted(this, new ItineraryReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/QueueMail", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QueueMail(
                    string strFromAddress, 
                    string strFromName, 
                    string strToAddress, 
                    string strToAddressCC, 
                    string strToAddressBCC, 
                    string strReplyToAddress, 
                    string strSubject, 
                    string strBody, 
                    string strDocumentType, 
                    string strAttachmentStream, 
                    string strAttachmentFileName, 
                    string strAttachmentFileType, 
                    string strAttachmentParser, 
                    bool bHtmlBody, 
                    bool bConvertAttachmentFromHTML2PDF, 
                    bool bRemoveFromQueue, 
                    string strUserId, 
                    string strBookingId, 
                    string strVoucherId, 
                    string strBookingSegmentID, 
                    string strPassengerId, 
                    string strClientProfileId, 
                    string strDocumentId, 
                    string strLanguageCode, 
                    string token) {
            object[] results = this.Invoke("QueueMail", new object[] {
                        strFromAddress,
                        strFromName,
                        strToAddress,
                        strToAddressCC,
                        strToAddressBCC,
                        strReplyToAddress,
                        strSubject,
                        strBody,
                        strDocumentType,
                        strAttachmentStream,
                        strAttachmentFileName,
                        strAttachmentFileType,
                        strAttachmentParser,
                        bHtmlBody,
                        bConvertAttachmentFromHTML2PDF,
                        bRemoveFromQueue,
                        strUserId,
                        strBookingId,
                        strVoucherId,
                        strBookingSegmentID,
                        strPassengerId,
                        strClientProfileId,
                        strDocumentId,
                        strLanguageCode,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QueueMailAsync(
                    string strFromAddress, 
                    string strFromName, 
                    string strToAddress, 
                    string strToAddressCC, 
                    string strToAddressBCC, 
                    string strReplyToAddress, 
                    string strSubject, 
                    string strBody, 
                    string strDocumentType, 
                    string strAttachmentStream, 
                    string strAttachmentFileName, 
                    string strAttachmentFileType, 
                    string strAttachmentParser, 
                    bool bHtmlBody, 
                    bool bConvertAttachmentFromHTML2PDF, 
                    bool bRemoveFromQueue, 
                    string strUserId, 
                    string strBookingId, 
                    string strVoucherId, 
                    string strBookingSegmentID, 
                    string strPassengerId, 
                    string strClientProfileId, 
                    string strDocumentId, 
                    string strLanguageCode, 
                    string token) {
            this.QueueMailAsync(strFromAddress, strFromName, strToAddress, strToAddressCC, strToAddressBCC, strReplyToAddress, strSubject, strBody, strDocumentType, strAttachmentStream, strAttachmentFileName, strAttachmentFileType, strAttachmentParser, bHtmlBody, bConvertAttachmentFromHTML2PDF, bRemoveFromQueue, strUserId, strBookingId, strVoucherId, strBookingSegmentID, strPassengerId, strClientProfileId, strDocumentId, strLanguageCode, token, null);
        }
        
        /// <remarks/>
        public void QueueMailAsync(
                    string strFromAddress, 
                    string strFromName, 
                    string strToAddress, 
                    string strToAddressCC, 
                    string strToAddressBCC, 
                    string strReplyToAddress, 
                    string strSubject, 
                    string strBody, 
                    string strDocumentType, 
                    string strAttachmentStream, 
                    string strAttachmentFileName, 
                    string strAttachmentFileType, 
                    string strAttachmentParser, 
                    bool bHtmlBody, 
                    bool bConvertAttachmentFromHTML2PDF, 
                    bool bRemoveFromQueue, 
                    string strUserId, 
                    string strBookingId, 
                    string strVoucherId, 
                    string strBookingSegmentID, 
                    string strPassengerId, 
                    string strClientProfileId, 
                    string strDocumentId, 
                    string strLanguageCode, 
                    string token, 
                    object userState) {
            if ((this.QueueMailOperationCompleted == null)) {
                this.QueueMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueMailOperationCompleted);
            }
            this.InvokeAsync("QueueMail", new object[] {
                        strFromAddress,
                        strFromName,
                        strToAddress,
                        strToAddressCC,
                        strToAddressBCC,
                        strReplyToAddress,
                        strSubject,
                        strBody,
                        strDocumentType,
                        strAttachmentStream,
                        strAttachmentFileName,
                        strAttachmentFileType,
                        strAttachmentParser,
                        bHtmlBody,
                        bConvertAttachmentFromHTML2PDF,
                        bRemoveFromQueue,
                        strUserId,
                        strBookingId,
                        strVoucherId,
                        strBookingSegmentID,
                        strPassengerId,
                        strClientProfileId,
                        strDocumentId,
                        strLanguageCode,
                        token}, this.QueueMailOperationCompleted, userState);
        }
        
        private void OnQueueMailOperationCompleted(object arg) {
            if ((this.QueueMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueMailCompleted(this, new QueueMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/CheckUniqueMailAddress", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUniqueMailAddress(string strMail, string strClientProfileId, string token) {
            object[] results = this.Invoke("CheckUniqueMailAddress", new object[] {
                        strMail,
                        strClientProfileId,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUniqueMailAddressAsync(string strMail, string strClientProfileId, string token) {
            this.CheckUniqueMailAddressAsync(strMail, strClientProfileId, token, null);
        }
        
        /// <remarks/>
        public void CheckUniqueMailAddressAsync(string strMail, string strClientProfileId, string token, object userState) {
            if ((this.CheckUniqueMailAddressOperationCompleted == null)) {
                this.CheckUniqueMailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUniqueMailAddressOperationCompleted);
            }
            this.InvokeAsync("CheckUniqueMailAddress", new object[] {
                        strMail,
                        strClientProfileId,
                        token}, this.CheckUniqueMailAddressOperationCompleted, userState);
        }
        
        private void OnCheckUniqueMailAddressOperationCompleted(object arg) {
            if ((this.CheckUniqueMailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUniqueMailAddressCompleted(this, new CheckUniqueMailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ServiceAuthentication", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ServiceAuthentication(string strAuthen, string token) {
            object[] results = this.Invoke("ServiceAuthentication", new object[] {
                        strAuthen,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAuthenticationAsync(string strAuthen, string token) {
            this.ServiceAuthenticationAsync(strAuthen, token, null);
        }
        
        /// <remarks/>
        public void ServiceAuthenticationAsync(string strAuthen, string token, object userState) {
            if ((this.ServiceAuthenticationOperationCompleted == null)) {
                this.ServiceAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAuthenticationOperationCompleted);
            }
            this.InvokeAsync("ServiceAuthentication", new object[] {
                        strAuthen,
                        token}, this.ServiceAuthenticationOperationCompleted, userState);
        }
        
        private void OnServiceAuthenticationOperationCompleted(object arg) {
            if ((this.ServiceAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAuthenticationCompleted(this, new ServiceAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SaveBookingCreditCard", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBookingCreditCard(string strBooking, string securityToken, string authenticationToken, string commerceIndicator, string bookingReference, string strRequestSource, bool createTickets, bool readBooking, bool readOnly, string token) {
            object[] results = this.Invoke("SaveBookingCreditCard", new object[] {
                        strBooking,
                        securityToken,
                        authenticationToken,
                        commerceIndicator,
                        bookingReference,
                        strRequestSource,
                        createTickets,
                        readBooking,
                        readOnly,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBookingCreditCardAsync(string strBooking, string securityToken, string authenticationToken, string commerceIndicator, string bookingReference, string strRequestSource, bool createTickets, bool readBooking, bool readOnly, string token) {
            this.SaveBookingCreditCardAsync(strBooking, securityToken, authenticationToken, commerceIndicator, bookingReference, strRequestSource, createTickets, readBooking, readOnly, token, null);
        }
        
        /// <remarks/>
        public void SaveBookingCreditCardAsync(string strBooking, string securityToken, string authenticationToken, string commerceIndicator, string bookingReference, string strRequestSource, bool createTickets, bool readBooking, bool readOnly, string token, object userState) {
            if ((this.SaveBookingCreditCardOperationCompleted == null)) {
                this.SaveBookingCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBookingCreditCardOperationCompleted);
            }
            this.InvokeAsync("SaveBookingCreditCard", new object[] {
                        strBooking,
                        securityToken,
                        authenticationToken,
                        commerceIndicator,
                        bookingReference,
                        strRequestSource,
                        createTickets,
                        readBooking,
                        readOnly,
                        token}, this.SaveBookingCreditCardOperationCompleted, userState);
        }
        
        private void OnSaveBookingCreditCardOperationCompleted(object arg) {
            if ((this.SaveBookingCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBookingCreditCardCompleted(this, new SaveBookingCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SaveBookingPayment", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBookingPayment(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            object[] results = this.Invoke("SaveBookingPayment", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBookingPaymentAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token) {
            this.SaveBookingPaymentAsync(strBooking, createTickets, readBooking, readOnly, token, null);
        }
        
        /// <remarks/>
        public void SaveBookingPaymentAsync(string strBooking, bool createTickets, bool readBooking, bool readOnly, string token, object userState) {
            if ((this.SaveBookingPaymentOperationCompleted == null)) {
                this.SaveBookingPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBookingPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveBookingPayment", new object[] {
                        strBooking,
                        createTickets,
                        readBooking,
                        readOnly,
                        token}, this.SaveBookingPaymentOperationCompleted, userState);
        }
        
        private void OnSaveBookingPaymentOperationCompleted(object arg) {
            if ((this.SaveBookingPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBookingPaymentCompleted(this, new SaveBookingPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SaveBookingMultipleFormOfPayment", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveBookingMultipleFormOfPayment(string strBookingId, string strBooking, bool bCreateTickets, string strSecurityToken, string strAuthenticationToken, string strCommerceIndicator, string strRequestSource, string strLanguage, string token) {
            object[] results = this.Invoke("SaveBookingMultipleFormOfPayment", new object[] {
                        strBookingId,
                        strBooking,
                        bCreateTickets,
                        strSecurityToken,
                        strAuthenticationToken,
                        strCommerceIndicator,
                        strRequestSource,
                        strLanguage,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBookingMultipleFormOfPaymentAsync(string strBookingId, string strBooking, bool bCreateTickets, string strSecurityToken, string strAuthenticationToken, string strCommerceIndicator, string strRequestSource, string strLanguage, string token) {
            this.SaveBookingMultipleFormOfPaymentAsync(strBookingId, strBooking, bCreateTickets, strSecurityToken, strAuthenticationToken, strCommerceIndicator, strRequestSource, strLanguage, token, null);
        }
        
        /// <remarks/>
        public void SaveBookingMultipleFormOfPaymentAsync(string strBookingId, string strBooking, bool bCreateTickets, string strSecurityToken, string strAuthenticationToken, string strCommerceIndicator, string strRequestSource, string strLanguage, string token, object userState) {
            if ((this.SaveBookingMultipleFormOfPaymentOperationCompleted == null)) {
                this.SaveBookingMultipleFormOfPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBookingMultipleFormOfPaymentOperationCompleted);
            }
            this.InvokeAsync("SaveBookingMultipleFormOfPayment", new object[] {
                        strBookingId,
                        strBooking,
                        bCreateTickets,
                        strSecurityToken,
                        strAuthenticationToken,
                        strCommerceIndicator,
                        strRequestSource,
                        strLanguage,
                        token}, this.SaveBookingMultipleFormOfPaymentOperationCompleted, userState);
        }
        
        private void OnSaveBookingMultipleFormOfPaymentOperationCompleted(object arg) {
            if ((this.SaveBookingMultipleFormOfPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBookingMultipleFormOfPaymentCompleted(this, new SaveBookingMultipleFormOfPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/BookingLogon", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WsWrapper BookingLogon(string recordLocator, string NameOrPhone, string strAgencyCode, string token) {
            object[] results = this.Invoke("BookingLogon", new object[] {
                        recordLocator,
                        NameOrPhone,
                        strAgencyCode,
                        token});
            return ((WsWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void BookingLogonAsync(string recordLocator, string NameOrPhone, string strAgencyCode, string token) {
            this.BookingLogonAsync(recordLocator, NameOrPhone, strAgencyCode, token, null);
        }
        
        /// <remarks/>
        public void BookingLogonAsync(string recordLocator, string NameOrPhone, string strAgencyCode, string token, object userState) {
            if ((this.BookingLogonOperationCompleted == null)) {
                this.BookingLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingLogonOperationCompleted);
            }
            this.InvokeAsync("BookingLogon", new object[] {
                        recordLocator,
                        NameOrPhone,
                        strAgencyCode,
                        token}, this.BookingLogonOperationCompleted, userState);
        }
        
        private void OnBookingLogonOperationCompleted(object arg) {
            if ((this.BookingLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingLogonCompleted(this, new BookingLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetCurrencies", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency[] GetCurrencies(string strLanguage, string token) {
            object[] results = this.Invoke("GetCurrencies", new object[] {
                        strLanguage,
                        token});
            return ((Currency[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(string strLanguage, string token) {
            this.GetCurrenciesAsync(strLanguage, token, null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(string strLanguage, string token, object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[] {
                        strLanguage,
                        token}, this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetSpecialServices", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Service[] GetSpecialServices(string strLanguage, string token) {
            object[] results = this.Invoke("GetSpecialServices", new object[] {
                        strLanguage,
                        token});
            return ((Service[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecialServicesAsync(string strLanguage, string token) {
            this.GetSpecialServicesAsync(strLanguage, token, null);
        }
        
        /// <remarks/>
        public void GetSpecialServicesAsync(string strLanguage, string token, object userState) {
            if ((this.GetSpecialServicesOperationCompleted == null)) {
                this.GetSpecialServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialServicesOperationCompleted);
            }
            this.InvokeAsync("GetSpecialServices", new object[] {
                        strLanguage,
                        token}, this.GetSpecialServicesOperationCompleted, userState);
        }
        
        private void OnGetSpecialServicesOperationCompleted(object arg) {
            if ((this.GetSpecialServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialServicesCompleted(this, new GetSpecialServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/TravelAgentLogon", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] TravelAgentLogon(string agencyCode, string agentLogon, string agentPassword, string token) {
            object[] results = this.Invoke("TravelAgentLogon", new object[] {
                        agencyCode,
                        agentLogon,
                        agentPassword,
                        token});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void TravelAgentLogonAsync(string agencyCode, string agentLogon, string agentPassword, string token) {
            this.TravelAgentLogonAsync(agencyCode, agentLogon, agentPassword, token, null);
        }
        
        /// <remarks/>
        public void TravelAgentLogonAsync(string agencyCode, string agentLogon, string agentPassword, string token, object userState) {
            if ((this.TravelAgentLogonOperationCompleted == null)) {
                this.TravelAgentLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTravelAgentLogonOperationCompleted);
            }
            this.InvokeAsync("TravelAgentLogon", new object[] {
                        agencyCode,
                        agentLogon,
                        agentPassword,
                        token}, this.TravelAgentLogonOperationCompleted, userState);
        }
        
        private void OnTravelAgentLogonOperationCompleted(object arg) {
            if ((this.TravelAgentLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TravelAgentLogonCompleted(this, new TravelAgentLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/UserSave", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserSave([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User UserList, string agencyCode, string token) {
            object[] results = this.Invoke("UserSave", new object[] {
                        UserList,
                        agencyCode,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserSaveAsync(User UserList, string agencyCode, string token) {
            this.UserSaveAsync(UserList, agencyCode, token, null);
        }
        
        /// <remarks/>
        public void UserSaveAsync(User UserList, string agencyCode, string token, object userState) {
            if ((this.UserSaveOperationCompleted == null)) {
                this.UserSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserSaveOperationCompleted);
            }
            this.InvokeAsync("UserSave", new object[] {
                        UserList,
                        agencyCode,
                        token}, this.UserSaveOperationCompleted, userState);
        }
        
        private void OnUserSaveOperationCompleted(object arg) {
            if ((this.UserSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserSaveCompleted(this, new UserSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetAgencySessionProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Agent[] GetAgencySessionProfile(string strAgencyCode, string strUserId, string token) {
            object[] results = this.Invoke("GetAgencySessionProfile", new object[] {
                        strAgencyCode,
                        strUserId,
                        token});
            return ((Agent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencySessionProfileAsync(string strAgencyCode, string strUserId, string token) {
            this.GetAgencySessionProfileAsync(strAgencyCode, strUserId, token, null);
        }
        
        /// <remarks/>
        public void GetAgencySessionProfileAsync(string strAgencyCode, string strUserId, string token, object userState) {
            if ((this.GetAgencySessionProfileOperationCompleted == null)) {
                this.GetAgencySessionProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencySessionProfileOperationCompleted);
            }
            this.InvokeAsync("GetAgencySessionProfile", new object[] {
                        strAgencyCode,
                        strUserId,
                        token}, this.GetAgencySessionProfileOperationCompleted, userState);
        }
        
        private void OnGetAgencySessionProfileOperationCompleted(object arg) {
            if ((this.GetAgencySessionProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencySessionProfileCompleted(this, new GetAgencySessionProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetClientSessionProfile", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Client[] GetClientSessionProfile(System.Guid clientProfileId, string token) {
            object[] results = this.Invoke("GetClientSessionProfile", new object[] {
                        clientProfileId,
                        token});
            return ((Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientSessionProfileAsync(System.Guid clientProfileId, string token) {
            this.GetClientSessionProfileAsync(clientProfileId, token, null);
        }
        
        /// <remarks/>
        public void GetClientSessionProfileAsync(System.Guid clientProfileId, string token, object userState) {
            if ((this.GetClientSessionProfileOperationCompleted == null)) {
                this.GetClientSessionProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientSessionProfileOperationCompleted);
            }
            this.InvokeAsync("GetClientSessionProfile", new object[] {
                        clientProfileId,
                        token}, this.GetClientSessionProfileOperationCompleted, userState);
        }
        
        private void OnGetClientSessionProfileOperationCompleted(object arg) {
            if ((this.GetClientSessionProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientSessionProfileCompleted(this, new GetClientSessionProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFlightSummary", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlightSummary(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token) {
            object[] results = this.Invoke("GetFlightSummary", new object[] {
                        objFlights,
                        passengers,
                        strAgencyCode,
                        flightId,
                        boardPoint,
                        offPoint,
                        airline,
                        flight,
                        boardingClass,
                        bookingClass,
                        flightDate,
                        fareId,
                        currencyCode,
                        isRefundable,
                        isGroupBooking,
                        isNonRevenue,
                        segmentId,
                        idReduction,
                        fareType,
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightSummaryAsync(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token) {
            this.GetFlightSummaryAsync(objFlights, passengers, strAgencyCode, flightId, boardPoint, offPoint, airline, flight, boardingClass, bookingClass, flightDate, fareId, currencyCode, isRefundable, isGroupBooking, isNonRevenue, segmentId, idReduction, fareType, language, token, null);
        }
        
        /// <remarks/>
        public void GetFlightSummaryAsync(
                    Flight[] objFlights, 
                    Passenger[] passengers, 
                    string strAgencyCode, 
                    string flightId, 
                    string boardPoint, 
                    string offPoint, 
                    string airline, 
                    string flight, 
                    string boardingClass, 
                    string bookingClass, 
                    System.DateTime flightDate, 
                    string fareId, 
                    string currencyCode, 
                    bool isRefundable, 
                    bool isGroupBooking, 
                    bool isNonRevenue, 
                    string segmentId, 
                    short idReduction, 
                    string fareType, 
                    string language, 
                    string token, 
                    object userState) {
            if ((this.GetFlightSummaryOperationCompleted == null)) {
                this.GetFlightSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightSummaryOperationCompleted);
            }
            this.InvokeAsync("GetFlightSummary", new object[] {
                        objFlights,
                        passengers,
                        strAgencyCode,
                        flightId,
                        boardPoint,
                        offPoint,
                        airline,
                        flight,
                        boardingClass,
                        bookingClass,
                        flightDate,
                        fareId,
                        currencyCode,
                        isRefundable,
                        isGroupBooking,
                        isNonRevenue,
                        segmentId,
                        idReduction,
                        fareType,
                        language,
                        token}, this.GetFlightSummaryOperationCompleted, userState);
        }
        
        private void OnGetFlightSummaryOperationCompleted(object arg) {
            if ((this.GetFlightSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightSummaryCompleted(this, new GetFlightSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetBookings", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBookings(
                    string airline, 
                    string flightNumber, 
                    string flightId, 
                    string flightFrom, 
                    string flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string agencyCode, 
                    string clientNumber, 
                    string memberNumber, 
                    string clientId, 
                    bool showHistory, 
                    string language, 
                    bool bIndividual, 
                    bool bGroup, 
                    string createFrom, 
                    string createTo, 
                    string token) {
            object[] results = this.Invoke("GetBookings", new object[] {
                        airline,
                        flightNumber,
                        flightId,
                        flightFrom,
                        flightTo,
                        recordLocator,
                        origin,
                        destination,
                        passengerName,
                        seatNumber,
                        ticketNumber,
                        phoneNumber,
                        agencyCode,
                        clientNumber,
                        memberNumber,
                        clientId,
                        showHistory,
                        language,
                        bIndividual,
                        bGroup,
                        createFrom,
                        createTo,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBookingsAsync(
                    string airline, 
                    string flightNumber, 
                    string flightId, 
                    string flightFrom, 
                    string flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string agencyCode, 
                    string clientNumber, 
                    string memberNumber, 
                    string clientId, 
                    bool showHistory, 
                    string language, 
                    bool bIndividual, 
                    bool bGroup, 
                    string createFrom, 
                    string createTo, 
                    string token) {
            this.GetBookingsAsync(airline, flightNumber, flightId, flightFrom, flightTo, recordLocator, origin, destination, passengerName, seatNumber, ticketNumber, phoneNumber, agencyCode, clientNumber, memberNumber, clientId, showHistory, language, bIndividual, bGroup, createFrom, createTo, token, null);
        }
        
        /// <remarks/>
        public void GetBookingsAsync(
                    string airline, 
                    string flightNumber, 
                    string flightId, 
                    string flightFrom, 
                    string flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string agencyCode, 
                    string clientNumber, 
                    string memberNumber, 
                    string clientId, 
                    bool showHistory, 
                    string language, 
                    bool bIndividual, 
                    bool bGroup, 
                    string createFrom, 
                    string createTo, 
                    string token, 
                    object userState) {
            if ((this.GetBookingsOperationCompleted == null)) {
                this.GetBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBookingsOperationCompleted);
            }
            this.InvokeAsync("GetBookings", new object[] {
                        airline,
                        flightNumber,
                        flightId,
                        flightFrom,
                        flightTo,
                        recordLocator,
                        origin,
                        destination,
                        passengerName,
                        seatNumber,
                        ticketNumber,
                        phoneNumber,
                        agencyCode,
                        clientNumber,
                        memberNumber,
                        clientId,
                        showHistory,
                        language,
                        bIndividual,
                        bGroup,
                        createFrom,
                        createTo,
                        token}, this.GetBookingsOperationCompleted, userState);
        }
        
        private void OnGetBookingsOperationCompleted(object arg) {
            if ((this.GetBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBookingsCompleted(this, new GetBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetActivities", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActivities(string agencyCode, string remarkType, string nickname, System.DateTime timelimitFrom, System.DateTime timelimitTo, bool pendingOnly, bool incompleteOnly, bool includeRemarks, bool showUnassigned, string token) {
            object[] results = this.Invoke("GetActivities", new object[] {
                        agencyCode,
                        remarkType,
                        nickname,
                        timelimitFrom,
                        timelimitTo,
                        pendingOnly,
                        incompleteOnly,
                        includeRemarks,
                        showUnassigned,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivitiesAsync(string agencyCode, string remarkType, string nickname, System.DateTime timelimitFrom, System.DateTime timelimitTo, bool pendingOnly, bool incompleteOnly, bool includeRemarks, bool showUnassigned, string token) {
            this.GetActivitiesAsync(agencyCode, remarkType, nickname, timelimitFrom, timelimitTo, pendingOnly, incompleteOnly, includeRemarks, showUnassigned, token, null);
        }
        
        /// <remarks/>
        public void GetActivitiesAsync(string agencyCode, string remarkType, string nickname, System.DateTime timelimitFrom, System.DateTime timelimitTo, bool pendingOnly, bool incompleteOnly, bool includeRemarks, bool showUnassigned, string token, object userState) {
            if ((this.GetActivitiesOperationCompleted == null)) {
                this.GetActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivitiesOperationCompleted);
            }
            this.InvokeAsync("GetActivities", new object[] {
                        agencyCode,
                        remarkType,
                        nickname,
                        timelimitFrom,
                        timelimitTo,
                        pendingOnly,
                        incompleteOnly,
                        includeRemarks,
                        showUnassigned,
                        token}, this.GetActivitiesOperationCompleted, userState);
        }
        
        private void OnGetActivitiesOperationCompleted(object arg) {
            if ((this.GetActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivitiesCompleted(this, new GetActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetBaggageFee", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BaggageFeeResponse GetBaggageFee(BaggageFeeRequest request, string token, bool bNovat) {
            object[] results = this.Invoke("GetBaggageFee", new object[] {
                        request,
                        token,
                        bNovat});
            return ((BaggageFeeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetBaggageFeeAsync(BaggageFeeRequest request, string token, bool bNovat) {
            this.GetBaggageFeeAsync(request, token, bNovat, null);
        }
        
        /// <remarks/>
        public void GetBaggageFeeAsync(BaggageFeeRequest request, string token, bool bNovat, object userState) {
            if ((this.GetBaggageFeeOperationCompleted == null)) {
                this.GetBaggageFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaggageFeeOperationCompleted);
            }
            this.InvokeAsync("GetBaggageFee", new object[] {
                        request,
                        token,
                        bNovat}, this.GetBaggageFeeOperationCompleted, userState);
        }
        
        private void OnGetBaggageFeeOperationCompleted(object arg) {
            if ((this.GetBaggageFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaggageFeeCompleted(this, new GetBaggageFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetActiveBookings", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetActiveBookings(string strClientProfileId, string token) {
            object[] results = this.Invoke("GetActiveBookings", new object[] {
                        strClientProfileId,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveBookingsAsync(string strClientProfileId, string token) {
            this.GetActiveBookingsAsync(strClientProfileId, token, null);
        }
        
        /// <remarks/>
        public void GetActiveBookingsAsync(string strClientProfileId, string token, object userState) {
            if ((this.GetActiveBookingsOperationCompleted == null)) {
                this.GetActiveBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveBookingsOperationCompleted);
            }
            this.InvokeAsync("GetActiveBookings", new object[] {
                        strClientProfileId,
                        token}, this.GetActiveBookingsOperationCompleted, userState);
        }
        
        private void OnGetActiveBookingsOperationCompleted(object arg) {
            if ((this.GetActiveBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveBookingsCompleted(this, new GetActiveBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFlownBookings", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlownBookings(string strClientProfileId, string token) {
            object[] results = this.Invoke("GetFlownBookings", new object[] {
                        strClientProfileId,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlownBookingsAsync(string strClientProfileId, string token) {
            this.GetFlownBookingsAsync(strClientProfileId, token, null);
        }
        
        /// <remarks/>
        public void GetFlownBookingsAsync(string strClientProfileId, string token, object userState) {
            if ((this.GetFlownBookingsOperationCompleted == null)) {
                this.GetFlownBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlownBookingsOperationCompleted);
            }
            this.InvokeAsync("GetFlownBookings", new object[] {
                        strClientProfileId,
                        token}, this.GetFlownBookingsOperationCompleted, userState);
        }
        
        private void OnGetFlownBookingsOperationCompleted(object arg) {
            if ((this.GetFlownBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlownBookingsCompleted(this, new GetFlownBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetFee", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetFeeReponse GetFee(GetFeeRequest request, string token, bool bNovat) {
            object[] results = this.Invoke("GetFee", new object[] {
                        request,
                        token,
                        bNovat});
            return ((GetFeeReponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeeAsync(GetFeeRequest request, string token, bool bNovat) {
            this.GetFeeAsync(request, token, bNovat, null);
        }
        
        /// <remarks/>
        public void GetFeeAsync(GetFeeRequest request, string token, bool bNovat, object userState) {
            if ((this.GetFeeOperationCompleted == null)) {
                this.GetFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeeOperationCompleted);
            }
            this.InvokeAsync("GetFee", new object[] {
                        request,
                        token,
                        bNovat}, this.GetFeeOperationCompleted, userState);
        }
        
        private void OnGetFeeOperationCompleted(object arg) {
            if ((this.GetFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeeCompleted(this, new GetFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SpecialServiceFee", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SegmentFeeResponse SpecialServiceFee(SegmentFeeRequest request, string token, bool bNovat) {
            object[] results = this.Invoke("SpecialServiceFee", new object[] {
                        request,
                        token,
                        bNovat});
            return ((SegmentFeeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialServiceFeeAsync(SegmentFeeRequest request, string token, bool bNovat) {
            this.SpecialServiceFeeAsync(request, token, bNovat, null);
        }
        
        /// <remarks/>
        public void SpecialServiceFeeAsync(SegmentFeeRequest request, string token, bool bNovat, object userState) {
            if ((this.SpecialServiceFeeOperationCompleted == null)) {
                this.SpecialServiceFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialServiceFeeOperationCompleted);
            }
            this.InvokeAsync("SpecialServiceFee", new object[] {
                        request,
                        token,
                        bNovat}, this.SpecialServiceFeeOperationCompleted, userState);
        }
        
        private void OnSpecialServiceFeeOperationCompleted(object arg) {
            if ((this.SpecialServiceFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialServiceFeeCompleted(this, new SpecialServiceFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SegmentFee", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SegmentFeeResponse SegmentFee(SegmentFeeRequest request, string token, bool bNovat) {
            object[] results = this.Invoke("SegmentFee", new object[] {
                        request,
                        token,
                        bNovat});
            return ((SegmentFeeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SegmentFeeAsync(SegmentFeeRequest request, string token, bool bNovat) {
            this.SegmentFeeAsync(request, token, bNovat, null);
        }
        
        /// <remarks/>
        public void SegmentFeeAsync(SegmentFeeRequest request, string token, bool bNovat, object userState) {
            if ((this.SegmentFeeOperationCompleted == null)) {
                this.SegmentFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSegmentFeeOperationCompleted);
            }
            this.InvokeAsync("SegmentFee", new object[] {
                        request,
                        token,
                        bNovat}, this.SegmentFeeOperationCompleted, userState);
        }
        
        private void OnSegmentFeeOperationCompleted(object arg) {
            if ((this.SegmentFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SegmentFeeCompleted(this, new SegmentFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ClientLogon", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClientLogon(string clientNumber, string clientPassword, string token) {
            object[] results = this.Invoke("ClientLogon", new object[] {
                        clientNumber,
                        clientPassword,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientLogonAsync(string clientNumber, string clientPassword, string token) {
            this.ClientLogonAsync(clientNumber, clientPassword, token, null);
        }
        
        /// <remarks/>
        public void ClientLogonAsync(string clientNumber, string clientPassword, string token, object userState) {
            if ((this.ClientLogonOperationCompleted == null)) {
                this.ClientLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientLogonOperationCompleted);
            }
            this.InvokeAsync("ClientLogon", new object[] {
                        clientNumber,
                        clientPassword,
                        token}, this.ClientLogonOperationCompleted, userState);
        }
        
        private void OnClientLogonOperationCompleted(object arg) {
            if ((this.ClientLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientLogonCompleted(this, new ClientLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/VoucherTemplateList", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VoucherTemplateList(string voucherTemplateId, string voucherTemplate, System.DateTime fromDate, System.DateTime toDate, bool write, string status, string language, string token) {
            object[] results = this.Invoke("VoucherTemplateList", new object[] {
                        voucherTemplateId,
                        voucherTemplate,
                        fromDate,
                        toDate,
                        write,
                        status,
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VoucherTemplateListAsync(string voucherTemplateId, string voucherTemplate, System.DateTime fromDate, System.DateTime toDate, bool write, string status, string language, string token) {
            this.VoucherTemplateListAsync(voucherTemplateId, voucherTemplate, fromDate, toDate, write, status, language, token, null);
        }
        
        /// <remarks/>
        public void VoucherTemplateListAsync(string voucherTemplateId, string voucherTemplate, System.DateTime fromDate, System.DateTime toDate, bool write, string status, string language, string token, object userState) {
            if ((this.VoucherTemplateListOperationCompleted == null)) {
                this.VoucherTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoucherTemplateListOperationCompleted);
            }
            this.InvokeAsync("VoucherTemplateList", new object[] {
                        voucherTemplateId,
                        voucherTemplate,
                        fromDate,
                        toDate,
                        write,
                        status,
                        language,
                        token}, this.VoucherTemplateListOperationCompleted, userState);
        }
        
        private void OnVoucherTemplateListOperationCompleted(object arg) {
            if ((this.VoucherTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoucherTemplateListCompleted(this, new VoucherTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/SaveVoucher", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveVoucher(string voucherPaymentXML, string token) {
            object[] results = this.Invoke("SaveVoucher", new object[] {
                        voucherPaymentXML,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveVoucherAsync(string voucherPaymentXML, string token) {
            this.SaveVoucherAsync(voucherPaymentXML, token, null);
        }
        
        /// <remarks/>
        public void SaveVoucherAsync(string voucherPaymentXML, string token, object userState) {
            if ((this.SaveVoucherOperationCompleted == null)) {
                this.SaveVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveVoucherOperationCompleted);
            }
            this.InvokeAsync("SaveVoucher", new object[] {
                        voucherPaymentXML,
                        token}, this.SaveVoucherOperationCompleted, userState);
        }
        
        private void OnSaveVoucherOperationCompleted(object arg) {
            if ((this.SaveVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveVoucherCompleted(this, new SaveVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/VoucherPaymentCreditCard", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VoucherPaymentCreditCard(string voucherPaymentXML, string token) {
            object[] results = this.Invoke("VoucherPaymentCreditCard", new object[] {
                        voucherPaymentXML,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VoucherPaymentCreditCardAsync(string voucherPaymentXML, string token) {
            this.VoucherPaymentCreditCardAsync(voucherPaymentXML, token, null);
        }
        
        /// <remarks/>
        public void VoucherPaymentCreditCardAsync(string voucherPaymentXML, string token, object userState) {
            if ((this.VoucherPaymentCreditCardOperationCompleted == null)) {
                this.VoucherPaymentCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoucherPaymentCreditCardOperationCompleted);
            }
            this.InvokeAsync("VoucherPaymentCreditCard", new object[] {
                        voucherPaymentXML,
                        token}, this.VoucherPaymentCreditCardOperationCompleted, userState);
        }
        
        private void OnVoucherPaymentCreditCardOperationCompleted(object arg) {
            if ((this.VoucherPaymentCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoucherPaymentCreditCardCompleted(this, new VoucherPaymentCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/ReadVoucher", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadVoucher(System.Guid voucherId, double voucherNumber, string token) {
            object[] results = this.Invoke("ReadVoucher", new object[] {
                        voucherId,
                        voucherNumber,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadVoucherAsync(System.Guid voucherId, double voucherNumber, string token) {
            this.ReadVoucherAsync(voucherId, voucherNumber, token, null);
        }
        
        /// <remarks/>
        public void ReadVoucherAsync(System.Guid voucherId, double voucherNumber, string token, object userState) {
            if ((this.ReadVoucherOperationCompleted == null)) {
                this.ReadVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadVoucherOperationCompleted);
            }
            this.InvokeAsync("ReadVoucher", new object[] {
                        voucherId,
                        voucherNumber,
                        token}, this.ReadVoucherOperationCompleted, userState);
        }
        
        private void OnReadVoucherOperationCompleted(object arg) {
            if ((this.ReadVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadVoucherCompleted(this, new ReadVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/VoidVoucher", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VoidVoucher(System.Guid voucherId, System.Guid userId, System.DateTime voidDate, string token) {
            object[] results = this.Invoke("VoidVoucher", new object[] {
                        voucherId,
                        userId,
                        voidDate,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VoidVoucherAsync(System.Guid voucherId, System.Guid userId, System.DateTime voidDate, string token) {
            this.VoidVoucherAsync(voucherId, userId, voidDate, token, null);
        }
        
        /// <remarks/>
        public void VoidVoucherAsync(System.Guid voucherId, System.Guid userId, System.DateTime voidDate, string token, object userState) {
            if ((this.VoidVoucherOperationCompleted == null)) {
                this.VoidVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidVoucherOperationCompleted);
            }
            this.InvokeAsync("VoidVoucher", new object[] {
                        voucherId,
                        userId,
                        voidDate,
                        token}, this.VoidVoucherOperationCompleted, userState);
        }
        
        private void OnVoidVoucherOperationCompleted(object arg) {
            if ((this.VoidVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidVoucherCompleted(this, new VoidVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/AgencyRegistrationInsert", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgencyRegistrationInsert(
                    string token, 
                    string agencyName, 
                    string legalName, 
                    string agencyType, 
                    string IATA, 
                    string taxId, 
                    string mail, 
                    string fax, 
                    string phone, 
                    string address1, 
                    string address2, 
                    string street, 
                    string state, 
                    string district, 
                    string province, 
                    string city, 
                    string zipCode, 
                    string poBox, 
                    string website, 
                    string contactPerson, 
                    string lastName, 
                    string firstName, 
                    string title, 
                    string userLogon, 
                    string password, 
                    string country, 
                    string currency, 
                    string language, 
                    string comment) {
            object[] results = this.Invoke("AgencyRegistrationInsert", new object[] {
                        token,
                        agencyName,
                        legalName,
                        agencyType,
                        IATA,
                        taxId,
                        mail,
                        fax,
                        phone,
                        address1,
                        address2,
                        street,
                        state,
                        district,
                        province,
                        city,
                        zipCode,
                        poBox,
                        website,
                        contactPerson,
                        lastName,
                        firstName,
                        title,
                        userLogon,
                        password,
                        country,
                        currency,
                        language,
                        comment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AgencyRegistrationInsertAsync(
                    string token, 
                    string agencyName, 
                    string legalName, 
                    string agencyType, 
                    string IATA, 
                    string taxId, 
                    string mail, 
                    string fax, 
                    string phone, 
                    string address1, 
                    string address2, 
                    string street, 
                    string state, 
                    string district, 
                    string province, 
                    string city, 
                    string zipCode, 
                    string poBox, 
                    string website, 
                    string contactPerson, 
                    string lastName, 
                    string firstName, 
                    string title, 
                    string userLogon, 
                    string password, 
                    string country, 
                    string currency, 
                    string language, 
                    string comment) {
            this.AgencyRegistrationInsertAsync(token, agencyName, legalName, agencyType, IATA, taxId, mail, fax, phone, address1, address2, street, state, district, province, city, zipCode, poBox, website, contactPerson, lastName, firstName, title, userLogon, password, country, currency, language, comment, null);
        }
        
        /// <remarks/>
        public void AgencyRegistrationInsertAsync(
                    string token, 
                    string agencyName, 
                    string legalName, 
                    string agencyType, 
                    string IATA, 
                    string taxId, 
                    string mail, 
                    string fax, 
                    string phone, 
                    string address1, 
                    string address2, 
                    string street, 
                    string state, 
                    string district, 
                    string province, 
                    string city, 
                    string zipCode, 
                    string poBox, 
                    string website, 
                    string contactPerson, 
                    string lastName, 
                    string firstName, 
                    string title, 
                    string userLogon, 
                    string password, 
                    string country, 
                    string currency, 
                    string language, 
                    string comment, 
                    object userState) {
            if ((this.AgencyRegistrationInsertOperationCompleted == null)) {
                this.AgencyRegistrationInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgencyRegistrationInsertOperationCompleted);
            }
            this.InvokeAsync("AgencyRegistrationInsert", new object[] {
                        token,
                        agencyName,
                        legalName,
                        agencyType,
                        IATA,
                        taxId,
                        mail,
                        fax,
                        phone,
                        address1,
                        address2,
                        street,
                        state,
                        district,
                        province,
                        city,
                        zipCode,
                        poBox,
                        website,
                        contactPerson,
                        lastName,
                        firstName,
                        title,
                        userLogon,
                        password,
                        country,
                        currency,
                        language,
                        comment}, this.AgencyRegistrationInsertOperationCompleted, userState);
        }
        
        private void OnAgencyRegistrationInsertOperationCompleted(object arg) {
            if ((this.AgencyRegistrationInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgencyRegistrationInsertCompleted(this, new AgencyRegistrationInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/RemarkAdd", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemarkAdd(
                    string remarkType, 
                    string bookingRemarkId, 
                    string bookingId, 
                    string clientProfileId, 
                    string nickname, 
                    string remarkText, 
                    string agencyCode, 
                    string addedBy, 
                    string userId, 
                    bool bProtected, 
                    bool warning, 
                    bool processMessage, 
                    bool systemRemark, 
                    System.DateTime timelimit, 
                    System.DateTime timelimitUTC, 
                    string token) {
            object[] results = this.Invoke("RemarkAdd", new object[] {
                        remarkType,
                        bookingRemarkId,
                        bookingId,
                        clientProfileId,
                        nickname,
                        remarkText,
                        agencyCode,
                        addedBy,
                        userId,
                        bProtected,
                        warning,
                        processMessage,
                        systemRemark,
                        timelimit,
                        timelimitUTC,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemarkAddAsync(
                    string remarkType, 
                    string bookingRemarkId, 
                    string bookingId, 
                    string clientProfileId, 
                    string nickname, 
                    string remarkText, 
                    string agencyCode, 
                    string addedBy, 
                    string userId, 
                    bool bProtected, 
                    bool warning, 
                    bool processMessage, 
                    bool systemRemark, 
                    System.DateTime timelimit, 
                    System.DateTime timelimitUTC, 
                    string token) {
            this.RemarkAddAsync(remarkType, bookingRemarkId, bookingId, clientProfileId, nickname, remarkText, agencyCode, addedBy, userId, bProtected, warning, processMessage, systemRemark, timelimit, timelimitUTC, token, null);
        }
        
        /// <remarks/>
        public void RemarkAddAsync(
                    string remarkType, 
                    string bookingRemarkId, 
                    string bookingId, 
                    string clientProfileId, 
                    string nickname, 
                    string remarkText, 
                    string agencyCode, 
                    string addedBy, 
                    string userId, 
                    bool bProtected, 
                    bool warning, 
                    bool processMessage, 
                    bool systemRemark, 
                    System.DateTime timelimit, 
                    System.DateTime timelimitUTC, 
                    string token, 
                    object userState) {
            if ((this.RemarkAddOperationCompleted == null)) {
                this.RemarkAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarkAddOperationCompleted);
            }
            this.InvokeAsync("RemarkAdd", new object[] {
                        remarkType,
                        bookingRemarkId,
                        bookingId,
                        clientProfileId,
                        nickname,
                        remarkText,
                        agencyCode,
                        addedBy,
                        userId,
                        bProtected,
                        warning,
                        processMessage,
                        systemRemark,
                        timelimit,
                        timelimitUTC,
                        token}, this.RemarkAddOperationCompleted, userState);
        }
        
        private void OnRemarkAddOperationCompleted(object arg) {
            if ((this.RemarkAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarkAddCompleted(this, new RemarkAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/RemarkDelete", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemarkDelete(System.Guid bookingRemarkId, string token) {
            object[] results = this.Invoke("RemarkDelete", new object[] {
                        bookingRemarkId,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemarkDeleteAsync(System.Guid bookingRemarkId, string token) {
            this.RemarkDeleteAsync(bookingRemarkId, token, null);
        }
        
        /// <remarks/>
        public void RemarkDeleteAsync(System.Guid bookingRemarkId, string token, object userState) {
            if ((this.RemarkDeleteOperationCompleted == null)) {
                this.RemarkDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarkDeleteOperationCompleted);
            }
            this.InvokeAsync("RemarkDelete", new object[] {
                        bookingRemarkId,
                        token}, this.RemarkDeleteOperationCompleted, userState);
        }
        
        private void OnRemarkDeleteOperationCompleted(object arg) {
            if ((this.RemarkDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarkDeleteCompleted(this, new RemarkDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/RemarkComplete", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemarkComplete(System.Guid bookingRemarkId, System.Guid userId, string token) {
            object[] results = this.Invoke("RemarkComplete", new object[] {
                        bookingRemarkId,
                        userId,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemarkCompleteAsync(System.Guid bookingRemarkId, System.Guid userId, string token) {
            this.RemarkCompleteAsync(bookingRemarkId, userId, token, null);
        }
        
        /// <remarks/>
        public void RemarkCompleteAsync(System.Guid bookingRemarkId, System.Guid userId, string token, object userState) {
            if ((this.RemarkCompleteOperationCompleted == null)) {
                this.RemarkCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarkCompleteOperationCompleted);
            }
            this.InvokeAsync("RemarkComplete", new object[] {
                        bookingRemarkId,
                        userId,
                        token}, this.RemarkCompleteOperationCompleted, userState);
        }
        
        private void OnRemarkCompleteOperationCompleted(object arg) {
            if ((this.RemarkCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarkCompleteCompleted(this, new RemarkCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/RemarkRead", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemarkRead(string remarkId, string bookingId, string bookingReference, double bookingNumber, bool readOnly, string token) {
            object[] results = this.Invoke("RemarkRead", new object[] {
                        remarkId,
                        bookingId,
                        bookingReference,
                        bookingNumber,
                        readOnly,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemarkReadAsync(string remarkId, string bookingId, string bookingReference, double bookingNumber, bool readOnly, string token) {
            this.RemarkReadAsync(remarkId, bookingId, bookingReference, bookingNumber, readOnly, token, null);
        }
        
        /// <remarks/>
        public void RemarkReadAsync(string remarkId, string bookingId, string bookingReference, double bookingNumber, bool readOnly, string token, object userState) {
            if ((this.RemarkReadOperationCompleted == null)) {
                this.RemarkReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarkReadOperationCompleted);
            }
            this.InvokeAsync("RemarkRead", new object[] {
                        remarkId,
                        bookingId,
                        bookingReference,
                        bookingNumber,
                        readOnly,
                        token}, this.RemarkReadOperationCompleted, userState);
        }
        
        private void OnRemarkReadOperationCompleted(object arg) {
            if ((this.RemarkReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarkReadCompleted(this, new RemarkReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/RemarkSave", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemarkSave(string strRemarkXml, string token) {
            object[] results = this.Invoke("RemarkSave", new object[] {
                        strRemarkXml,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemarkSaveAsync(string strRemarkXml, string token) {
            this.RemarkSaveAsync(strRemarkXml, token, null);
        }
        
        /// <remarks/>
        public void RemarkSaveAsync(string strRemarkXml, string token, object userState) {
            if ((this.RemarkSaveOperationCompleted == null)) {
                this.RemarkSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarkSaveOperationCompleted);
            }
            this.InvokeAsync("RemarkSave", new object[] {
                        strRemarkXml,
                        token}, this.RemarkSaveOperationCompleted, userState);
        }
        
        private void OnRemarkSaveOperationCompleted(object arg) {
            if ((this.RemarkSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarkSaveCompleted(this, new RemarkSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetPassenger", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPassenger(
                    string airline, 
                    string flightNumber, 
                    System.Guid flightID, 
                    System.DateTime flightFrom, 
                    System.DateTime flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string passengerStatus, 
                    string checkInStatus, 
                    string clientNumber, 
                    string memberNumber, 
                    System.Guid clientID, 
                    System.Guid passengerId, 
                    bool booked, 
                    bool listed, 
                    bool eTicketOnly, 
                    bool includeCancelled, 
                    bool openSegments, 
                    bool showHistory, 
                    string language, 
                    string token) {
            object[] results = this.Invoke("GetPassenger", new object[] {
                        airline,
                        flightNumber,
                        flightID,
                        flightFrom,
                        flightTo,
                        recordLocator,
                        origin,
                        destination,
                        passengerName,
                        seatNumber,
                        ticketNumber,
                        phoneNumber,
                        passengerStatus,
                        checkInStatus,
                        clientNumber,
                        memberNumber,
                        clientID,
                        passengerId,
                        booked,
                        listed,
                        eTicketOnly,
                        includeCancelled,
                        openSegments,
                        showHistory,
                        language,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassengerAsync(
                    string airline, 
                    string flightNumber, 
                    System.Guid flightID, 
                    System.DateTime flightFrom, 
                    System.DateTime flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string passengerStatus, 
                    string checkInStatus, 
                    string clientNumber, 
                    string memberNumber, 
                    System.Guid clientID, 
                    System.Guid passengerId, 
                    bool booked, 
                    bool listed, 
                    bool eTicketOnly, 
                    bool includeCancelled, 
                    bool openSegments, 
                    bool showHistory, 
                    string language, 
                    string token) {
            this.GetPassengerAsync(airline, flightNumber, flightID, flightFrom, flightTo, recordLocator, origin, destination, passengerName, seatNumber, ticketNumber, phoneNumber, passengerStatus, checkInStatus, clientNumber, memberNumber, clientID, passengerId, booked, listed, eTicketOnly, includeCancelled, openSegments, showHistory, language, token, null);
        }
        
        /// <remarks/>
        public void GetPassengerAsync(
                    string airline, 
                    string flightNumber, 
                    System.Guid flightID, 
                    System.DateTime flightFrom, 
                    System.DateTime flightTo, 
                    string recordLocator, 
                    string origin, 
                    string destination, 
                    string passengerName, 
                    string seatNumber, 
                    string ticketNumber, 
                    string phoneNumber, 
                    string passengerStatus, 
                    string checkInStatus, 
                    string clientNumber, 
                    string memberNumber, 
                    System.Guid clientID, 
                    System.Guid passengerId, 
                    bool booked, 
                    bool listed, 
                    bool eTicketOnly, 
                    bool includeCancelled, 
                    bool openSegments, 
                    bool showHistory, 
                    string language, 
                    string token, 
                    object userState) {
            if ((this.GetPassengerOperationCompleted == null)) {
                this.GetPassengerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassengerOperationCompleted);
            }
            this.InvokeAsync("GetPassenger", new object[] {
                        airline,
                        flightNumber,
                        flightID,
                        flightFrom,
                        flightTo,
                        recordLocator,
                        origin,
                        destination,
                        passengerName,
                        seatNumber,
                        ticketNumber,
                        phoneNumber,
                        passengerStatus,
                        checkInStatus,
                        clientNumber,
                        memberNumber,
                        clientID,
                        passengerId,
                        booked,
                        listed,
                        eTicketOnly,
                        includeCancelled,
                        openSegments,
                        showHistory,
                        language,
                        token}, this.GetPassengerOperationCompleted, userState);
        }
        
        private void OnGetPassengerOperationCompleted(object arg) {
            if ((this.GetPassengerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassengerCompleted(this, new GetPassengerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetQueueCount", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQueueCount(string agency, bool unassigned, string token) {
            object[] results = this.Invoke("GetQueueCount", new object[] {
                        agency,
                        unassigned,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueueCountAsync(string agency, bool unassigned, string token) {
            this.GetQueueCountAsync(agency, unassigned, token, null);
        }
        
        /// <remarks/>
        public void GetQueueCountAsync(string agency, bool unassigned, string token, object userState) {
            if ((this.GetQueueCountOperationCompleted == null)) {
                this.GetQueueCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueueCountOperationCompleted);
            }
            this.InvokeAsync("GetQueueCount", new object[] {
                        agency,
                        unassigned,
                        token}, this.GetQueueCountOperationCompleted, userState);
        }
        
        private void OnGetQueueCountOperationCompleted(object arg) {
            if ((this.GetQueueCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueueCountCompleted(this, new GetQueueCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetSingleFlight", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSingleFlight(string strFlightId, string strAirline, string strFlightNumber, System.DateTime dtFlightFrom, System.DateTime dtFlightTo, string strLanguage, string strOrigin, string strDestination, bool bWrite, bool bEmptyRs, string strScheduleId, bool bSingle, string token) {
            object[] results = this.Invoke("GetSingleFlight", new object[] {
                        strFlightId,
                        strAirline,
                        strFlightNumber,
                        dtFlightFrom,
                        dtFlightTo,
                        strLanguage,
                        strOrigin,
                        strDestination,
                        bWrite,
                        bEmptyRs,
                        strScheduleId,
                        bSingle,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleFlightAsync(string strFlightId, string strAirline, string strFlightNumber, System.DateTime dtFlightFrom, System.DateTime dtFlightTo, string strLanguage, string strOrigin, string strDestination, bool bWrite, bool bEmptyRs, string strScheduleId, bool bSingle, string token) {
            this.GetSingleFlightAsync(strFlightId, strAirline, strFlightNumber, dtFlightFrom, dtFlightTo, strLanguage, strOrigin, strDestination, bWrite, bEmptyRs, strScheduleId, bSingle, token, null);
        }
        
        /// <remarks/>
        public void GetSingleFlightAsync(string strFlightId, string strAirline, string strFlightNumber, System.DateTime dtFlightFrom, System.DateTime dtFlightTo, string strLanguage, string strOrigin, string strDestination, bool bWrite, bool bEmptyRs, string strScheduleId, bool bSingle, string token, object userState) {
            if ((this.GetSingleFlightOperationCompleted == null)) {
                this.GetSingleFlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleFlightOperationCompleted);
            }
            this.InvokeAsync("GetSingleFlight", new object[] {
                        strFlightId,
                        strAirline,
                        strFlightNumber,
                        dtFlightFrom,
                        dtFlightTo,
                        strLanguage,
                        strOrigin,
                        strDestination,
                        bWrite,
                        bEmptyRs,
                        strScheduleId,
                        bSingle,
                        token}, this.GetSingleFlightOperationCompleted, userState);
        }
        
        private void OnGetSingleFlightOperationCompleted(object arg) {
            if ((this.GetSingleFlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleFlightCompleted(this, new GetSingleFlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tikAeroWebMain.com/GetPassengersManifest", RequestNamespace="http://tikAeroWebMain.com/", ResponseNamespace="http://tikAeroWebMain.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPassengersManifest(
                    string origin_rcd, 
                    string destination_rcd, 
                    string airline_rcd, 
                    string flight_number, 
                    string departure_date_from, 
                    string departure_date_to, 
                    string username, 
                    string password, 
                    string token, 
                    bool bReturnServices, 
                    bool bReturnBagTags, 
                    bool bReturnRemarks, 
                    bool bNotCheckedIn, 
                    bool bCheckedIn, 
                    bool bOffloaded, 
                    bool bNoShow, 
                    bool bInfants, 
                    bool bConfirmed, 
                    bool bWaitlisted, 
                    bool bCancelled, 
                    bool bStandby, 
                    bool bIndividual, 
                    bool bGroup, 
                    bool bTransit) {
            object[] results = this.Invoke("GetPassengersManifest", new object[] {
                        origin_rcd,
                        destination_rcd,
                        airline_rcd,
                        flight_number,
                        departure_date_from,
                        departure_date_to,
                        username,
                        password,
                        token,
                        bReturnServices,
                        bReturnBagTags,
                        bReturnRemarks,
                        bNotCheckedIn,
                        bCheckedIn,
                        bOffloaded,
                        bNoShow,
                        bInfants,
                        bConfirmed,
                        bWaitlisted,
                        bCancelled,
                        bStandby,
                        bIndividual,
                        bGroup,
                        bTransit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassengersManifestAsync(
                    string origin_rcd, 
                    string destination_rcd, 
                    string airline_rcd, 
                    string flight_number, 
                    string departure_date_from, 
                    string departure_date_to, 
                    string username, 
                    string password, 
                    string token, 
                    bool bReturnServices, 
                    bool bReturnBagTags, 
                    bool bReturnRemarks, 
                    bool bNotCheckedIn, 
                    bool bCheckedIn, 
                    bool bOffloaded, 
                    bool bNoShow, 
                    bool bInfants, 
                    bool bConfirmed, 
                    bool bWaitlisted, 
                    bool bCancelled, 
                    bool bStandby, 
                    bool bIndividual, 
                    bool bGroup, 
                    bool bTransit) {
            this.GetPassengersManifestAsync(origin_rcd, destination_rcd, airline_rcd, flight_number, departure_date_from, departure_date_to, username, password, token, bReturnServices, bReturnBagTags, bReturnRemarks, bNotCheckedIn, bCheckedIn, bOffloaded, bNoShow, bInfants, bConfirmed, bWaitlisted, bCancelled, bStandby, bIndividual, bGroup, bTransit, null);
        }
        
        /// <remarks/>
        public void GetPassengersManifestAsync(
                    string origin_rcd, 
                    string destination_rcd, 
                    string airline_rcd, 
                    string flight_number, 
                    string departure_date_from, 
                    string departure_date_to, 
                    string username, 
                    string password, 
                    string token, 
                    bool bReturnServices, 
                    bool bReturnBagTags, 
                    bool bReturnRemarks, 
                    bool bNotCheckedIn, 
                    bool bCheckedIn, 
                    bool bOffloaded, 
                    bool bNoShow, 
                    bool bInfants, 
                    bool bConfirmed, 
                    bool bWaitlisted, 
                    bool bCancelled, 
                    bool bStandby, 
                    bool bIndividual, 
                    bool bGroup, 
                    bool bTransit, 
                    object userState) {
            if ((this.GetPassengersManifestOperationCompleted == null)) {
                this.GetPassengersManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassengersManifestOperationCompleted);
            }
            this.InvokeAsync("GetPassengersManifest", new object[] {
                        origin_rcd,
                        destination_rcd,
                        airline_rcd,
                        flight_number,
                        departure_date_from,
                        departure_date_to,
                        username,
                        password,
                        token,
                        bReturnServices,
                        bReturnBagTags,
                        bReturnRemarks,
                        bNotCheckedIn,
                        bCheckedIn,
                        bOffloaded,
                        bNoShow,
                        bInfants,
                        bConfirmed,
                        bWaitlisted,
                        bCancelled,
                        bStandby,
                        bIndividual,
                        bGroup,
                        bTransit}, this.GetPassengersManifestOperationCompleted, userState);
        }
        
        private void OnGetPassengersManifestOperationCompleted(object arg) {
            if ((this.GetPassengersManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassengersManifestCompleted(this, new GetPassengersManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Flight))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Route {
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private string display_nameField;
        
        private System.Guid create_byField;
        
        private System.Guid update_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.DateTime update_date_timeField;
        
        private string country_rcdField;
        
        private string currency_rcdField;
        
        private short routes_totField;
        
        private short routes_avlField;
        
        private short routes_b2cField;
        
        private short routes_b2bField;
        
        private short routes_b2sField;
        
        private short routes_apiField;
        
        private short routes_b2tField;
        
        private bool segment_change_fee_flagField;
        
        private bool transit_flagField;
        
        private bool direct_flagField;
        
        private bool avl_flagField;
        
        private bool b2c_flagField;
        
        private bool b2b_flagField;
        
        private bool b2t_flagField;
        
        private short day_rangeField;
        
        private bool show_redress_number_flagField;
        
        private bool require_passenger_title_flagField;
        
        private bool require_passenger_gender_flagField;
        
        private bool require_date_of_birth_flagField;
        
        private bool require_document_details_flagField;
        
        private bool require_passenger_weight_flagField;
        
        private bool special_service_fee_flagField;
        
        private bool show_insurance_on_web_flagField;
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public short routes_tot {
            get {
                return this.routes_totField;
            }
            set {
                this.routes_totField = value;
            }
        }
        
        /// <remarks/>
        public short routes_avl {
            get {
                return this.routes_avlField;
            }
            set {
                this.routes_avlField = value;
            }
        }
        
        /// <remarks/>
        public short routes_b2c {
            get {
                return this.routes_b2cField;
            }
            set {
                this.routes_b2cField = value;
            }
        }
        
        /// <remarks/>
        public short routes_b2b {
            get {
                return this.routes_b2bField;
            }
            set {
                this.routes_b2bField = value;
            }
        }
        
        /// <remarks/>
        public short routes_b2s {
            get {
                return this.routes_b2sField;
            }
            set {
                this.routes_b2sField = value;
            }
        }
        
        /// <remarks/>
        public short routes_api {
            get {
                return this.routes_apiField;
            }
            set {
                this.routes_apiField = value;
            }
        }
        
        /// <remarks/>
        public short routes_b2t {
            get {
                return this.routes_b2tField;
            }
            set {
                this.routes_b2tField = value;
            }
        }
        
        /// <remarks/>
        public bool segment_change_fee_flag {
            get {
                return this.segment_change_fee_flagField;
            }
            set {
                this.segment_change_fee_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool transit_flag {
            get {
                return this.transit_flagField;
            }
            set {
                this.transit_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool direct_flag {
            get {
                return this.direct_flagField;
            }
            set {
                this.direct_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool avl_flag {
            get {
                return this.avl_flagField;
            }
            set {
                this.avl_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool b2c_flag {
            get {
                return this.b2c_flagField;
            }
            set {
                this.b2c_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool b2b_flag {
            get {
                return this.b2b_flagField;
            }
            set {
                this.b2b_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool b2t_flag {
            get {
                return this.b2t_flagField;
            }
            set {
                this.b2t_flagField = value;
            }
        }
        
        /// <remarks/>
        public short day_range {
            get {
                return this.day_rangeField;
            }
            set {
                this.day_rangeField = value;
            }
        }
        
        /// <remarks/>
        public bool show_redress_number_flag {
            get {
                return this.show_redress_number_flagField;
            }
            set {
                this.show_redress_number_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool require_passenger_title_flag {
            get {
                return this.require_passenger_title_flagField;
            }
            set {
                this.require_passenger_title_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool require_passenger_gender_flag {
            get {
                return this.require_passenger_gender_flagField;
            }
            set {
                this.require_passenger_gender_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool require_date_of_birth_flag {
            get {
                return this.require_date_of_birth_flagField;
            }
            set {
                this.require_date_of_birth_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool require_document_details_flag {
            get {
                return this.require_document_details_flagField;
            }
            set {
                this.require_document_details_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool require_passenger_weight_flag {
            get {
                return this.require_passenger_weight_flagField;
            }
            set {
                this.require_passenger_weight_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool special_service_fee_flag {
            get {
                return this.special_service_fee_flagField;
            }
            set {
                this.special_service_fee_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool show_insurance_on_web_flag {
            get {
                return this.show_insurance_on_web_flagField;
            }
            set {
                this.show_insurance_on_web_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class SegmentFeeRequest {
        
        private string agencyCodeField;
        
        private string currencyCodeField;
        
        private string languageCodeField;
        
        private int numberOfPassengerField;
        
        private int numberOfInfantField;
        
        private string[] serviceCodeField;
        
        private SegmentService[] segmentServiceField;
        
        /// <remarks/>
        public string AgencyCode {
            get {
                return this.agencyCodeField;
            }
            set {
                this.agencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfPassenger {
            get {
                return this.numberOfPassengerField;
            }
            set {
                this.numberOfPassengerField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfInfant {
            get {
                return this.numberOfInfantField;
            }
            set {
                this.numberOfInfantField = value;
            }
        }
        
        /// <remarks/>
        public string[] ServiceCode {
            get {
                return this.serviceCodeField;
            }
            set {
                this.serviceCodeField = value;
            }
        }
        
        /// <remarks/>
        public SegmentService[] SegmentService {
            get {
                return this.segmentServiceField;
            }
            set {
                this.segmentServiceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceFee))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class SegmentService {
        
        private System.Guid flight_connection_idField;
        
        private string special_service_rcdField;
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private string od_origin_rcdField;
        
        private string od_destination_rcdField;
        
        private string booking_class_rcdField;
        
        private string fare_codeField;
        
        private string airline_rcdField;
        
        private string flight_numberField;
        
        private System.DateTime departure_dateField;
        
        /// <remarks/>
        public System.Guid flight_connection_id {
            get {
                return this.flight_connection_idField;
            }
            set {
                this.flight_connection_idField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_rcd {
            get {
                return this.special_service_rcdField;
            }
            set {
                this.special_service_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_origin_rcd {
            get {
                return this.od_origin_rcdField;
            }
            set {
                this.od_origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_destination_rcd {
            get {
                return this.od_destination_rcdField;
            }
            set {
                this.od_destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string booking_class_rcd {
            get {
                return this.booking_class_rcdField;
            }
            set {
                this.booking_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string fare_code {
            get {
                return this.fare_codeField;
            }
            set {
                this.fare_codeField = value;
            }
        }
        
        /// <remarks/>
        public string airline_rcd {
            get {
                return this.airline_rcdField;
            }
            set {
                this.airline_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string flight_number {
            get {
                return this.flight_numberField;
            }
            set {
                this.flight_numberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime departure_date {
            get {
                return this.departure_dateField;
            }
            set {
                this.departure_dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class ServiceFee : SegmentService {
        
        private string fee_rcdField;
        
        private string display_nameField;
        
        private string currency_rcdField;
        
        private decimal fee_amountField;
        
        private decimal fee_amount_inclField;
        
        private decimal total_fee_amountField;
        
        private decimal total_fee_amount_inclField;
        
        private bool service_on_request_flagField;
        
        private bool cut_off_timeField;
        
        /// <remarks/>
        public string fee_rcd {
            get {
                return this.fee_rcdField;
            }
            set {
                this.fee_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount {
            get {
                return this.fee_amountField;
            }
            set {
                this.fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount_incl {
            get {
                return this.fee_amount_inclField;
            }
            set {
                this.fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_fee_amount {
            get {
                return this.total_fee_amountField;
            }
            set {
                this.total_fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_fee_amount_incl {
            get {
                return this.total_fee_amount_inclField;
            }
            set {
                this.total_fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public bool service_on_request_flag {
            get {
                return this.service_on_request_flagField;
            }
            set {
                this.service_on_request_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool cut_off_time {
            get {
                return this.cut_off_timeField;
            }
            set {
                this.cut_off_timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class GetFeeRequest {
        
        private string feeRcdField;
        
        private string currencyRcdField;
        
        private string agencyCodeField;
        
        private string bookingClassField;
        
        private string fareBasisField;
        
        private string originRcdField;
        
        private string destinationRcdField;
        
        private string flightNumberField;
        
        private System.DateTime departureDateField;
        
        private string languageCodeField;
        
        /// <remarks/>
        public string FeeRcd {
            get {
                return this.feeRcdField;
            }
            set {
                this.feeRcdField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyRcd {
            get {
                return this.currencyRcdField;
            }
            set {
                this.currencyRcdField = value;
            }
        }
        
        /// <remarks/>
        public string AgencyCode {
            get {
                return this.agencyCodeField;
            }
            set {
                this.agencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BookingClass {
            get {
                return this.bookingClassField;
            }
            set {
                this.bookingClassField = value;
            }
        }
        
        /// <remarks/>
        public string FareBasis {
            get {
                return this.fareBasisField;
            }
            set {
                this.fareBasisField = value;
            }
        }
        
        /// <remarks/>
        public string OriginRcd {
            get {
                return this.originRcdField;
            }
            set {
                this.originRcdField = value;
            }
        }
        
        /// <remarks/>
        public string DestinationRcd {
            get {
                return this.destinationRcdField;
            }
            set {
                this.destinationRcdField = value;
            }
        }
        
        /// <remarks/>
        public string FlightNumber {
            get {
                return this.flightNumberField;
            }
            set {
                this.flightNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DepartureDate {
            get {
                return this.departureDateField;
            }
            set {
                this.departureDateField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class FeeView {
        
        private System.Guid fee_idField;
        
        private string fee_rcdField;
        
        private string currency_rcdField;
        
        private string display_nameField;
        
        private string fee_category_rcdField;
        
        private decimal fee_amountField;
        
        private decimal fee_amount_inclField;
        
        private decimal vat_percentageField;
        
        private decimal fee_percentageField;
        
        private byte minimum_fee_amount_flagField;
        
        private byte od_flagField;
        
        /// <remarks/>
        public System.Guid fee_id {
            get {
                return this.fee_idField;
            }
            set {
                this.fee_idField = value;
            }
        }
        
        /// <remarks/>
        public string fee_rcd {
            get {
                return this.fee_rcdField;
            }
            set {
                this.fee_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string fee_category_rcd {
            get {
                return this.fee_category_rcdField;
            }
            set {
                this.fee_category_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount {
            get {
                return this.fee_amountField;
            }
            set {
                this.fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount_incl {
            get {
                return this.fee_amount_inclField;
            }
            set {
                this.fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public decimal vat_percentage {
            get {
                return this.vat_percentageField;
            }
            set {
                this.vat_percentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_percentage {
            get {
                return this.fee_percentageField;
            }
            set {
                this.fee_percentageField = value;
            }
        }
        
        /// <remarks/>
        public byte minimum_fee_amount_flag {
            get {
                return this.minimum_fee_amount_flagField;
            }
            set {
                this.minimum_fee_amount_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte od_flag {
            get {
                return this.od_flagField;
            }
            set {
                this.od_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class BaggageFee {
        
        private System.Guid baggage_fee_option_idField;
        
        private System.Guid passenger_idField;
        
        private System.Guid booking_segment_idField;
        
        private System.Guid fee_idField;
        
        private string fee_rcdField;
        
        private string fee_category_rcdField;
        
        private string currency_rcdField;
        
        private string display_nameField;
        
        private decimal number_of_unitsField;
        
        private decimal fee_amountField;
        
        private decimal fee_amount_inclField;
        
        private decimal total_amountField;
        
        private decimal total_amount_inclField;
        
        private decimal vat_percentageField;
        
        /// <remarks/>
        public System.Guid baggage_fee_option_id {
            get {
                return this.baggage_fee_option_idField;
            }
            set {
                this.baggage_fee_option_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_id {
            get {
                return this.passenger_idField;
            }
            set {
                this.passenger_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid booking_segment_id {
            get {
                return this.booking_segment_idField;
            }
            set {
                this.booking_segment_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid fee_id {
            get {
                return this.fee_idField;
            }
            set {
                this.fee_idField = value;
            }
        }
        
        /// <remarks/>
        public string fee_rcd {
            get {
                return this.fee_rcdField;
            }
            set {
                this.fee_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string fee_category_rcd {
            get {
                return this.fee_category_rcdField;
            }
            set {
                this.fee_category_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal number_of_units {
            get {
                return this.number_of_unitsField;
            }
            set {
                this.number_of_unitsField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount {
            get {
                return this.fee_amountField;
            }
            set {
                this.fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount_incl {
            get {
                return this.fee_amount_inclField;
            }
            set {
                this.fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_amount {
            get {
                return this.total_amountField;
            }
            set {
                this.total_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_amount_incl {
            get {
                return this.total_amount_inclField;
            }
            set {
                this.total_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public decimal vat_percentage {
            get {
                return this.vat_percentageField;
            }
            set {
                this.vat_percentageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SegmentFeeResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetFeeReponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaggageFeeResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public abstract partial class ResponseBase {
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class SegmentFeeResponse : ResponseBase {
        
        private ServiceFee[] serviceFeeField;
        
        /// <remarks/>
        public ServiceFee[] ServiceFee {
            get {
                return this.serviceFeeField;
            }
            set {
                this.serviceFeeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class GetFeeReponse : ResponseBase {
        
        private FeeView[] feesField;
        
        /// <remarks/>
        public FeeView[] Fees {
            get {
                return this.feesField;
            }
            set {
                this.feesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class BaggageFeeResponse : ResponseBase {
        
        private BaggageFee[] baggageFeesField;
        
        /// <remarks/>
        public BaggageFee[] BaggageFees {
            get {
                return this.baggageFeesField;
            }
            set {
                this.baggageFeesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Fee {
        
        private System.Guid booking_fee_idField;
        
        private decimal fee_amountField;
        
        private System.Guid booking_idField;
        
        private System.Guid passenger_idField;
        
        private string currency_rcdField;
        
        private decimal acct_fee_amountField;
        
        private System.Guid fee_idField;
        
        private decimal vat_percentageField;
        
        private decimal fee_amount_inclField;
        
        private decimal acct_fee_amount_inclField;
        
        private string fee_rcdField;
        
        private string display_nameField;
        
        private System.Guid account_fee_byField;
        
        private System.DateTime account_fee_date_timeField;
        
        private System.DateTime void_date_timeField;
        
        private System.Guid void_byField;
        
        private decimal payment_amountField;
        
        private System.Guid create_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.Guid update_byField;
        
        private System.DateTime update_date_timeField;
        
        private System.Guid booking_segment_idField;
        
        private string agency_codeField;
        
        private System.Guid passenger_segment_service_idField;
        
        private string fee_category_rcdField;
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private string od_origin_rcdField;
        
        private string od_destination_rcdField;
        
        private decimal number_of_unitsField;
        
        private decimal total_amountField;
        
        private decimal total_amount_inclField;
        
        private byte manual_fee_flagField;
        
        private byte od_flagField;
        
        private byte skip_fare_allowance_flagField;
        
        private string fee_levelField;
        
        private string fee_calculation_rcdField;
        
        private byte minimum_fee_amount_flagField;
        
        private decimal fee_percentageField;
        
        private string change_commentField;
        
        private string commentField;
        
        private decimal total_fee_amountField;
        
        private decimal total_fee_amount_inclField;
        
        private string unitsField;
        
        private string charge_currency_rcdField;
        
        private decimal charge_amountField;
        
        private decimal charge_amount_inclField;
        
        private string document_numberField;
        
        private System.DateTime document_date_timeField;
        
        private string external_referenceField;
        
        private string vendor_rcdField;
        
        private System.Guid baggage_fee_option_idField;
        
        /// <remarks/>
        public System.Guid booking_fee_id {
            get {
                return this.booking_fee_idField;
            }
            set {
                this.booking_fee_idField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount {
            get {
                return this.fee_amountField;
            }
            set {
                this.fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid booking_id {
            get {
                return this.booking_idField;
            }
            set {
                this.booking_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_id {
            get {
                return this.passenger_idField;
            }
            set {
                this.passenger_idField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal acct_fee_amount {
            get {
                return this.acct_fee_amountField;
            }
            set {
                this.acct_fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid fee_id {
            get {
                return this.fee_idField;
            }
            set {
                this.fee_idField = value;
            }
        }
        
        /// <remarks/>
        public decimal vat_percentage {
            get {
                return this.vat_percentageField;
            }
            set {
                this.vat_percentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_amount_incl {
            get {
                return this.fee_amount_inclField;
            }
            set {
                this.fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public decimal acct_fee_amount_incl {
            get {
                return this.acct_fee_amount_inclField;
            }
            set {
                this.acct_fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public string fee_rcd {
            get {
                return this.fee_rcdField;
            }
            set {
                this.fee_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid account_fee_by {
            get {
                return this.account_fee_byField;
            }
            set {
                this.account_fee_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime account_fee_date_time {
            get {
                return this.account_fee_date_timeField;
            }
            set {
                this.account_fee_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime void_date_time {
            get {
                return this.void_date_timeField;
            }
            set {
                this.void_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid void_by {
            get {
                return this.void_byField;
            }
            set {
                this.void_byField = value;
            }
        }
        
        /// <remarks/>
        public decimal payment_amount {
            get {
                return this.payment_amountField;
            }
            set {
                this.payment_amountField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid booking_segment_id {
            get {
                return this.booking_segment_idField;
            }
            set {
                this.booking_segment_idField = value;
            }
        }
        
        /// <remarks/>
        public string agency_code {
            get {
                return this.agency_codeField;
            }
            set {
                this.agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_segment_service_id {
            get {
                return this.passenger_segment_service_idField;
            }
            set {
                this.passenger_segment_service_idField = value;
            }
        }
        
        /// <remarks/>
        public string fee_category_rcd {
            get {
                return this.fee_category_rcdField;
            }
            set {
                this.fee_category_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_origin_rcd {
            get {
                return this.od_origin_rcdField;
            }
            set {
                this.od_origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_destination_rcd {
            get {
                return this.od_destination_rcdField;
            }
            set {
                this.od_destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal number_of_units {
            get {
                return this.number_of_unitsField;
            }
            set {
                this.number_of_unitsField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_amount {
            get {
                return this.total_amountField;
            }
            set {
                this.total_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_amount_incl {
            get {
                return this.total_amount_inclField;
            }
            set {
                this.total_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public byte manual_fee_flag {
            get {
                return this.manual_fee_flagField;
            }
            set {
                this.manual_fee_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte od_flag {
            get {
                return this.od_flagField;
            }
            set {
                this.od_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte skip_fare_allowance_flag {
            get {
                return this.skip_fare_allowance_flagField;
            }
            set {
                this.skip_fare_allowance_flagField = value;
            }
        }
        
        /// <remarks/>
        public string fee_level {
            get {
                return this.fee_levelField;
            }
            set {
                this.fee_levelField = value;
            }
        }
        
        /// <remarks/>
        public string fee_calculation_rcd {
            get {
                return this.fee_calculation_rcdField;
            }
            set {
                this.fee_calculation_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte minimum_fee_amount_flag {
            get {
                return this.minimum_fee_amount_flagField;
            }
            set {
                this.minimum_fee_amount_flagField = value;
            }
        }
        
        /// <remarks/>
        public decimal fee_percentage {
            get {
                return this.fee_percentageField;
            }
            set {
                this.fee_percentageField = value;
            }
        }
        
        /// <remarks/>
        public string change_comment {
            get {
                return this.change_commentField;
            }
            set {
                this.change_commentField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_fee_amount {
            get {
                return this.total_fee_amountField;
            }
            set {
                this.total_fee_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal total_fee_amount_incl {
            get {
                return this.total_fee_amount_inclField;
            }
            set {
                this.total_fee_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string charge_currency_rcd {
            get {
                return this.charge_currency_rcdField;
            }
            set {
                this.charge_currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal charge_amount {
            get {
                return this.charge_amountField;
            }
            set {
                this.charge_amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal charge_amount_incl {
            get {
                return this.charge_amount_inclField;
            }
            set {
                this.charge_amount_inclField = value;
            }
        }
        
        /// <remarks/>
        public string document_number {
            get {
                return this.document_numberField;
            }
            set {
                this.document_numberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime document_date_time {
            get {
                return this.document_date_timeField;
            }
            set {
                this.document_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string external_reference {
            get {
                return this.external_referenceField;
            }
            set {
                this.external_referenceField = value;
            }
        }
        
        /// <remarks/>
        public string vendor_rcd {
            get {
                return this.vendor_rcdField;
            }
            set {
                this.vendor_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid baggage_fee_option_id {
            get {
                return this.baggage_fee_option_idField;
            }
            set {
                this.baggage_fee_option_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class MappingView {
        
        private System.Guid booking_segment_idField;
        
        private string passenger_type_rcdField;
        
        private System.Guid passenger_idField;
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private string od_origin_rcdField;
        
        private string od_destination_rcdField;
        
        private string booking_class_rcdField;
        
        private string currency_rcdField;
        
        private string fare_codeField;
        
        private string airline_rcdField;
        
        private string flight_numberField;
        
        private System.DateTime departure_dateField;
        
        private short piece_allowanceField;
        
        private decimal baggage_weightField;
        
        private string agency_codeField;
        
        /// <remarks/>
        public System.Guid booking_segment_id {
            get {
                return this.booking_segment_idField;
            }
            set {
                this.booking_segment_idField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_type_rcd {
            get {
                return this.passenger_type_rcdField;
            }
            set {
                this.passenger_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_id {
            get {
                return this.passenger_idField;
            }
            set {
                this.passenger_idField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_origin_rcd {
            get {
                return this.od_origin_rcdField;
            }
            set {
                this.od_origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_destination_rcd {
            get {
                return this.od_destination_rcdField;
            }
            set {
                this.od_destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string booking_class_rcd {
            get {
                return this.booking_class_rcdField;
            }
            set {
                this.booking_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string fare_code {
            get {
                return this.fare_codeField;
            }
            set {
                this.fare_codeField = value;
            }
        }
        
        /// <remarks/>
        public string airline_rcd {
            get {
                return this.airline_rcdField;
            }
            set {
                this.airline_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string flight_number {
            get {
                return this.flight_numberField;
            }
            set {
                this.flight_numberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime departure_date {
            get {
                return this.departure_dateField;
            }
            set {
                this.departure_dateField = value;
            }
        }
        
        /// <remarks/>
        public short piece_allowance {
            get {
                return this.piece_allowanceField;
            }
            set {
                this.piece_allowanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal baggage_weight {
            get {
                return this.baggage_weightField;
            }
            set {
                this.baggage_weightField = value;
            }
        }
        
        /// <remarks/>
        public string agency_code {
            get {
                return this.agency_codeField;
            }
            set {
                this.agency_codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class BaggageFeeRequest {
        
        private System.Guid bookingSegmentIdField;
        
        private System.Guid passengerIdField;
        
        private string agencyCodeField;
        
        private string languageCodeField;
        
        private MappingView[] mappingsField;
        
        private int maxUnitField;
        
        private Fee[] feesField;
        
        /// <remarks/>
        public System.Guid BookingSegmentId {
            get {
                return this.bookingSegmentIdField;
            }
            set {
                this.bookingSegmentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PassengerId {
            get {
                return this.passengerIdField;
            }
            set {
                this.passengerIdField = value;
            }
        }
        
        /// <remarks/>
        public string AgencyCode {
            get {
                return this.agencyCodeField;
            }
            set {
                this.agencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageCode {
            get {
                return this.languageCodeField;
            }
            set {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        public MappingView[] Mappings {
            get {
                return this.mappingsField;
            }
            set {
                this.mappingsField = value;
            }
        }
        
        /// <remarks/>
        public int MaxUnit {
            get {
                return this.maxUnitField;
            }
            set {
                this.maxUnitField = value;
            }
        }
        
        /// <remarks/>
        public Fee[] Fees {
            get {
                return this.feesField;
            }
            set {
                this.feesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Agent {
        
        private string agency_codeField;
        
        private string currency_rcdField;
        
        private string agency_payment_type_rcdField;
        
        private string airport_rcdField;
        
        private string country_rcdField;
        
        private string language_rcdField;
        
        private string agency_passwordField;
        
        private System.Guid default_user_account_idField;
        
        private string user_logonField;
        
        private string agency_logonField;
        
        private string agency_nameField;
        
        private string ag_language_rcdField;
        
        private byte default_e_ticket_flagField;
        
        private string emailField;
        
        private string status_codeField;
        
        private System.Guid merchant_idField;
        
        private string notify_byField;
        
        private System.Guid default_customer_document_idField;
        
        private System.Guid default_small_itinerary_document_idField;
        
        private System.Guid default_internal_itinerary_document_idField;
        
        private string payment_default_codeField;
        
        private string agency_type_codeField;
        
        private System.Guid user_account_idField;
        
        private string user_codeField;
        
        private string lastnameField;
        
        private string middlenameField;
        
        private string firstnameField;
        
        private string origin_rcdField;
        
        private decimal outstanding_invoiceField;
        
        private decimal booking_paymentField;
        
        private decimal agency_accountField;
        
        private string website_addressField;
        
        private string tty_addressField;
        
        private System.DateTime create_date_timeField;
        
        private System.DateTime update_date_timeField;
        
        private string cashbook_closing_rcdField;
        
        private System.Guid cashbook_closing_idField;
        
        private System.Guid create_byField;
        
        private int agency_timezoneField;
        
        private int system_setting_timezoneField;
        
        private System.Guid company_client_profile_idField;
        
        private System.Guid client_profile_idField;
        
        private string invoice_daysField;
        
        private string address_line1Field;
        
        private string address_line2Field;
        
        private string cityField;
        
        private string bank_codeField;
        
        private string bank_nameField;
        
        private string bank_accountField;
        
        private string contact_personField;
        
        private string districtField;
        
        private string phoneField;
        
        private string faxField;
        
        private string po_boxField;
        
        private string provinceField;
        
        private string stateField;
        
        private string streetField;
        
        private string zip_codeField;
        
        private System.DateTime b2b_bsp_from_dateField;
        
        private string iata_numberField;
        
        private byte send_mailto_all_passengerField;
        
        private string legal_nameField;
        
        private string tax_idField;
        
        private System.DateTime tax_id_verified_date_timeField;
        
        private byte airport_ticket_office_flagField;
        
        private byte city_sales_office_flagField;
        
        private System.Guid update_byField;
        
        private byte default_ticket_on_payment_flagField;
        
        private byte default_payment_on_save_flagField;
        
        private byte email_invoice_flagField;
        
        private byte log_availability_flagField;
        
        private string export_cycle_codeField;
        
        private string pos_indicatorField;
        
        private string cashbook_agency_group_rcdField;
        
        private decimal withholding_tax_percentageField;
        
        private byte commission_topup_flagField;
        
        private byte receive_commission_flagField;
        
        private string consolidator_agency_codeField;
        
        private string accounting_emailField;
        
        private string external_ar_accountField;
        
        private System.Guid tax_id_verified_byField;
        
        private string bank_ibanField;
        
        private decimal commission_percentageField;
        
        private string create_nameField;
        
        private string update_nameField;
        
        private byte process_baggage_tag_flagField;
        
        private byte process_refund_flagField;
        
        private string column_1_tax_rcdField;
        
        private string column_2_tax_rcdField;
        
        private string column_3_tax_rcdField;
        
        private byte default_show_passenger_flagField;
        
        private byte default_auto_print_ticket_flagField;
        
        private byte default_ticket_on_save_flagField;
        
        private byte web_agency_flagField;
        
        private byte own_agency_flagField;
        
        private byte b2b_eft_flagField;
        
        private byte b2b_credit_card_payment_flagField;
        
        private byte b2b_voucher_payment_flagField;
        
        private byte b2b_post_paid_flagField;
        
        private byte b2b_allow_seat_assignment_flagField;
        
        private byte b2b_allow_cancel_segment_flagField;
        
        private byte b2b_allow_change_flight_flagField;
        
        private byte b2b_allow_name_change_flagField;
        
        private byte b2b_allow_change_details_flagField;
        
        private byte allow_noshow_cancel_segment_flagField;
        
        private byte allow_noshow_change_flight_flagField;
        
        private byte balance_lock_flagField;
        
        private byte issue_ticket_flagField;
        
        private byte ticket_stock_flagField;
        
        private byte b2b_allow_split_flagField;
        
        private byte b2b_allow_service_flagField;
        
        private byte b2b_group_waitlist_flagField;
        
        private byte avl_show_net_total_flagField;
        
        private byte make_bookings_for_others_flagField;
        
        private byte consolidator_flagField;
        
        private byte b2b_credit_agency_and_invoice_flagField;
        
        private byte b2b_download_sales_report_flagField;
        
        private byte b2b_show_remarks_flagField;
        
        private byte private_fares_flagField;
        
        private byte b2b_allow_group_flagField;
        
        private byte b2b_allow_waitlist_flagField;
        
        private byte b2b_bsp_billing_flagField;
        
        private byte use_origin_currency_flagField;
        
        private byte no_vat_flagField;
        
        private byte allow_no_taxField;
        
        private byte allow_add_segment_flagField;
        
        private byte individual_firmed_flagField;
        
        private byte individual_waitlist_flagField;
        
        private byte group_firmed_flagField;
        
        private byte group_waitlist_flagField;
        
        private byte disable_changes_through_b2c_flagField;
        
        private byte disable_web_checkin_flagField;
        
        private byte api_flagField;
        
        private byte neutral_currency_flagField;
        
        private string title_rcdField;
        
        private string commentField;
        
        private byte allow_change_passenger_information_flagField;
        
        /// <remarks/>
        public string agency_code {
            get {
                return this.agency_codeField;
            }
            set {
                this.agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string agency_payment_type_rcd {
            get {
                return this.agency_payment_type_rcdField;
            }
            set {
                this.agency_payment_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string airport_rcd {
            get {
                return this.airport_rcdField;
            }
            set {
                this.airport_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string agency_password {
            get {
                return this.agency_passwordField;
            }
            set {
                this.agency_passwordField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid default_user_account_id {
            get {
                return this.default_user_account_idField;
            }
            set {
                this.default_user_account_idField = value;
            }
        }
        
        /// <remarks/>
        public string user_logon {
            get {
                return this.user_logonField;
            }
            set {
                this.user_logonField = value;
            }
        }
        
        /// <remarks/>
        public string agency_logon {
            get {
                return this.agency_logonField;
            }
            set {
                this.agency_logonField = value;
            }
        }
        
        /// <remarks/>
        public string agency_name {
            get {
                return this.agency_nameField;
            }
            set {
                this.agency_nameField = value;
            }
        }
        
        /// <remarks/>
        public string ag_language_rcd {
            get {
                return this.ag_language_rcdField;
            }
            set {
                this.ag_language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte default_e_ticket_flag {
            get {
                return this.default_e_ticket_flagField;
            }
            set {
                this.default_e_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid merchant_id {
            get {
                return this.merchant_idField;
            }
            set {
                this.merchant_idField = value;
            }
        }
        
        /// <remarks/>
        public string notify_by {
            get {
                return this.notify_byField;
            }
            set {
                this.notify_byField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid default_customer_document_id {
            get {
                return this.default_customer_document_idField;
            }
            set {
                this.default_customer_document_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid default_small_itinerary_document_id {
            get {
                return this.default_small_itinerary_document_idField;
            }
            set {
                this.default_small_itinerary_document_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid default_internal_itinerary_document_id {
            get {
                return this.default_internal_itinerary_document_idField;
            }
            set {
                this.default_internal_itinerary_document_idField = value;
            }
        }
        
        /// <remarks/>
        public string payment_default_code {
            get {
                return this.payment_default_codeField;
            }
            set {
                this.payment_default_codeField = value;
            }
        }
        
        /// <remarks/>
        public string agency_type_code {
            get {
                return this.agency_type_codeField;
            }
            set {
                this.agency_type_codeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid user_account_id {
            get {
                return this.user_account_idField;
            }
            set {
                this.user_account_idField = value;
            }
        }
        
        /// <remarks/>
        public string user_code {
            get {
                return this.user_codeField;
            }
            set {
                this.user_codeField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string middlename {
            get {
                return this.middlenameField;
            }
            set {
                this.middlenameField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal outstanding_invoice {
            get {
                return this.outstanding_invoiceField;
            }
            set {
                this.outstanding_invoiceField = value;
            }
        }
        
        /// <remarks/>
        public decimal booking_payment {
            get {
                return this.booking_paymentField;
            }
            set {
                this.booking_paymentField = value;
            }
        }
        
        /// <remarks/>
        public decimal agency_account {
            get {
                return this.agency_accountField;
            }
            set {
                this.agency_accountField = value;
            }
        }
        
        /// <remarks/>
        public string website_address {
            get {
                return this.website_addressField;
            }
            set {
                this.website_addressField = value;
            }
        }
        
        /// <remarks/>
        public string tty_address {
            get {
                return this.tty_addressField;
            }
            set {
                this.tty_addressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string cashbook_closing_rcd {
            get {
                return this.cashbook_closing_rcdField;
            }
            set {
                this.cashbook_closing_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid cashbook_closing_id {
            get {
                return this.cashbook_closing_idField;
            }
            set {
                this.cashbook_closing_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public int agency_timezone {
            get {
                return this.agency_timezoneField;
            }
            set {
                this.agency_timezoneField = value;
            }
        }
        
        /// <remarks/>
        public int system_setting_timezone {
            get {
                return this.system_setting_timezoneField;
            }
            set {
                this.system_setting_timezoneField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid company_client_profile_id {
            get {
                return this.company_client_profile_idField;
            }
            set {
                this.company_client_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid client_profile_id {
            get {
                return this.client_profile_idField;
            }
            set {
                this.client_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public string invoice_days {
            get {
                return this.invoice_daysField;
            }
            set {
                this.invoice_daysField = value;
            }
        }
        
        /// <remarks/>
        public string address_line1 {
            get {
                return this.address_line1Field;
            }
            set {
                this.address_line1Field = value;
            }
        }
        
        /// <remarks/>
        public string address_line2 {
            get {
                return this.address_line2Field;
            }
            set {
                this.address_line2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string bank_code {
            get {
                return this.bank_codeField;
            }
            set {
                this.bank_codeField = value;
            }
        }
        
        /// <remarks/>
        public string bank_name {
            get {
                return this.bank_nameField;
            }
            set {
                this.bank_nameField = value;
            }
        }
        
        /// <remarks/>
        public string bank_account {
            get {
                return this.bank_accountField;
            }
            set {
                this.bank_accountField = value;
            }
        }
        
        /// <remarks/>
        public string contact_person {
            get {
                return this.contact_personField;
            }
            set {
                this.contact_personField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string po_box {
            get {
                return this.po_boxField;
            }
            set {
                this.po_boxField = value;
            }
        }
        
        /// <remarks/>
        public string province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                this.zip_codeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime b2b_bsp_from_date {
            get {
                return this.b2b_bsp_from_dateField;
            }
            set {
                this.b2b_bsp_from_dateField = value;
            }
        }
        
        /// <remarks/>
        public string iata_number {
            get {
                return this.iata_numberField;
            }
            set {
                this.iata_numberField = value;
            }
        }
        
        /// <remarks/>
        public byte send_mailto_all_passenger {
            get {
                return this.send_mailto_all_passengerField;
            }
            set {
                this.send_mailto_all_passengerField = value;
            }
        }
        
        /// <remarks/>
        public string legal_name {
            get {
                return this.legal_nameField;
            }
            set {
                this.legal_nameField = value;
            }
        }
        
        /// <remarks/>
        public string tax_id {
            get {
                return this.tax_idField;
            }
            set {
                this.tax_idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime tax_id_verified_date_time {
            get {
                return this.tax_id_verified_date_timeField;
            }
            set {
                this.tax_id_verified_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public byte airport_ticket_office_flag {
            get {
                return this.airport_ticket_office_flagField;
            }
            set {
                this.airport_ticket_office_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte city_sales_office_flag {
            get {
                return this.city_sales_office_flagField;
            }
            set {
                this.city_sales_office_flagField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public byte default_ticket_on_payment_flag {
            get {
                return this.default_ticket_on_payment_flagField;
            }
            set {
                this.default_ticket_on_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_payment_on_save_flag {
            get {
                return this.default_payment_on_save_flagField;
            }
            set {
                this.default_payment_on_save_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte email_invoice_flag {
            get {
                return this.email_invoice_flagField;
            }
            set {
                this.email_invoice_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte log_availability_flag {
            get {
                return this.log_availability_flagField;
            }
            set {
                this.log_availability_flagField = value;
            }
        }
        
        /// <remarks/>
        public string export_cycle_code {
            get {
                return this.export_cycle_codeField;
            }
            set {
                this.export_cycle_codeField = value;
            }
        }
        
        /// <remarks/>
        public string pos_indicator {
            get {
                return this.pos_indicatorField;
            }
            set {
                this.pos_indicatorField = value;
            }
        }
        
        /// <remarks/>
        public string cashbook_agency_group_rcd {
            get {
                return this.cashbook_agency_group_rcdField;
            }
            set {
                this.cashbook_agency_group_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal withholding_tax_percentage {
            get {
                return this.withholding_tax_percentageField;
            }
            set {
                this.withholding_tax_percentageField = value;
            }
        }
        
        /// <remarks/>
        public byte commission_topup_flag {
            get {
                return this.commission_topup_flagField;
            }
            set {
                this.commission_topup_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte receive_commission_flag {
            get {
                return this.receive_commission_flagField;
            }
            set {
                this.receive_commission_flagField = value;
            }
        }
        
        /// <remarks/>
        public string consolidator_agency_code {
            get {
                return this.consolidator_agency_codeField;
            }
            set {
                this.consolidator_agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public string accounting_email {
            get {
                return this.accounting_emailField;
            }
            set {
                this.accounting_emailField = value;
            }
        }
        
        /// <remarks/>
        public string external_ar_account {
            get {
                return this.external_ar_accountField;
            }
            set {
                this.external_ar_accountField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid tax_id_verified_by {
            get {
                return this.tax_id_verified_byField;
            }
            set {
                this.tax_id_verified_byField = value;
            }
        }
        
        /// <remarks/>
        public string bank_iban {
            get {
                return this.bank_ibanField;
            }
            set {
                this.bank_ibanField = value;
            }
        }
        
        /// <remarks/>
        public decimal commission_percentage {
            get {
                return this.commission_percentageField;
            }
            set {
                this.commission_percentageField = value;
            }
        }
        
        /// <remarks/>
        public string create_name {
            get {
                return this.create_nameField;
            }
            set {
                this.create_nameField = value;
            }
        }
        
        /// <remarks/>
        public string update_name {
            get {
                return this.update_nameField;
            }
            set {
                this.update_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte process_baggage_tag_flag {
            get {
                return this.process_baggage_tag_flagField;
            }
            set {
                this.process_baggage_tag_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte process_refund_flag {
            get {
                return this.process_refund_flagField;
            }
            set {
                this.process_refund_flagField = value;
            }
        }
        
        /// <remarks/>
        public string column_1_tax_rcd {
            get {
                return this.column_1_tax_rcdField;
            }
            set {
                this.column_1_tax_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string column_2_tax_rcd {
            get {
                return this.column_2_tax_rcdField;
            }
            set {
                this.column_2_tax_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string column_3_tax_rcd {
            get {
                return this.column_3_tax_rcdField;
            }
            set {
                this.column_3_tax_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte default_show_passenger_flag {
            get {
                return this.default_show_passenger_flagField;
            }
            set {
                this.default_show_passenger_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_auto_print_ticket_flag {
            get {
                return this.default_auto_print_ticket_flagField;
            }
            set {
                this.default_auto_print_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_ticket_on_save_flag {
            get {
                return this.default_ticket_on_save_flagField;
            }
            set {
                this.default_ticket_on_save_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte web_agency_flag {
            get {
                return this.web_agency_flagField;
            }
            set {
                this.web_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte own_agency_flag {
            get {
                return this.own_agency_flagField;
            }
            set {
                this.own_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_eft_flag {
            get {
                return this.b2b_eft_flagField;
            }
            set {
                this.b2b_eft_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_credit_card_payment_flag {
            get {
                return this.b2b_credit_card_payment_flagField;
            }
            set {
                this.b2b_credit_card_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_voucher_payment_flag {
            get {
                return this.b2b_voucher_payment_flagField;
            }
            set {
                this.b2b_voucher_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_post_paid_flag {
            get {
                return this.b2b_post_paid_flagField;
            }
            set {
                this.b2b_post_paid_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_seat_assignment_flag {
            get {
                return this.b2b_allow_seat_assignment_flagField;
            }
            set {
                this.b2b_allow_seat_assignment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_cancel_segment_flag {
            get {
                return this.b2b_allow_cancel_segment_flagField;
            }
            set {
                this.b2b_allow_cancel_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_change_flight_flag {
            get {
                return this.b2b_allow_change_flight_flagField;
            }
            set {
                this.b2b_allow_change_flight_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_name_change_flag {
            get {
                return this.b2b_allow_name_change_flagField;
            }
            set {
                this.b2b_allow_name_change_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_change_details_flag {
            get {
                return this.b2b_allow_change_details_flagField;
            }
            set {
                this.b2b_allow_change_details_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte allow_noshow_cancel_segment_flag {
            get {
                return this.allow_noshow_cancel_segment_flagField;
            }
            set {
                this.allow_noshow_cancel_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte allow_noshow_change_flight_flag {
            get {
                return this.allow_noshow_change_flight_flagField;
            }
            set {
                this.allow_noshow_change_flight_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte balance_lock_flag {
            get {
                return this.balance_lock_flagField;
            }
            set {
                this.balance_lock_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte issue_ticket_flag {
            get {
                return this.issue_ticket_flagField;
            }
            set {
                this.issue_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte ticket_stock_flag {
            get {
                return this.ticket_stock_flagField;
            }
            set {
                this.ticket_stock_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_split_flag {
            get {
                return this.b2b_allow_split_flagField;
            }
            set {
                this.b2b_allow_split_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_service_flag {
            get {
                return this.b2b_allow_service_flagField;
            }
            set {
                this.b2b_allow_service_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_group_waitlist_flag {
            get {
                return this.b2b_group_waitlist_flagField;
            }
            set {
                this.b2b_group_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte avl_show_net_total_flag {
            get {
                return this.avl_show_net_total_flagField;
            }
            set {
                this.avl_show_net_total_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte make_bookings_for_others_flag {
            get {
                return this.make_bookings_for_others_flagField;
            }
            set {
                this.make_bookings_for_others_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte consolidator_flag {
            get {
                return this.consolidator_flagField;
            }
            set {
                this.consolidator_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_credit_agency_and_invoice_flag {
            get {
                return this.b2b_credit_agency_and_invoice_flagField;
            }
            set {
                this.b2b_credit_agency_and_invoice_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_download_sales_report_flag {
            get {
                return this.b2b_download_sales_report_flagField;
            }
            set {
                this.b2b_download_sales_report_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_show_remarks_flag {
            get {
                return this.b2b_show_remarks_flagField;
            }
            set {
                this.b2b_show_remarks_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte private_fares_flag {
            get {
                return this.private_fares_flagField;
            }
            set {
                this.private_fares_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_group_flag {
            get {
                return this.b2b_allow_group_flagField;
            }
            set {
                this.b2b_allow_group_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_waitlist_flag {
            get {
                return this.b2b_allow_waitlist_flagField;
            }
            set {
                this.b2b_allow_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_bsp_billing_flag {
            get {
                return this.b2b_bsp_billing_flagField;
            }
            set {
                this.b2b_bsp_billing_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte use_origin_currency_flag {
            get {
                return this.use_origin_currency_flagField;
            }
            set {
                this.use_origin_currency_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte no_vat_flag {
            get {
                return this.no_vat_flagField;
            }
            set {
                this.no_vat_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte allow_no_tax {
            get {
                return this.allow_no_taxField;
            }
            set {
                this.allow_no_taxField = value;
            }
        }
        
        /// <remarks/>
        public byte allow_add_segment_flag {
            get {
                return this.allow_add_segment_flagField;
            }
            set {
                this.allow_add_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte individual_firmed_flag {
            get {
                return this.individual_firmed_flagField;
            }
            set {
                this.individual_firmed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte individual_waitlist_flag {
            get {
                return this.individual_waitlist_flagField;
            }
            set {
                this.individual_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte group_firmed_flag {
            get {
                return this.group_firmed_flagField;
            }
            set {
                this.group_firmed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte group_waitlist_flag {
            get {
                return this.group_waitlist_flagField;
            }
            set {
                this.group_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte disable_changes_through_b2c_flag {
            get {
                return this.disable_changes_through_b2c_flagField;
            }
            set {
                this.disable_changes_through_b2c_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte disable_web_checkin_flag {
            get {
                return this.disable_web_checkin_flagField;
            }
            set {
                this.disable_web_checkin_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte api_flag {
            get {
                return this.api_flagField;
            }
            set {
                this.api_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte neutral_currency_flag {
            get {
                return this.neutral_currency_flagField;
            }
            set {
                this.neutral_currency_flagField = value;
            }
        }
        
        /// <remarks/>
        public string title_rcd {
            get {
                return this.title_rcdField;
            }
            set {
                this.title_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public byte allow_change_passenger_information_flag {
            get {
                return this.allow_change_passenger_information_flagField;
            }
            set {
                this.allow_change_passenger_information_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class User {
        
        private System.Guid user_account_idField;
        
        private string user_logonField;
        
        private string user_codeField;
        
        private string lastnameField;
        
        private string firstnameField;
        
        private string email_addressField;
        
        private string status_codeField;
        
        private string user_passwordField;
        
        private string language_rcdField;
        
        private System.Guid create_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.Guid update_byField;
        
        private System.DateTime update_date_timeField;
        
        private byte system_admin_flagField;
        
        private byte make_bookings_for_others_flagField;
        
        private string address_default_codeField;
        
        private byte change_segment_flagField;
        
        private byte delete_segment_flagField;
        
        private byte update_booking_flagField;
        
        private byte issue_ticket_flagField;
        
        private byte counter_sales_report_flagField;
        
        private byte mon_flagField;
        
        private byte tue_flagField;
        
        private byte wed_flagField;
        
        private byte thu_flagField;
        
        private byte fri_flagField;
        
        private byte sat_flagField;
        
        private byte sun_flagField;
        
        private string password_b2eField;
        
        private string new_password_b2eField;
        
        private string isUserField;
        
        private string isURLField;
        
        private byte logoYeti_flagField;
        
        private byte logoTara_flagField;
        
        /// <remarks/>
        public System.Guid user_account_id {
            get {
                return this.user_account_idField;
            }
            set {
                this.user_account_idField = value;
            }
        }
        
        /// <remarks/>
        public string user_logon {
            get {
                return this.user_logonField;
            }
            set {
                this.user_logonField = value;
            }
        }
        
        /// <remarks/>
        public string user_code {
            get {
                return this.user_codeField;
            }
            set {
                this.user_codeField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string email_address {
            get {
                return this.email_addressField;
            }
            set {
                this.email_addressField = value;
            }
        }
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public string user_password {
            get {
                return this.user_passwordField;
            }
            set {
                this.user_passwordField = value;
            }
        }
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public byte system_admin_flag {
            get {
                return this.system_admin_flagField;
            }
            set {
                this.system_admin_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte make_bookings_for_others_flag {
            get {
                return this.make_bookings_for_others_flagField;
            }
            set {
                this.make_bookings_for_others_flagField = value;
            }
        }
        
        /// <remarks/>
        public string address_default_code {
            get {
                return this.address_default_codeField;
            }
            set {
                this.address_default_codeField = value;
            }
        }
        
        /// <remarks/>
        public byte change_segment_flag {
            get {
                return this.change_segment_flagField;
            }
            set {
                this.change_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte delete_segment_flag {
            get {
                return this.delete_segment_flagField;
            }
            set {
                this.delete_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte update_booking_flag {
            get {
                return this.update_booking_flagField;
            }
            set {
                this.update_booking_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte issue_ticket_flag {
            get {
                return this.issue_ticket_flagField;
            }
            set {
                this.issue_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte counter_sales_report_flag {
            get {
                return this.counter_sales_report_flagField;
            }
            set {
                this.counter_sales_report_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte mon_flag {
            get {
                return this.mon_flagField;
            }
            set {
                this.mon_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte tue_flag {
            get {
                return this.tue_flagField;
            }
            set {
                this.tue_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte wed_flag {
            get {
                return this.wed_flagField;
            }
            set {
                this.wed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte thu_flag {
            get {
                return this.thu_flagField;
            }
            set {
                this.thu_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte fri_flag {
            get {
                return this.fri_flagField;
            }
            set {
                this.fri_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte sat_flag {
            get {
                return this.sat_flagField;
            }
            set {
                this.sat_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte sun_flag {
            get {
                return this.sun_flagField;
            }
            set {
                this.sun_flagField = value;
            }
        }
        
        /// <remarks/>
        public string password_b2e {
            get {
                return this.password_b2eField;
            }
            set {
                this.password_b2eField = value;
            }
        }
        
        /// <remarks/>
        public string new_password_b2e {
            get {
                return this.new_password_b2eField;
            }
            set {
                this.new_password_b2eField = value;
            }
        }
        
        /// <remarks/>
        public string isUser {
            get {
                return this.isUserField;
            }
            set {
                this.isUserField = value;
            }
        }
        
        /// <remarks/>
        public string isURL {
            get {
                return this.isURLField;
            }
            set {
                this.isURLField = value;
            }
        }
        
        /// <remarks/>
        public byte logoYeti_flag {
            get {
                return this.logoYeti_flagField;
            }
            set {
                this.logoYeti_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte logoTara_flag {
            get {
                return this.logoTara_flagField;
            }
            set {
                this.logoTara_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Service {
        
        private System.Guid passenger_segment_service_idField;
        
        private System.Guid passenger_idField;
        
        private System.Guid booking_segment_idField;
        
        private string special_service_status_rcdField;
        
        private string special_service_change_status_rcdField;
        
        private string special_service_rcdField;
        
        private string service_textField;
        
        private System.Guid create_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.Guid update_byField;
        
        private System.DateTime update_date_timeField;
        
        private string flight_idField;
        
        private string fee_idField;
        
        private short number_of_unitsField;
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private string display_nameField;
        
        private int cut_off_timeField;
        
        private string status_codeField;
        
        private string help_textField;
        
        private string special_service_group_rcdField;
        
        private string special_service_group_inventory_rcdField;
        
        private System.Guid account_fee_byField;
        
        private System.DateTime account_fee_date_timeField;
        
        private string boarding_class_rcdField;
        
        private byte service_on_request_flagField;
        
        private byte text_allowed_flagField;
        
        private byte manifest_flagField;
        
        private byte text_required_flagField;
        
        private byte include_passenger_name_flagField;
        
        private byte include_flight_segment_flagField;
        
        private byte include_action_code_flagField;
        
        private byte include_number_of_service_flagField;
        
        private byte include_catering_flagField;
        
        private byte include_passenger_assistance_flagField;
        
        private byte service_supported_flagField;
        
        private byte send_interline_reply_flagField;
        
        private byte inventory_control_flagField;
        
        /// <remarks/>
        public System.Guid passenger_segment_service_id {
            get {
                return this.passenger_segment_service_idField;
            }
            set {
                this.passenger_segment_service_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_id {
            get {
                return this.passenger_idField;
            }
            set {
                this.passenger_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid booking_segment_id {
            get {
                return this.booking_segment_idField;
            }
            set {
                this.booking_segment_idField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_status_rcd {
            get {
                return this.special_service_status_rcdField;
            }
            set {
                this.special_service_status_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_change_status_rcd {
            get {
                return this.special_service_change_status_rcdField;
            }
            set {
                this.special_service_change_status_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_rcd {
            get {
                return this.special_service_rcdField;
            }
            set {
                this.special_service_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string service_text {
            get {
                return this.service_textField;
            }
            set {
                this.service_textField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string flight_id {
            get {
                return this.flight_idField;
            }
            set {
                this.flight_idField = value;
            }
        }
        
        /// <remarks/>
        public string fee_id {
            get {
                return this.fee_idField;
            }
            set {
                this.fee_idField = value;
            }
        }
        
        /// <remarks/>
        public short number_of_units {
            get {
                return this.number_of_unitsField;
            }
            set {
                this.number_of_unitsField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public int cut_off_time {
            get {
                return this.cut_off_timeField;
            }
            set {
                this.cut_off_timeField = value;
            }
        }
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public string help_text {
            get {
                return this.help_textField;
            }
            set {
                this.help_textField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_group_rcd {
            get {
                return this.special_service_group_rcdField;
            }
            set {
                this.special_service_group_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string special_service_group_inventory_rcd {
            get {
                return this.special_service_group_inventory_rcdField;
            }
            set {
                this.special_service_group_inventory_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid account_fee_by {
            get {
                return this.account_fee_byField;
            }
            set {
                this.account_fee_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime account_fee_date_time {
            get {
                return this.account_fee_date_timeField;
            }
            set {
                this.account_fee_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string boarding_class_rcd {
            get {
                return this.boarding_class_rcdField;
            }
            set {
                this.boarding_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte service_on_request_flag {
            get {
                return this.service_on_request_flagField;
            }
            set {
                this.service_on_request_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte text_allowed_flag {
            get {
                return this.text_allowed_flagField;
            }
            set {
                this.text_allowed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte manifest_flag {
            get {
                return this.manifest_flagField;
            }
            set {
                this.manifest_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte text_required_flag {
            get {
                return this.text_required_flagField;
            }
            set {
                this.text_required_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_passenger_name_flag {
            get {
                return this.include_passenger_name_flagField;
            }
            set {
                this.include_passenger_name_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_flight_segment_flag {
            get {
                return this.include_flight_segment_flagField;
            }
            set {
                this.include_flight_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_action_code_flag {
            get {
                return this.include_action_code_flagField;
            }
            set {
                this.include_action_code_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_number_of_service_flag {
            get {
                return this.include_number_of_service_flagField;
            }
            set {
                this.include_number_of_service_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_catering_flag {
            get {
                return this.include_catering_flagField;
            }
            set {
                this.include_catering_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte include_passenger_assistance_flag {
            get {
                return this.include_passenger_assistance_flagField;
            }
            set {
                this.include_passenger_assistance_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte service_supported_flag {
            get {
                return this.service_supported_flagField;
            }
            set {
                this.service_supported_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte send_interline_reply_flag {
            get {
                return this.send_interline_reply_flagField;
            }
            set {
                this.send_interline_reply_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte inventory_control_flag {
            get {
                return this.inventory_control_flagField;
            }
            set {
                this.inventory_control_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Currency {
        
        private string currency_rcdField;
        
        private string display_nameField;
        
        private decimal max_voucher_valueField;
        
        private decimal rounding_ruleField;
        
        private short number_of_decimalsField;
        
        private string currency_numberField;
        
        private string display_codeField;
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal max_voucher_value {
            get {
                return this.max_voucher_valueField;
            }
            set {
                this.max_voucher_valueField = value;
            }
        }
        
        /// <remarks/>
        public decimal rounding_rule {
            get {
                return this.rounding_ruleField;
            }
            set {
                this.rounding_ruleField = value;
            }
        }
        
        /// <remarks/>
        public short number_of_decimals {
            get {
                return this.number_of_decimalsField;
            }
            set {
                this.number_of_decimalsField = value;
            }
        }
        
        /// <remarks/>
        public string currency_number {
            get {
                return this.currency_numberField;
            }
            set {
                this.currency_numberField = value;
            }
        }
        
        /// <remarks/>
        public string display_code {
            get {
                return this.display_codeField;
            }
            set {
                this.display_codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class BookingHeader {
        
        private System.Guid booking_idField;
        
        private string booking_source_rcdField;
        
        private string currency_rcdField;
        
        private System.Guid client_profile_idField;
        
        private long booking_numberField;
        
        private string record_locatorField;
        
        private int number_of_adultsField;
        
        private int number_of_childrenField;
        
        private int number_of_infantsField;
        
        private int number_of_othersField;
        
        private string passenger_other_type_rcdField;
        
        private string passenger_other_displayField;
        
        private string language_rcdField;
        
        private string agency_codeField;
        
        private string contact_nameField;
        
        private string contact_emailField;
        
        private string phone_mobileField;
        
        private string phone_homeField;
        
        private string phone_businessField;
        
        private string received_fromField;
        
        private string phone_faxField;
        
        private string phone_searchField;
        
        private string commentField;
        
        private byte notify_by_email_flagField;
        
        private byte notify_by_sms_flagField;
        
        private string group_nameField;
        
        private byte group_booking_flagField;
        
        private string agency_nameField;
        
        private byte own_agency_flagField;
        
        private byte web_agency_flagField;
        
        private long client_numberField;
        
        private string lastnameField;
        
        private string firstnameField;
        
        private string cityField;
        
        private string create_nameField;
        
        private string streetField;
        
        private System.DateTime lock_date_timeField;
        
        private string middlenameField;
        
        private string address_line1Field;
        
        private string address_line2Field;
        
        private string stateField;
        
        private string districtField;
        
        private string provinceField;
        
        private string zip_codeField;
        
        private string po_boxField;
        
        private string country_rcdField;
        
        private string title_rcdField;
        
        private string external_payment_referenceField;
        
        private System.Guid create_byField;
        
        private System.Guid update_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.DateTime update_date_timeField;
        
        private string cost_centerField;
        
        private string purchase_orderField;
        
        private string project_numberField;
        
        private string lock_nameField;
        
        private string ip_addressField;
        
        private byte approval_flagField;
        
        private string invoice_receiverField;
        
        private string tax_idField;
        
        private string agency_tax_idField;
        
        private byte newsletter_flagField;
        
        private string contact_email_ccField;
        
        private string mobile_emailField;
        
        private string vendor_rcdField;
        
        private System.DateTime booking_date_timeField;
        
        private string notify_by_rcdField;
        
        private byte no_vat_flagField;
        
        private string company_nameField;
        
        private byte business_flagField;
        
        private byte standby_flagField;
        
        private byte disable_changes_through_b2c_flagField;
        
        /// <remarks/>
        public System.Guid booking_id {
            get {
                return this.booking_idField;
            }
            set {
                this.booking_idField = value;
            }
        }
        
        /// <remarks/>
        public string booking_source_rcd {
            get {
                return this.booking_source_rcdField;
            }
            set {
                this.booking_source_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid client_profile_id {
            get {
                return this.client_profile_idField;
            }
            set {
                this.client_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public long booking_number {
            get {
                return this.booking_numberField;
            }
            set {
                this.booking_numberField = value;
            }
        }
        
        /// <remarks/>
        public string record_locator {
            get {
                return this.record_locatorField;
            }
            set {
                this.record_locatorField = value;
            }
        }
        
        /// <remarks/>
        public int number_of_adults {
            get {
                return this.number_of_adultsField;
            }
            set {
                this.number_of_adultsField = value;
            }
        }
        
        /// <remarks/>
        public int number_of_children {
            get {
                return this.number_of_childrenField;
            }
            set {
                this.number_of_childrenField = value;
            }
        }
        
        /// <remarks/>
        public int number_of_infants {
            get {
                return this.number_of_infantsField;
            }
            set {
                this.number_of_infantsField = value;
            }
        }
        
        /// <remarks/>
        public int number_of_others {
            get {
                return this.number_of_othersField;
            }
            set {
                this.number_of_othersField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_other_type_rcd {
            get {
                return this.passenger_other_type_rcdField;
            }
            set {
                this.passenger_other_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_other_display {
            get {
                return this.passenger_other_displayField;
            }
            set {
                this.passenger_other_displayField = value;
            }
        }
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string agency_code {
            get {
                return this.agency_codeField;
            }
            set {
                this.agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public string contact_name {
            get {
                return this.contact_nameField;
            }
            set {
                this.contact_nameField = value;
            }
        }
        
        /// <remarks/>
        public string contact_email {
            get {
                return this.contact_emailField;
            }
            set {
                this.contact_emailField = value;
            }
        }
        
        /// <remarks/>
        public string phone_mobile {
            get {
                return this.phone_mobileField;
            }
            set {
                this.phone_mobileField = value;
            }
        }
        
        /// <remarks/>
        public string phone_home {
            get {
                return this.phone_homeField;
            }
            set {
                this.phone_homeField = value;
            }
        }
        
        /// <remarks/>
        public string phone_business {
            get {
                return this.phone_businessField;
            }
            set {
                this.phone_businessField = value;
            }
        }
        
        /// <remarks/>
        public string received_from {
            get {
                return this.received_fromField;
            }
            set {
                this.received_fromField = value;
            }
        }
        
        /// <remarks/>
        public string phone_fax {
            get {
                return this.phone_faxField;
            }
            set {
                this.phone_faxField = value;
            }
        }
        
        /// <remarks/>
        public string phone_search {
            get {
                return this.phone_searchField;
            }
            set {
                this.phone_searchField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public byte notify_by_email_flag {
            get {
                return this.notify_by_email_flagField;
            }
            set {
                this.notify_by_email_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte notify_by_sms_flag {
            get {
                return this.notify_by_sms_flagField;
            }
            set {
                this.notify_by_sms_flagField = value;
            }
        }
        
        /// <remarks/>
        public string group_name {
            get {
                return this.group_nameField;
            }
            set {
                this.group_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte group_booking_flag {
            get {
                return this.group_booking_flagField;
            }
            set {
                this.group_booking_flagField = value;
            }
        }
        
        /// <remarks/>
        public string agency_name {
            get {
                return this.agency_nameField;
            }
            set {
                this.agency_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte own_agency_flag {
            get {
                return this.own_agency_flagField;
            }
            set {
                this.own_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte web_agency_flag {
            get {
                return this.web_agency_flagField;
            }
            set {
                this.web_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public long client_number {
            get {
                return this.client_numberField;
            }
            set {
                this.client_numberField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string create_name {
            get {
                return this.create_nameField;
            }
            set {
                this.create_nameField = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lock_date_time {
            get {
                return this.lock_date_timeField;
            }
            set {
                this.lock_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string middlename {
            get {
                return this.middlenameField;
            }
            set {
                this.middlenameField = value;
            }
        }
        
        /// <remarks/>
        public string address_line1 {
            get {
                return this.address_line1Field;
            }
            set {
                this.address_line1Field = value;
            }
        }
        
        /// <remarks/>
        public string address_line2 {
            get {
                return this.address_line2Field;
            }
            set {
                this.address_line2Field = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                this.zip_codeField = value;
            }
        }
        
        /// <remarks/>
        public string po_box {
            get {
                return this.po_boxField;
            }
            set {
                this.po_boxField = value;
            }
        }
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string title_rcd {
            get {
                return this.title_rcdField;
            }
            set {
                this.title_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string external_payment_reference {
            get {
                return this.external_payment_referenceField;
            }
            set {
                this.external_payment_referenceField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string cost_center {
            get {
                return this.cost_centerField;
            }
            set {
                this.cost_centerField = value;
            }
        }
        
        /// <remarks/>
        public string purchase_order {
            get {
                return this.purchase_orderField;
            }
            set {
                this.purchase_orderField = value;
            }
        }
        
        /// <remarks/>
        public string project_number {
            get {
                return this.project_numberField;
            }
            set {
                this.project_numberField = value;
            }
        }
        
        /// <remarks/>
        public string lock_name {
            get {
                return this.lock_nameField;
            }
            set {
                this.lock_nameField = value;
            }
        }
        
        /// <remarks/>
        public string ip_address {
            get {
                return this.ip_addressField;
            }
            set {
                this.ip_addressField = value;
            }
        }
        
        /// <remarks/>
        public byte approval_flag {
            get {
                return this.approval_flagField;
            }
            set {
                this.approval_flagField = value;
            }
        }
        
        /// <remarks/>
        public string invoice_receiver {
            get {
                return this.invoice_receiverField;
            }
            set {
                this.invoice_receiverField = value;
            }
        }
        
        /// <remarks/>
        public string tax_id {
            get {
                return this.tax_idField;
            }
            set {
                this.tax_idField = value;
            }
        }
        
        /// <remarks/>
        public string agency_tax_id {
            get {
                return this.agency_tax_idField;
            }
            set {
                this.agency_tax_idField = value;
            }
        }
        
        /// <remarks/>
        public byte newsletter_flag {
            get {
                return this.newsletter_flagField;
            }
            set {
                this.newsletter_flagField = value;
            }
        }
        
        /// <remarks/>
        public string contact_email_cc {
            get {
                return this.contact_email_ccField;
            }
            set {
                this.contact_email_ccField = value;
            }
        }
        
        /// <remarks/>
        public string mobile_email {
            get {
                return this.mobile_emailField;
            }
            set {
                this.mobile_emailField = value;
            }
        }
        
        /// <remarks/>
        public string vendor_rcd {
            get {
                return this.vendor_rcdField;
            }
            set {
                this.vendor_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime booking_date_time {
            get {
                return this.booking_date_timeField;
            }
            set {
                this.booking_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string notify_by_rcd {
            get {
                return this.notify_by_rcdField;
            }
            set {
                this.notify_by_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte no_vat_flag {
            get {
                return this.no_vat_flagField;
            }
            set {
                this.no_vat_flagField = value;
            }
        }
        
        /// <remarks/>
        public string company_name {
            get {
                return this.company_nameField;
            }
            set {
                this.company_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte business_flag {
            get {
                return this.business_flagField;
            }
            set {
                this.business_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte standby_flag {
            get {
                return this.standby_flagField;
            }
            set {
                this.standby_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte disable_changes_through_b2c_flag {
            get {
                return this.disable_changes_through_b2c_flagField;
            }
            set {
                this.disable_changes_through_b2c_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class AgencyAccount {
        
        private string agency_codeField;
        
        private string agency_nameField;
        
        private byte own_agency_flagField;
        
        private byte airport_ticket_office_flagField;
        
        private byte city_sales_office_flagField;
        
        private byte web_agency_flagField;
        
        private System.Guid create_byField;
        
        private string airport_rcdField;
        
        private System.DateTime create_date_timeField;
        
        private System.Guid update_byField;
        
        private System.DateTime update_date_timeField;
        
        private string language_rcdField;
        
        private string agency_logonField;
        
        private string agency_passwordField;
        
        private byte default_e_ticket_flagField;
        
        private byte default_show_passenger_flagField;
        
        private byte default_auto_print_ticket_flagField;
        
        private byte default_ticket_on_save_flagField;
        
        private byte default_ticket_on_payment_flagField;
        
        private string status_codeField;
        
        private string contact_personField;
        
        private string address_line1Field;
        
        private string address_line2Field;
        
        private string streetField;
        
        private string stateField;
        
        private string districtField;
        
        private string provinceField;
        
        private string cityField;
        
        private string zip_codeField;
        
        private string po_boxField;
        
        private string iata_numberField;
        
        private string phoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string website_addressField;
        
        private string currency_rcdField;
        
        private string country_rcdField;
        
        private string agency_payment_type_rcdField;
        
        private string tax_idField;
        
        private string legal_nameField;
        
        private byte default_payment_on_save_flagField;
        
        private byte receive_commission_flagField;
        
        private int invoice_daysField;
        
        private byte checkin_hide_birthdate_flagField;
        
        private byte checkin_hide_ticket_flagField;
        
        private byte checkin_hide_payment_flagField;
        
        private byte checkin_hide_eticket_flagField;
        
        private byte hide_history_remarks_flagField;
        
        private decimal commission_percentageField;
        
        private string external_ar_accountField;
        
        private string default_fare_typeField;
        
        private string tty_addressField;
        
        private byte manual_creditcard_handling_flagField;
        
        private byte prompt_address_for_cc_flagField;
        
        private byte hide_airimp_remarks_flagField;
        
        private byte exclude_availability_quote_flagField;
        
        private string merchant_accountField;
        
        private string ticket_agency_addressField;
        
        private byte auto_account_fee_flagField;
        
        private byte ticket_require_payment_flagField;
        
        private string pos_indicatorField;
        
        private string export_cycle_codeField;
        
        private byte b2b_credit_agency_and_invoice_flagField;
        
        private byte b2b_credit_card_payment_flagField;
        
        private byte b2b_voucher_payment_flagField;
        
        private byte b2b_post_paid_flagField;
        
        private byte b2b_download_sales_report_flagField;
        
        private byte b2b_allow_seat_assignment_flagField;
        
        private byte b2b_allow_cancel_segment_flagField;
        
        private byte b2b_allow_change_flight_flagField;
        
        private byte b2b_allow_name_change_flagField;
        
        private byte b2b_allow_change_details_flagField;
        
        private byte b2b_show_remarks_flagField;
        
        private byte online_creditcard_handling_flagField;
        
        private byte ticket_stock_flagField;
        
        private byte b2b_allow_waitlist_flagField;
        
        private byte b2b_allow_group_flagField;
        
        private byte b2b_allow_split_flagField;
        
        private byte b2b_allow_service_flagField;
        
        private byte private_fares_flagField;
        
        private byte process_ret_flagField;
        
        private byte b2b_bsp_billing_flagField;
        
        private System.DateTime b2b_bsp_from_dateField;
        
        private byte avl_show_net_total_flagField;
        
        private byte b2b_group_waitlist_flagField;
        
        private byte email_invoice_flagField;
        
        private string accounting_emailField;
        
        private byte log_availability_flagField;
        
        private decimal withholding_tax_percentageField;
        
        private byte commission_topup_flagField;
        
        private byte balance_lock_flagField;
        
        private string commentField;
        
        private System.Guid default_user_account_idField;
        
        private System.Guid merchant_idField;
        
        private string cashbook_closing_rcdField;
        
        private System.Guid cashbook_closing_idField;
        
        private string cashbook_agency_group_rcdField;
        
        private byte consolidator_flagField;
        
        private string consolidator_agency_codeField;
        
        private System.Guid tax_id_verified_byField;
        
        private System.DateTime tax_id_verified_date_timeField;
        
        private byte individual_firmed_flagField;
        
        private byte individual_waitlist_flagField;
        
        private byte group_firmed_flagField;
        
        private byte group_waitlist_flagField;
        
        /// <remarks/>
        public string agency_code {
            get {
                return this.agency_codeField;
            }
            set {
                this.agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public string agency_name {
            get {
                return this.agency_nameField;
            }
            set {
                this.agency_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte own_agency_flag {
            get {
                return this.own_agency_flagField;
            }
            set {
                this.own_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte airport_ticket_office_flag {
            get {
                return this.airport_ticket_office_flagField;
            }
            set {
                this.airport_ticket_office_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte city_sales_office_flag {
            get {
                return this.city_sales_office_flagField;
            }
            set {
                this.city_sales_office_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte web_agency_flag {
            get {
                return this.web_agency_flagField;
            }
            set {
                this.web_agency_flagField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public string airport_rcd {
            get {
                return this.airport_rcdField;
            }
            set {
                this.airport_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string agency_logon {
            get {
                return this.agency_logonField;
            }
            set {
                this.agency_logonField = value;
            }
        }
        
        /// <remarks/>
        public string agency_password {
            get {
                return this.agency_passwordField;
            }
            set {
                this.agency_passwordField = value;
            }
        }
        
        /// <remarks/>
        public byte default_e_ticket_flag {
            get {
                return this.default_e_ticket_flagField;
            }
            set {
                this.default_e_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_show_passenger_flag {
            get {
                return this.default_show_passenger_flagField;
            }
            set {
                this.default_show_passenger_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_auto_print_ticket_flag {
            get {
                return this.default_auto_print_ticket_flagField;
            }
            set {
                this.default_auto_print_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_ticket_on_save_flag {
            get {
                return this.default_ticket_on_save_flagField;
            }
            set {
                this.default_ticket_on_save_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte default_ticket_on_payment_flag {
            get {
                return this.default_ticket_on_payment_flagField;
            }
            set {
                this.default_ticket_on_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public string contact_person {
            get {
                return this.contact_personField;
            }
            set {
                this.contact_personField = value;
            }
        }
        
        /// <remarks/>
        public string address_line1 {
            get {
                return this.address_line1Field;
            }
            set {
                this.address_line1Field = value;
            }
        }
        
        /// <remarks/>
        public string address_line2 {
            get {
                return this.address_line2Field;
            }
            set {
                this.address_line2Field = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                this.zip_codeField = value;
            }
        }
        
        /// <remarks/>
        public string po_box {
            get {
                return this.po_boxField;
            }
            set {
                this.po_boxField = value;
            }
        }
        
        /// <remarks/>
        public string iata_number {
            get {
                return this.iata_numberField;
            }
            set {
                this.iata_numberField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string website_address {
            get {
                return this.website_addressField;
            }
            set {
                this.website_addressField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string agency_payment_type_rcd {
            get {
                return this.agency_payment_type_rcdField;
            }
            set {
                this.agency_payment_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string tax_id {
            get {
                return this.tax_idField;
            }
            set {
                this.tax_idField = value;
            }
        }
        
        /// <remarks/>
        public string legal_name {
            get {
                return this.legal_nameField;
            }
            set {
                this.legal_nameField = value;
            }
        }
        
        /// <remarks/>
        public byte default_payment_on_save_flag {
            get {
                return this.default_payment_on_save_flagField;
            }
            set {
                this.default_payment_on_save_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte receive_commission_flag {
            get {
                return this.receive_commission_flagField;
            }
            set {
                this.receive_commission_flagField = value;
            }
        }
        
        /// <remarks/>
        public int invoice_days {
            get {
                return this.invoice_daysField;
            }
            set {
                this.invoice_daysField = value;
            }
        }
        
        /// <remarks/>
        public byte checkin_hide_birthdate_flag {
            get {
                return this.checkin_hide_birthdate_flagField;
            }
            set {
                this.checkin_hide_birthdate_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte checkin_hide_ticket_flag {
            get {
                return this.checkin_hide_ticket_flagField;
            }
            set {
                this.checkin_hide_ticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte checkin_hide_payment_flag {
            get {
                return this.checkin_hide_payment_flagField;
            }
            set {
                this.checkin_hide_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte checkin_hide_eticket_flag {
            get {
                return this.checkin_hide_eticket_flagField;
            }
            set {
                this.checkin_hide_eticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte hide_history_remarks_flag {
            get {
                return this.hide_history_remarks_flagField;
            }
            set {
                this.hide_history_remarks_flagField = value;
            }
        }
        
        /// <remarks/>
        public decimal commission_percentage {
            get {
                return this.commission_percentageField;
            }
            set {
                this.commission_percentageField = value;
            }
        }
        
        /// <remarks/>
        public string external_ar_account {
            get {
                return this.external_ar_accountField;
            }
            set {
                this.external_ar_accountField = value;
            }
        }
        
        /// <remarks/>
        public string default_fare_type {
            get {
                return this.default_fare_typeField;
            }
            set {
                this.default_fare_typeField = value;
            }
        }
        
        /// <remarks/>
        public string tty_address {
            get {
                return this.tty_addressField;
            }
            set {
                this.tty_addressField = value;
            }
        }
        
        /// <remarks/>
        public byte manual_creditcard_handling_flag {
            get {
                return this.manual_creditcard_handling_flagField;
            }
            set {
                this.manual_creditcard_handling_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte prompt_address_for_cc_flag {
            get {
                return this.prompt_address_for_cc_flagField;
            }
            set {
                this.prompt_address_for_cc_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte hide_airimp_remarks_flag {
            get {
                return this.hide_airimp_remarks_flagField;
            }
            set {
                this.hide_airimp_remarks_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte exclude_availability_quote_flag {
            get {
                return this.exclude_availability_quote_flagField;
            }
            set {
                this.exclude_availability_quote_flagField = value;
            }
        }
        
        /// <remarks/>
        public string merchant_account {
            get {
                return this.merchant_accountField;
            }
            set {
                this.merchant_accountField = value;
            }
        }
        
        /// <remarks/>
        public string ticket_agency_address {
            get {
                return this.ticket_agency_addressField;
            }
            set {
                this.ticket_agency_addressField = value;
            }
        }
        
        /// <remarks/>
        public byte auto_account_fee_flag {
            get {
                return this.auto_account_fee_flagField;
            }
            set {
                this.auto_account_fee_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte ticket_require_payment_flag {
            get {
                return this.ticket_require_payment_flagField;
            }
            set {
                this.ticket_require_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public string pos_indicator {
            get {
                return this.pos_indicatorField;
            }
            set {
                this.pos_indicatorField = value;
            }
        }
        
        /// <remarks/>
        public string export_cycle_code {
            get {
                return this.export_cycle_codeField;
            }
            set {
                this.export_cycle_codeField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_credit_agency_and_invoice_flag {
            get {
                return this.b2b_credit_agency_and_invoice_flagField;
            }
            set {
                this.b2b_credit_agency_and_invoice_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_credit_card_payment_flag {
            get {
                return this.b2b_credit_card_payment_flagField;
            }
            set {
                this.b2b_credit_card_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_voucher_payment_flag {
            get {
                return this.b2b_voucher_payment_flagField;
            }
            set {
                this.b2b_voucher_payment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_post_paid_flag {
            get {
                return this.b2b_post_paid_flagField;
            }
            set {
                this.b2b_post_paid_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_download_sales_report_flag {
            get {
                return this.b2b_download_sales_report_flagField;
            }
            set {
                this.b2b_download_sales_report_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_seat_assignment_flag {
            get {
                return this.b2b_allow_seat_assignment_flagField;
            }
            set {
                this.b2b_allow_seat_assignment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_cancel_segment_flag {
            get {
                return this.b2b_allow_cancel_segment_flagField;
            }
            set {
                this.b2b_allow_cancel_segment_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_change_flight_flag {
            get {
                return this.b2b_allow_change_flight_flagField;
            }
            set {
                this.b2b_allow_change_flight_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_name_change_flag {
            get {
                return this.b2b_allow_name_change_flagField;
            }
            set {
                this.b2b_allow_name_change_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_change_details_flag {
            get {
                return this.b2b_allow_change_details_flagField;
            }
            set {
                this.b2b_allow_change_details_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_show_remarks_flag {
            get {
                return this.b2b_show_remarks_flagField;
            }
            set {
                this.b2b_show_remarks_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte online_creditcard_handling_flag {
            get {
                return this.online_creditcard_handling_flagField;
            }
            set {
                this.online_creditcard_handling_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte ticket_stock_flag {
            get {
                return this.ticket_stock_flagField;
            }
            set {
                this.ticket_stock_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_waitlist_flag {
            get {
                return this.b2b_allow_waitlist_flagField;
            }
            set {
                this.b2b_allow_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_group_flag {
            get {
                return this.b2b_allow_group_flagField;
            }
            set {
                this.b2b_allow_group_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_split_flag {
            get {
                return this.b2b_allow_split_flagField;
            }
            set {
                this.b2b_allow_split_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_allow_service_flag {
            get {
                return this.b2b_allow_service_flagField;
            }
            set {
                this.b2b_allow_service_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte private_fares_flag {
            get {
                return this.private_fares_flagField;
            }
            set {
                this.private_fares_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte process_ret_flag {
            get {
                return this.process_ret_flagField;
            }
            set {
                this.process_ret_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_bsp_billing_flag {
            get {
                return this.b2b_bsp_billing_flagField;
            }
            set {
                this.b2b_bsp_billing_flagField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime b2b_bsp_from_date {
            get {
                return this.b2b_bsp_from_dateField;
            }
            set {
                this.b2b_bsp_from_dateField = value;
            }
        }
        
        /// <remarks/>
        public byte avl_show_net_total_flag {
            get {
                return this.avl_show_net_total_flagField;
            }
            set {
                this.avl_show_net_total_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte b2b_group_waitlist_flag {
            get {
                return this.b2b_group_waitlist_flagField;
            }
            set {
                this.b2b_group_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte email_invoice_flag {
            get {
                return this.email_invoice_flagField;
            }
            set {
                this.email_invoice_flagField = value;
            }
        }
        
        /// <remarks/>
        public string accounting_email {
            get {
                return this.accounting_emailField;
            }
            set {
                this.accounting_emailField = value;
            }
        }
        
        /// <remarks/>
        public byte log_availability_flag {
            get {
                return this.log_availability_flagField;
            }
            set {
                this.log_availability_flagField = value;
            }
        }
        
        /// <remarks/>
        public decimal withholding_tax_percentage {
            get {
                return this.withholding_tax_percentageField;
            }
            set {
                this.withholding_tax_percentageField = value;
            }
        }
        
        /// <remarks/>
        public byte commission_topup_flag {
            get {
                return this.commission_topup_flagField;
            }
            set {
                this.commission_topup_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte balance_lock_flag {
            get {
                return this.balance_lock_flagField;
            }
            set {
                this.balance_lock_flagField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid default_user_account_id {
            get {
                return this.default_user_account_idField;
            }
            set {
                this.default_user_account_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid merchant_id {
            get {
                return this.merchant_idField;
            }
            set {
                this.merchant_idField = value;
            }
        }
        
        /// <remarks/>
        public string cashbook_closing_rcd {
            get {
                return this.cashbook_closing_rcdField;
            }
            set {
                this.cashbook_closing_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid cashbook_closing_id {
            get {
                return this.cashbook_closing_idField;
            }
            set {
                this.cashbook_closing_idField = value;
            }
        }
        
        /// <remarks/>
        public string cashbook_agency_group_rcd {
            get {
                return this.cashbook_agency_group_rcdField;
            }
            set {
                this.cashbook_agency_group_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte consolidator_flag {
            get {
                return this.consolidator_flagField;
            }
            set {
                this.consolidator_flagField = value;
            }
        }
        
        /// <remarks/>
        public string consolidator_agency_code {
            get {
                return this.consolidator_agency_codeField;
            }
            set {
                this.consolidator_agency_codeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid tax_id_verified_by {
            get {
                return this.tax_id_verified_byField;
            }
            set {
                this.tax_id_verified_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime tax_id_verified_date_time {
            get {
                return this.tax_id_verified_date_timeField;
            }
            set {
                this.tax_id_verified_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public byte individual_firmed_flag {
            get {
                return this.individual_firmed_flagField;
            }
            set {
                this.individual_firmed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte individual_waitlist_flag {
            get {
                return this.individual_waitlist_flagField;
            }
            set {
                this.individual_waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte group_firmed_flag {
            get {
                return this.group_firmed_flagField;
            }
            set {
                this.group_firmed_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte group_waitlist_flag {
            get {
                return this.group_waitlist_flagField;
            }
            set {
                this.group_waitlist_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class WsWrapper {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private AgencyAccount[] agenciesField;
        
        private BookingHeader headerField;
        
        /// <remarks/>
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public AgencyAccount[] Agencies {
            get {
                return this.agenciesField;
            }
            set {
                this.agenciesField = value;
            }
        }
        
        /// <remarks/>
        public BookingHeader Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Language {
        
        private string language_rcdField;
        
        private string display_nameField;
        
        private string character_setField;
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string character_set {
            get {
                return this.character_setField;
            }
            set {
                this.character_setField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Country {
        
        private string country_rcdField;
        
        private string display_nameField;
        
        private string status_codeField;
        
        private string currency_rcdField;
        
        private string vat_displayField;
        
        private string country_code_longField;
        
        private string country_numberField;
        
        private string phone_prefixField;
        
        private byte issue_country_flagField;
        
        private byte residence_country_flagField;
        
        private byte nationality_country_flagField;
        
        private byte address_country_flagField;
        
        private byte agency_country_flagField;
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public string currency_rcd {
            get {
                return this.currency_rcdField;
            }
            set {
                this.currency_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string vat_display {
            get {
                return this.vat_displayField;
            }
            set {
                this.vat_displayField = value;
            }
        }
        
        /// <remarks/>
        public string country_code_long {
            get {
                return this.country_code_longField;
            }
            set {
                this.country_code_longField = value;
            }
        }
        
        /// <remarks/>
        public string country_number {
            get {
                return this.country_numberField;
            }
            set {
                this.country_numberField = value;
            }
        }
        
        /// <remarks/>
        public string phone_prefix {
            get {
                return this.phone_prefixField;
            }
            set {
                this.phone_prefixField = value;
            }
        }
        
        /// <remarks/>
        public byte issue_country_flag {
            get {
                return this.issue_country_flagField;
            }
            set {
                this.issue_country_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte residence_country_flag {
            get {
                return this.residence_country_flagField;
            }
            set {
                this.residence_country_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte nationality_country_flag {
            get {
                return this.nationality_country_flagField;
            }
            set {
                this.nationality_country_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte address_country_flag {
            get {
                return this.address_country_flagField;
            }
            set {
                this.address_country_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte agency_country_flag {
            get {
                return this.agency_country_flagField;
            }
            set {
                this.agency_country_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Document {
        
        private string document_type_rcdField;
        
        private string display_nameField;
        
        /// <remarks/>
        public string document_type_rcd {
            get {
                return this.document_type_rcdField;
            }
            set {
                this.document_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Title {
        
        private string title_rcdField;
        
        private string display_nameField;
        
        private string gender_type_rcdField;
        
        /// <remarks/>
        public string title_rcd {
            get {
                return this.title_rcdField;
            }
            set {
                this.title_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string gender_type_rcd {
            get {
                return this.gender_type_rcdField;
            }
            set {
                this.gender_type_rcdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Passenger))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Client))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public abstract partial class People {
        
        private string title_rcdField;
        
        private string lastnameField;
        
        private string firstnameField;
        
        private string middlenameField;
        
        private string language_rcdField;
        
        private string nationality_rcdField;
        
        private decimal passenger_weightField;
        
        private string gender_type_rcdField;
        
        private string passenger_type_rcdField;
        
        private System.Guid client_profile_idField;
        
        private long client_numberField;
        
        private string known_traveler_numberField;
        
        private string address_line1Field;
        
        private string address_line2Field;
        
        private string stateField;
        
        private string districtField;
        
        private string provinceField;
        
        private string zip_codeField;
        
        private string po_boxField;
        
        private string country_rcdField;
        
        private string streetField;
        
        private string cityField;
        
        private string document_type_rcdField;
        
        private string document_numberField;
        
        private string residence_country_rcdField;
        
        private string passport_numberField;
        
        private System.DateTime passport_issue_dateField;
        
        private System.DateTime passport_expiry_dateField;
        
        private string passport_issue_placeField;
        
        private string passport_birth_placeField;
        
        private System.DateTime date_of_birthField;
        
        private string passport_issue_country_rcdField;
        
        private string contact_nameField;
        
        private string contact_emailField;
        
        private string mobile_emailField;
        
        private string phone_mobileField;
        
        private string phone_homeField;
        
        private string phone_faxField;
        
        private string phone_businessField;
        
        private string received_fromField;
        
        private System.Guid create_byField;
        
        private System.DateTime create_date_timeField;
        
        private System.Guid update_byField;
        
        private System.DateTime update_date_timeField;
        
        /// <remarks/>
        public string title_rcd {
            get {
                return this.title_rcdField;
            }
            set {
                this.title_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                this.lastnameField = value;
            }
        }
        
        /// <remarks/>
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                this.firstnameField = value;
            }
        }
        
        /// <remarks/>
        public string middlename {
            get {
                return this.middlenameField;
            }
            set {
                this.middlenameField = value;
            }
        }
        
        /// <remarks/>
        public string language_rcd {
            get {
                return this.language_rcdField;
            }
            set {
                this.language_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string nationality_rcd {
            get {
                return this.nationality_rcdField;
            }
            set {
                this.nationality_rcdField = value;
            }
        }
        
        /// <remarks/>
        public decimal passenger_weight {
            get {
                return this.passenger_weightField;
            }
            set {
                this.passenger_weightField = value;
            }
        }
        
        /// <remarks/>
        public string gender_type_rcd {
            get {
                return this.gender_type_rcdField;
            }
            set {
                this.gender_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_type_rcd {
            get {
                return this.passenger_type_rcdField;
            }
            set {
                this.passenger_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid client_profile_id {
            get {
                return this.client_profile_idField;
            }
            set {
                this.client_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public long client_number {
            get {
                return this.client_numberField;
            }
            set {
                this.client_numberField = value;
            }
        }
        
        /// <remarks/>
        public string known_traveler_number {
            get {
                return this.known_traveler_numberField;
            }
            set {
                this.known_traveler_numberField = value;
            }
        }
        
        /// <remarks/>
        public string address_line1 {
            get {
                return this.address_line1Field;
            }
            set {
                this.address_line1Field = value;
            }
        }
        
        /// <remarks/>
        public string address_line2 {
            get {
                return this.address_line2Field;
            }
            set {
                this.address_line2Field = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                this.zip_codeField = value;
            }
        }
        
        /// <remarks/>
        public string po_box {
            get {
                return this.po_boxField;
            }
            set {
                this.po_boxField = value;
            }
        }
        
        /// <remarks/>
        public string country_rcd {
            get {
                return this.country_rcdField;
            }
            set {
                this.country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string document_type_rcd {
            get {
                return this.document_type_rcdField;
            }
            set {
                this.document_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string document_number {
            get {
                return this.document_numberField;
            }
            set {
                this.document_numberField = value;
            }
        }
        
        /// <remarks/>
        public string residence_country_rcd {
            get {
                return this.residence_country_rcdField;
            }
            set {
                this.residence_country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string passport_number {
            get {
                return this.passport_numberField;
            }
            set {
                this.passport_numberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime passport_issue_date {
            get {
                return this.passport_issue_dateField;
            }
            set {
                this.passport_issue_dateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime passport_expiry_date {
            get {
                return this.passport_expiry_dateField;
            }
            set {
                this.passport_expiry_dateField = value;
            }
        }
        
        /// <remarks/>
        public string passport_issue_place {
            get {
                return this.passport_issue_placeField;
            }
            set {
                this.passport_issue_placeField = value;
            }
        }
        
        /// <remarks/>
        public string passport_birth_place {
            get {
                return this.passport_birth_placeField;
            }
            set {
                this.passport_birth_placeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime date_of_birth {
            get {
                return this.date_of_birthField;
            }
            set {
                this.date_of_birthField = value;
            }
        }
        
        /// <remarks/>
        public string passport_issue_country_rcd {
            get {
                return this.passport_issue_country_rcdField;
            }
            set {
                this.passport_issue_country_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string contact_name {
            get {
                return this.contact_nameField;
            }
            set {
                this.contact_nameField = value;
            }
        }
        
        /// <remarks/>
        public string contact_email {
            get {
                return this.contact_emailField;
            }
            set {
                this.contact_emailField = value;
            }
        }
        
        /// <remarks/>
        public string mobile_email {
            get {
                return this.mobile_emailField;
            }
            set {
                this.mobile_emailField = value;
            }
        }
        
        /// <remarks/>
        public string phone_mobile {
            get {
                return this.phone_mobileField;
            }
            set {
                this.phone_mobileField = value;
            }
        }
        
        /// <remarks/>
        public string phone_home {
            get {
                return this.phone_homeField;
            }
            set {
                this.phone_homeField = value;
            }
        }
        
        /// <remarks/>
        public string phone_fax {
            get {
                return this.phone_faxField;
            }
            set {
                this.phone_faxField = value;
            }
        }
        
        /// <remarks/>
        public string phone_business {
            get {
                return this.phone_businessField;
            }
            set {
                this.phone_businessField = value;
            }
        }
        
        /// <remarks/>
        public string received_from {
            get {
                return this.received_fromField;
            }
            set {
                this.received_fromField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid create_by {
            get {
                return this.create_byField;
            }
            set {
                this.create_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime create_date_time {
            get {
                return this.create_date_timeField;
            }
            set {
                this.create_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid update_by {
            get {
                return this.update_byField;
            }
            set {
                this.update_byField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime update_date_time {
            get {
                return this.update_date_timeField;
            }
            set {
                this.update_date_timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Client))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Passenger : People {
        
        private System.Guid passenger_idField;
        
        private System.Guid booking_idField;
        
        private System.Guid passenger_profile_idField;
        
        private string passenger_status_rcdField;
        
        private string employee_numberField;
        
        private byte wheelchair_flagField;
        
        private byte vip_flagField;
        
        private string passenger_role_rcdField;
        
        private string member_level_rcdField;
        
        private string member_numberField;
        
        private byte window_seat_flagField;
        
        private string company_phone_homeField;
        
        private string company_phone_businessField;
        
        private string company_phone_mobileField;
        
        private string redress_numberField;
        
        private string pnr_nameField;
        
        private string nationality_display_nameField;
        
        private string passport_issue_country_display_nameField;
        
        private string airport_rcdField;
        
        private byte subscribe_newsletter_flagField;
        
        private string commentField;
        
        private string medical_conditionsField;
        
        /// <remarks/>
        public System.Guid passenger_id {
            get {
                return this.passenger_idField;
            }
            set {
                this.passenger_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid booking_id {
            get {
                return this.booking_idField;
            }
            set {
                this.booking_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid passenger_profile_id {
            get {
                return this.passenger_profile_idField;
            }
            set {
                this.passenger_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_status_rcd {
            get {
                return this.passenger_status_rcdField;
            }
            set {
                this.passenger_status_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string employee_number {
            get {
                return this.employee_numberField;
            }
            set {
                this.employee_numberField = value;
            }
        }
        
        /// <remarks/>
        public byte wheelchair_flag {
            get {
                return this.wheelchair_flagField;
            }
            set {
                this.wheelchair_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte vip_flag {
            get {
                return this.vip_flagField;
            }
            set {
                this.vip_flagField = value;
            }
        }
        
        /// <remarks/>
        public string passenger_role_rcd {
            get {
                return this.passenger_role_rcdField;
            }
            set {
                this.passenger_role_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string member_level_rcd {
            get {
                return this.member_level_rcdField;
            }
            set {
                this.member_level_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string member_number {
            get {
                return this.member_numberField;
            }
            set {
                this.member_numberField = value;
            }
        }
        
        /// <remarks/>
        public byte window_seat_flag {
            get {
                return this.window_seat_flagField;
            }
            set {
                this.window_seat_flagField = value;
            }
        }
        
        /// <remarks/>
        public string company_phone_home {
            get {
                return this.company_phone_homeField;
            }
            set {
                this.company_phone_homeField = value;
            }
        }
        
        /// <remarks/>
        public string company_phone_business {
            get {
                return this.company_phone_businessField;
            }
            set {
                this.company_phone_businessField = value;
            }
        }
        
        /// <remarks/>
        public string company_phone_mobile {
            get {
                return this.company_phone_mobileField;
            }
            set {
                this.company_phone_mobileField = value;
            }
        }
        
        /// <remarks/>
        public string redress_number {
            get {
                return this.redress_numberField;
            }
            set {
                this.redress_numberField = value;
            }
        }
        
        /// <remarks/>
        public string pnr_name {
            get {
                return this.pnr_nameField;
            }
            set {
                this.pnr_nameField = value;
            }
        }
        
        /// <remarks/>
        public string nationality_display_name {
            get {
                return this.nationality_display_nameField;
            }
            set {
                this.nationality_display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string passport_issue_country_display_name {
            get {
                return this.passport_issue_country_display_nameField;
            }
            set {
                this.passport_issue_country_display_nameField = value;
            }
        }
        
        /// <remarks/>
        public string airport_rcd {
            get {
                return this.airport_rcdField;
            }
            set {
                this.airport_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte subscribe_newsletter_flag {
            get {
                return this.subscribe_newsletter_flagField;
            }
            set {
                this.subscribe_newsletter_flagField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string medical_conditions {
            get {
                return this.medical_conditionsField;
            }
            set {
                this.medical_conditionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Client : Passenger {
        
        private string status_codeField;
        
        private string client_passwordField;
        
        private byte company_flagField;
        
        private System.DateTime profile_on_hold_date_timeField;
        
        private string profile_on_hold_commentField;
        
        private System.Guid profile_on_hold_byField;
        
        private System.Guid company_client_profile_idField;
        
        private double ffp_totalField;
        
        private double ffp_periodField;
        
        private double ffp_balanceField;
        
        private string client_type_rcdField;
        
        private System.DateTime member_since_dateField;
        
        private string member_level_display_nameField;
        
        private double keep_pointField;
        
        private string origin_rcdField;
        
        private string destination_rcdField;
        
        private short lock_on_to_book_flagField;
        
        private short lock_on_to_report_flagField;
        
        private bool allow_ffp_redemption_flagField;
        
        /// <remarks/>
        public string status_code {
            get {
                return this.status_codeField;
            }
            set {
                this.status_codeField = value;
            }
        }
        
        /// <remarks/>
        public string client_password {
            get {
                return this.client_passwordField;
            }
            set {
                this.client_passwordField = value;
            }
        }
        
        /// <remarks/>
        public byte company_flag {
            get {
                return this.company_flagField;
            }
            set {
                this.company_flagField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime profile_on_hold_date_time {
            get {
                return this.profile_on_hold_date_timeField;
            }
            set {
                this.profile_on_hold_date_timeField = value;
            }
        }
        
        /// <remarks/>
        public string profile_on_hold_comment {
            get {
                return this.profile_on_hold_commentField;
            }
            set {
                this.profile_on_hold_commentField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid profile_on_hold_by {
            get {
                return this.profile_on_hold_byField;
            }
            set {
                this.profile_on_hold_byField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid company_client_profile_id {
            get {
                return this.company_client_profile_idField;
            }
            set {
                this.company_client_profile_idField = value;
            }
        }
        
        /// <remarks/>
        public double ffp_total {
            get {
                return this.ffp_totalField;
            }
            set {
                this.ffp_totalField = value;
            }
        }
        
        /// <remarks/>
        public double ffp_period {
            get {
                return this.ffp_periodField;
            }
            set {
                this.ffp_periodField = value;
            }
        }
        
        /// <remarks/>
        public double ffp_balance {
            get {
                return this.ffp_balanceField;
            }
            set {
                this.ffp_balanceField = value;
            }
        }
        
        /// <remarks/>
        public string client_type_rcd {
            get {
                return this.client_type_rcdField;
            }
            set {
                this.client_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime member_since_date {
            get {
                return this.member_since_dateField;
            }
            set {
                this.member_since_dateField = value;
            }
        }
        
        /// <remarks/>
        public string member_level_display_name {
            get {
                return this.member_level_display_nameField;
            }
            set {
                this.member_level_display_nameField = value;
            }
        }
        
        /// <remarks/>
        public double keep_point {
            get {
                return this.keep_pointField;
            }
            set {
                this.keep_pointField = value;
            }
        }
        
        /// <remarks/>
        public string origin_rcd {
            get {
                return this.origin_rcdField;
            }
            set {
                this.origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string destination_rcd {
            get {
                return this.destination_rcdField;
            }
            set {
                this.destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public short lock_on_to_book_flag {
            get {
                return this.lock_on_to_book_flagField;
            }
            set {
                this.lock_on_to_book_flagField = value;
            }
        }
        
        /// <remarks/>
        public short lock_on_to_report_flag {
            get {
                return this.lock_on_to_report_flagField;
            }
            set {
                this.lock_on_to_report_flagField = value;
            }
        }
        
        /// <remarks/>
        public bool allow_ffp_redemption_flag {
            get {
                return this.allow_ffp_redemption_flagField;
            }
            set {
                this.allow_ffp_redemption_flagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tikAeroWebMain.com/")]
    public partial class Flight : Route {
        
        private System.Guid flight_idField;
        
        private System.Guid exchanged_segment_idField;
        
        private string airline_rcdField;
        
        private string airline_nameField;
        
        private string flight_numberField;
        
        private string operating_airline_rcdField;
        
        private string operating_airline_nameField;
        
        private string operating_flight_numberField;
        
        private byte refundable_flagField;
        
        private byte group_flagField;
        
        private byte non_revenue_flagField;
        
        private byte eticket_flagField;
        
        private byte fare_reductionField;
        
        private System.DateTime departure_dateField;
        
        private System.DateTime arrival_dateField;
        
        private string od_origin_rcdField;
        
        private string od_destination_rcdField;
        
        private byte waitlist_flagField;
        
        private byte overbook_flagField;
        
        private System.Guid flight_connection_idField;
        
        private byte advanced_purchase_flagField;
        
        private int journey_timeField;
        
        private int departure_timeField;
        
        private int arrival_timeField;
        
        private string origin_nameField;
        
        private string destination_nameField;
        
        private string transit_pointsField;
        
        private string transit_points_nameField;
        
        private string transit_airport_rcdField;
        
        private string transit_boarding_class_rcdField;
        
        private string transit_booking_class_rcdField;
        
        private System.Guid transit_flight_idField;
        
        private System.Guid transit_fare_idField;
        
        private System.DateTime transit_departure_dateField;
        
        private System.DateTime transit_arrival_dateField;
        
        private System.Guid fare_idField;
        
        private string booking_class_rcdField;
        
        private string boarding_class_rcdField;
        
        private string aircraft_type_rcdField;
        
        private short planned_departure_timeField;
        
        private short planned_arrival_timeField;
        
        private byte departure_dayOfWeekField;
        
        private byte arrival_dayOfWeekField;
        
        private int departure_monthField;
        
        /// <remarks/>
        public System.Guid flight_id {
            get {
                return this.flight_idField;
            }
            set {
                this.flight_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid exchanged_segment_id {
            get {
                return this.exchanged_segment_idField;
            }
            set {
                this.exchanged_segment_idField = value;
            }
        }
        
        /// <remarks/>
        public string airline_rcd {
            get {
                return this.airline_rcdField;
            }
            set {
                this.airline_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string airline_name {
            get {
                return this.airline_nameField;
            }
            set {
                this.airline_nameField = value;
            }
        }
        
        /// <remarks/>
        public string flight_number {
            get {
                return this.flight_numberField;
            }
            set {
                this.flight_numberField = value;
            }
        }
        
        /// <remarks/>
        public string operating_airline_rcd {
            get {
                return this.operating_airline_rcdField;
            }
            set {
                this.operating_airline_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string operating_airline_name {
            get {
                return this.operating_airline_nameField;
            }
            set {
                this.operating_airline_nameField = value;
            }
        }
        
        /// <remarks/>
        public string operating_flight_number {
            get {
                return this.operating_flight_numberField;
            }
            set {
                this.operating_flight_numberField = value;
            }
        }
        
        /// <remarks/>
        public byte refundable_flag {
            get {
                return this.refundable_flagField;
            }
            set {
                this.refundable_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte group_flag {
            get {
                return this.group_flagField;
            }
            set {
                this.group_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte non_revenue_flag {
            get {
                return this.non_revenue_flagField;
            }
            set {
                this.non_revenue_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte eticket_flag {
            get {
                return this.eticket_flagField;
            }
            set {
                this.eticket_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte fare_reduction {
            get {
                return this.fare_reductionField;
            }
            set {
                this.fare_reductionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime departure_date {
            get {
                return this.departure_dateField;
            }
            set {
                this.departure_dateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime arrival_date {
            get {
                return this.arrival_dateField;
            }
            set {
                this.arrival_dateField = value;
            }
        }
        
        /// <remarks/>
        public string od_origin_rcd {
            get {
                return this.od_origin_rcdField;
            }
            set {
                this.od_origin_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string od_destination_rcd {
            get {
                return this.od_destination_rcdField;
            }
            set {
                this.od_destination_rcdField = value;
            }
        }
        
        /// <remarks/>
        public byte waitlist_flag {
            get {
                return this.waitlist_flagField;
            }
            set {
                this.waitlist_flagField = value;
            }
        }
        
        /// <remarks/>
        public byte overbook_flag {
            get {
                return this.overbook_flagField;
            }
            set {
                this.overbook_flagField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid flight_connection_id {
            get {
                return this.flight_connection_idField;
            }
            set {
                this.flight_connection_idField = value;
            }
        }
        
        /// <remarks/>
        public byte advanced_purchase_flag {
            get {
                return this.advanced_purchase_flagField;
            }
            set {
                this.advanced_purchase_flagField = value;
            }
        }
        
        /// <remarks/>
        public int journey_time {
            get {
                return this.journey_timeField;
            }
            set {
                this.journey_timeField = value;
            }
        }
        
        /// <remarks/>
        public int departure_time {
            get {
                return this.departure_timeField;
            }
            set {
                this.departure_timeField = value;
            }
        }
        
        /// <remarks/>
        public int arrival_time {
            get {
                return this.arrival_timeField;
            }
            set {
                this.arrival_timeField = value;
            }
        }
        
        /// <remarks/>
        public string origin_name {
            get {
                return this.origin_nameField;
            }
            set {
                this.origin_nameField = value;
            }
        }
        
        /// <remarks/>
        public string destination_name {
            get {
                return this.destination_nameField;
            }
            set {
                this.destination_nameField = value;
            }
        }
        
        /// <remarks/>
        public string transit_points {
            get {
                return this.transit_pointsField;
            }
            set {
                this.transit_pointsField = value;
            }
        }
        
        /// <remarks/>
        public string transit_points_name {
            get {
                return this.transit_points_nameField;
            }
            set {
                this.transit_points_nameField = value;
            }
        }
        
        /// <remarks/>
        public string transit_airport_rcd {
            get {
                return this.transit_airport_rcdField;
            }
            set {
                this.transit_airport_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string transit_boarding_class_rcd {
            get {
                return this.transit_boarding_class_rcdField;
            }
            set {
                this.transit_boarding_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string transit_booking_class_rcd {
            get {
                return this.transit_booking_class_rcdField;
            }
            set {
                this.transit_booking_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid transit_flight_id {
            get {
                return this.transit_flight_idField;
            }
            set {
                this.transit_flight_idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid transit_fare_id {
            get {
                return this.transit_fare_idField;
            }
            set {
                this.transit_fare_idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime transit_departure_date {
            get {
                return this.transit_departure_dateField;
            }
            set {
                this.transit_departure_dateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime transit_arrival_date {
            get {
                return this.transit_arrival_dateField;
            }
            set {
                this.transit_arrival_dateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid fare_id {
            get {
                return this.fare_idField;
            }
            set {
                this.fare_idField = value;
            }
        }
        
        /// <remarks/>
        public string booking_class_rcd {
            get {
                return this.booking_class_rcdField;
            }
            set {
                this.booking_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string boarding_class_rcd {
            get {
                return this.boarding_class_rcdField;
            }
            set {
                this.boarding_class_rcdField = value;
            }
        }
        
        /// <remarks/>
        public string aircraft_type_rcd {
            get {
                return this.aircraft_type_rcdField;
            }
            set {
                this.aircraft_type_rcdField = value;
            }
        }
        
        /// <remarks/>
        public short planned_departure_time {
            get {
                return this.planned_departure_timeField;
            }
            set {
                this.planned_departure_timeField = value;
            }
        }
        
        /// <remarks/>
        public short planned_arrival_time {
            get {
                return this.planned_arrival_timeField;
            }
            set {
                this.planned_arrival_timeField = value;
            }
        }
        
        /// <remarks/>
        public byte departure_dayOfWeek {
            get {
                return this.departure_dayOfWeekField;
            }
            set {
                this.departure_dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public byte arrival_dayOfWeek {
            get {
                return this.arrival_dayOfWeekField;
            }
            set {
                this.arrival_dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public int departure_month {
            get {
                return this.departure_monthField;
            }
            set {
                this.departure_monthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCoporateSessionProfileCompletedEventHandler(object sender, GetCoporateSessionProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoporateSessionProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoporateSessionProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCorporateAgencyClientsCompletedEventHandler(object sender, GetCorporateAgencyClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCorporateAgencyClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCorporateAgencyClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAirlinesCompletedEventHandler(object sender, GetAirlinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAirlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAirlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetOriginsCompletedEventHandler(object sender, GetOriginsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOriginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOriginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Route[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Route[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetDestinationCompletedEventHandler(object sender, GetDestinationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDestinationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDestinationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Route[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Route[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAvailabilityCompletedEventHandler(object sender, GetAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAvailabilityAgencyLoginCompletedEventHandler(object sender, GetAvailabilityAgencyLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityAgencyLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityAgencyLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFlightSummaryAgencyLoginCompletedEventHandler(object sender, GetFlightSummaryAgencyLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightSummaryAgencyLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightSummaryAgencyLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReleaseFlightInventorySessionCompletedEventHandler(object sender, ReleaseFlightInventorySessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseFlightInventorySessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseFlightInventorySessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgencyCodeCompletedEventHandler(object sender, GetAgencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddClientProfileCompletedEventHandler(object sender, AddClientProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReadClientProfileCompletedEventHandler(object sender, ReadClientProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadClientProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadClientProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void EditClientProfileCompletedEventHandler(object sender, EditClientProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditClientProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditClientProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddFlightCompletedEventHandler(object sender, AddFlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddFlightSubloadCompletedEventHandler(object sender, AddFlightSubloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFlightSubloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFlightSubloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetInfantCapacityCompletedEventHandler(object sender, GetInfantCapacityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfantCapacityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfantCapacityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetClientCompletedEventHandler(object sender, GetClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetClientPassengerCompletedEventHandler(object sender, GetClientPassengerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientPassengerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientPassengerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTransactionCompletedEventHandler(object sender, GetTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPassengerTitlesCompletedEventHandler(object sender, GetPassengerTitlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassengerTitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassengerTitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Title[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Title[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetDocumentTypeCompletedEventHandler(object sender, GetDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCountryCompletedEventHandler(object sender, GetCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Country[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Country[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLanguagesCompletedEventHandler(object sender, GetLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Language[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Language[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSeatMapCompletedEventHandler(object sender, GetSeatMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSeatMapLayOutCompletedEventHandler(object sender, GetSeatMapLayOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatMapLayOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatMapLayOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFormOfPaymentsCompletedEventHandler(object sender, GetFormOfPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormOfPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormOfPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFormOfPaymentSubTypesCompletedEventHandler(object sender, GetFormOfPaymentSubTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormOfPaymentSubTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormOfPaymentSubTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReadFormOfPaymentCompletedEventHandler(object sender, ReadFormOfPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadFormOfPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadFormOfPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAirportTimezoneCompletedEventHandler(object sender, GetAirportTimezoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAirportTimezoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAirportTimezoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveBookingCompletedEventHandler(object sender, SaveBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void BookingSaveSubLoadCompletedEventHandler(object sender, BookingSaveSubLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingSaveSubLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingSaveSubLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PaymentSaveCompletedEventHandler(object sender, PaymentSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaymentSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CalculateNewFeesCompletedEventHandler(object sender, CalculateNewFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateNewFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateNewFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVouchersCompletedEventHandler(object sender, GetVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFormOfPaymentSubtypeFeesCompletedEventHandler(object sender, GetFormOfPaymentSubtypeFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormOfPaymentSubtypeFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormOfPaymentSubtypeFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetItineraryCompletedEventHandler(object sender, GetItineraryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItineraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItineraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ItineraryReadCompletedEventHandler(object sender, ItineraryReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ItineraryReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ItineraryReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void QueueMailCompletedEventHandler(object sender, QueueMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueueMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueueMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckUniqueMailAddressCompletedEventHandler(object sender, CheckUniqueMailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUniqueMailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUniqueMailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ServiceAuthenticationCompletedEventHandler(object sender, ServiceAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveBookingCreditCardCompletedEventHandler(object sender, SaveBookingCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBookingCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBookingCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveBookingPaymentCompletedEventHandler(object sender, SaveBookingPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBookingPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBookingPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveBookingMultipleFormOfPaymentCompletedEventHandler(object sender, SaveBookingMultipleFormOfPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBookingMultipleFormOfPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBookingMultipleFormOfPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void BookingLogonCompletedEventHandler(object sender, BookingLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WsWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WsWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSpecialServicesCompletedEventHandler(object sender, GetSpecialServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecialServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Service[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Service[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TravelAgentLogonCompletedEventHandler(object sender, TravelAgentLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TravelAgentLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TravelAgentLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UserSaveCompletedEventHandler(object sender, UserSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgencySessionProfileCompletedEventHandler(object sender, GetAgencySessionProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencySessionProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencySessionProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Agent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Agent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetClientSessionProfileCompletedEventHandler(object sender, GetClientSessionProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientSessionProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientSessionProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFlightSummaryCompletedEventHandler(object sender, GetFlightSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetBookingsCompletedEventHandler(object sender, GetBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetActivitiesCompletedEventHandler(object sender, GetActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetBaggageFeeCompletedEventHandler(object sender, GetBaggageFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaggageFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaggageFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BaggageFeeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BaggageFeeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetActiveBookingsCompletedEventHandler(object sender, GetActiveBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFlownBookingsCompletedEventHandler(object sender, GetFlownBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlownBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlownBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFeeCompletedEventHandler(object sender, GetFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetFeeReponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetFeeReponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SpecialServiceFeeCompletedEventHandler(object sender, SpecialServiceFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialServiceFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialServiceFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SegmentFeeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SegmentFeeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SegmentFeeCompletedEventHandler(object sender, SegmentFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SegmentFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SegmentFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SegmentFeeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SegmentFeeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ClientLogonCompletedEventHandler(object sender, ClientLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void VoucherTemplateListCompletedEventHandler(object sender, VoucherTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoucherTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoucherTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveVoucherCompletedEventHandler(object sender, SaveVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void VoucherPaymentCreditCardCompletedEventHandler(object sender, VoucherPaymentCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoucherPaymentCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoucherPaymentCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ReadVoucherCompletedEventHandler(object sender, ReadVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void VoidVoucherCompletedEventHandler(object sender, VoidVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AgencyRegistrationInsertCompletedEventHandler(object sender, AgencyRegistrationInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgencyRegistrationInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgencyRegistrationInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemarkAddCompletedEventHandler(object sender, RemarkAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarkAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarkAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemarkDeleteCompletedEventHandler(object sender, RemarkDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarkDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarkDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemarkCompleteCompletedEventHandler(object sender, RemarkCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarkCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarkCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemarkReadCompletedEventHandler(object sender, RemarkReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarkReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarkReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemarkSaveCompletedEventHandler(object sender, RemarkSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarkSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarkSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPassengerCompletedEventHandler(object sender, GetPassengerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassengerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassengerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetQueueCountCompletedEventHandler(object sender, GetQueueCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueueCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueueCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSingleFlightCompletedEventHandler(object sender, GetSingleFlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPassengersManifestCompletedEventHandler(object sender, GetPassengersManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassengersManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassengersManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591